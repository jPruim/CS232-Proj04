Script started on Mon 29 Apr 2019 05:13:28 PM EDT
]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ cat typescript*
Script started on Mon 29 Apr 2019 04:55:29 PM EDT
]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ cat /usr/include/dandj*

/* 

 * What: /usr/include/dandjfill2.h

 * Who: Drew Smits and Jason Pruim

 * What: Kernel Project, CS 232

 * Where: Calvin College

 * When: April 2019.

 */



#include <unistd.h>

#include <sys/syscall.h>

#include <sys/types.h>

#include <linux/kernel.h>

#include <pwd.h>

#define SYS_DANDJFILL2 335



static inline

long dandjfill2(char* buf, int n) {

	uid_t uid[1] = {}; long retRes;struct passwd *pws;char user[32];int i;

	retRes = syscall(SYS_DANDJFILL2,uid);

	pws = getpwuid(uid[0]);

	if(pws == NULL) return -2;

	for(i=0;i<32;i++){

		user[i]=pws->pw_name[i];

	}

	for(i = 0;i<n&&i<32;i++){

		buf[i]=user[i];

	}

	return retRes;

}/* 

 * What: /usr/include/dandjfill.h

 * Who: Drew Smits and Jason Pruim

 * What: Kernel Project, CS 232

 * Where: Calvin College

 * When: April 2019.

 */



#include <unistd.h>

#include <sys/syscall.h>



#define SYS_DANDJFILL 334



static inline

long dandjfill(char* name, int n) {

	return syscall(SYS_DANDJFILL,name, n);

}/* 

 * What: /usr/include/dandjprint.h

 * Who: Drew Smits and Jason Pruim

 * What: Kernel Project, CS 232

 * Where: Calvin College

 * When: April 2019.

 */



#include <unistd.h>

#include <sys/syscall.h>



#define SYS_DANDJPRINT 333



static inline

long dandjprint(void) {

	return syscall(SYS_DANDJPRINT);

}]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ cat /usr/src/linux-x[Ksource-4.15.0/kernel/sys.c 

// SPDX-License-Identifier: GPL-2.0

/*

 *  linux/kernel/sys.c

 *

 *  Copyright (C) 1991, 1992  Linus Torvalds

 */



#include <linux/export.h>

#include <linux/mm.h>

#include <linux/utsname.h>

#include <linux/mman.h>

#include <linux/reboot.h>

#include <linux/prctl.h>

#include <linux/highuid.h>

#include <linux/fs.h>

#include <linux/kmod.h>

#include <linux/perf_event.h>

#include <linux/resource.h>

#include <linux/kernel.h>

#include <linux/workqueue.h>

#include <linux/capability.h>

#include <linux/device.h>

#include <linux/key.h>

#include <linux/times.h>

#include <linux/posix-timers.h>

#include <linux/security.h>

#include <linux/dcookies.h>

#include <linux/suspend.h>

#include <linux/tty.h>

#include <linux/signal.h>

#include <linux/cn_proc.h>

#include <linux/getcpu.h>

#include <linux/task_io_accounting_ops.h>

#include <linux/seccomp.h>

#include <linux/cpu.h>

#include <linux/personality.h>

#include <linux/ptrace.h>

#include <linux/fs_struct.h>

#include <linux/file.h>

#include <linux/mount.h>

#include <linux/gfp.h>

#include <linux/syscore_ops.h>

#include <linux/version.h>

#include <linux/ctype.h>



#include <linux/compat.h>

#include <linux/syscalls.h>

#include <linux/kprobes.h>

#include <linux/user_namespace.h>

#include <linux/binfmts.h>



#include <linux/sched.h>

#include <linux/sched/autogroup.h>

#include <linux/sched/loadavg.h>

#include <linux/sched/stat.h>

#include <linux/sched/mm.h>

#include <linux/sched/coredump.h>

#include <linux/sched/task.h>

#include <linux/sched/cputime.h>

#include <linux/rcupdate.h>

#include <linux/uidgid.h>

#include <linux/cred.h>



#include <linux/nospec.h>



#include <linux/kmsg_dump.h>

/* Move somewhere else to avoid recompiling? */

#include <generated/utsrelease.h>



#include <linux/uaccess.h>

#include <asm/io.h>

#include <asm/unistd.h>



#ifndef SET_UNALIGN_CTL

# define SET_UNALIGN_CTL(a, b)	(-EINVAL)

#endif

#ifndef GET_UNALIGN_CTL

# define GET_UNALIGN_CTL(a, b)	(-EINVAL)

#endif

#ifndef SET_FPEMU_CTL

# define SET_FPEMU_CTL(a, b)	(-EINVAL)

#endif

#ifndef GET_FPEMU_CTL

# define GET_FPEMU_CTL(a, b)	(-EINVAL)

#endif

#ifndef SET_FPEXC_CTL

# define SET_FPEXC_CTL(a, b)	(-EINVAL)

#endif

#ifndef GET_FPEXC_CTL

# define GET_FPEXC_CTL(a, b)	(-EINVAL)

#endif

#ifndef GET_ENDIAN

# define GET_ENDIAN(a, b)	(-EINVAL)

#endif

#ifndef SET_ENDIAN

# define SET_ENDIAN(a, b)	(-EINVAL)

#endif

#ifndef GET_TSC_CTL

# define GET_TSC_CTL(a)		(-EINVAL)

#endif

#ifndef SET_TSC_CTL

# define SET_TSC_CTL(a)		(-EINVAL)

#endif

#ifndef MPX_ENABLE_MANAGEMENT

# define MPX_ENABLE_MANAGEMENT()	(-EINVAL)

#endif

#ifndef MPX_DISABLE_MANAGEMENT

# define MPX_DISABLE_MANAGEMENT()	(-EINVAL)

#endif

#ifndef GET_FP_MODE

# define GET_FP_MODE(a)		(-EINVAL)

#endif

#ifndef SET_FP_MODE

# define SET_FP_MODE(a,b)	(-EINVAL)

#endif

#ifndef SVE_SET_VL

# define SVE_SET_VL(a)		(-EINVAL)

#endif

#ifndef SVE_GET_VL

# define SVE_GET_VL()		(-EINVAL)

#endif



/*

 * this is where the system-wide overflow UID and GID are defined, for

 * architectures that now have 32-bit UID/GID but didn't in the past

 */



int overflowuid = DEFAULT_OVERFLOWUID;

int overflowgid = DEFAULT_OVERFLOWGID;



EXPORT_SYMBOL(overflowuid);

EXPORT_SYMBOL(overflowgid);



/*

 * the same as above, but for filesystems which can only store a 16-bit

 * UID and GID. as such, this is needed on all architectures

 */



int fs_overflowuid = DEFAULT_FS_OVERFLOWUID;

int fs_overflowgid = DEFAULT_FS_OVERFLOWUID;



EXPORT_SYMBOL(fs_overflowuid);

EXPORT_SYMBOL(fs_overflowgid);



/*

 * Returns true if current's euid is same as p's uid or euid,

 * or has CAP_SYS_NICE to p's user_ns.

 *

 * Called with rcu_read_lock, creds are safe

 */

static bool set_one_prio_perm(struct task_struct *p)

{

	const struct cred *cred = current_cred(), *pcred = __task_cred(p);



	if (uid_eq(pcred->uid,  cred->euid) ||

	    uid_eq(pcred->euid, cred->euid))

		return true;

	if (ns_capable(pcred->user_ns, CAP_SYS_NICE))

		return true;

	return false;

}



/*

 * set the priority of a task

 * - the caller must hold the RCU read lock

 */

static int set_one_prio(struct task_struct *p, int niceval, int error)

{

	int no_nice;



	if (!set_one_prio_perm(p)) {

		error = -EPERM;

		goto out;

	}

	if (niceval < task_nice(p) && !can_nice(p, niceval)) {

		error = -EACCES;

		goto out;

	}

	no_nice = security_task_setnice(p, niceval);

	if (no_nice) {

		error = no_nice;

		goto out;

	}

	if (error == -ESRCH)

		error = 0;

	set_user_nice(p, niceval);

out:

	return error;

}



SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)

{

	struct task_struct *g, *p;

	struct user_struct *user;

	const struct cred *cred = current_cred();

	int error = -EINVAL;

	struct pid *pgrp;

	kuid_t uid;



	if (which > PRIO_USER || which < PRIO_PROCESS)

		goto out;



	/* normalize: avoid signed division (rounding problems) */

	error = -ESRCH;

	if (niceval < MIN_NICE)

		niceval = MIN_NICE;

	if (niceval > MAX_NICE)

		niceval = MAX_NICE;



	rcu_read_lock();

	read_lock(&tasklist_lock);

	switch (which) {

	case PRIO_PROCESS:

		if (who)

			p = find_task_by_vpid(who);

		else

			p = current;

		if (p)

			error = set_one_prio(p, niceval, error);

		break;

	case PRIO_PGRP:

		if (who)

			pgrp = find_vpid(who);

		else

			pgrp = task_pgrp(current);

		do_each_pid_thread(pgrp, PIDTYPE_PGID, p) {

			error = set_one_prio(p, niceval, error);

		} while_each_pid_thread(pgrp, PIDTYPE_PGID, p);

		break;

	case PRIO_USER:

		uid = make_kuid(cred->user_ns, who);

		user = cred->user;

		if (!who)

			uid = cred->uid;

		else if (!uid_eq(uid, cred->uid)) {

			user = find_user(uid);

			if (!user)

				goto out_unlock;	/* No processes for this user */

		}

		do_each_thread(g, p) {

			if (uid_eq(task_uid(p), uid) && task_pid_vnr(p))

				error = set_one_prio(p, niceval, error);

		} while_each_thread(g, p);

		if (!uid_eq(uid, cred->uid))

			free_uid(user);		/* For find_user() */

		break;

	}

out_unlock:

	read_unlock(&tasklist_lock);

	rcu_read_unlock();

out:

	return error;

}



/*

 * Ugh. To avoid negative return values, "getpriority()" will

 * not return the normal nice-value, but a negated value that

 * has been offset by 20 (ie it returns 40..1 instead of -20..19)

 * to stay compatible.

 */

SYSCALL_DEFINE2(getpriority, int, which, int, who)

{

	struct task_struct *g, *p;

	struct user_struct *user;

	const struct cred *cred = current_cred();

	long niceval, retval = -ESRCH;

	struct pid *pgrp;

	kuid_t uid;



	if (which > PRIO_USER || which < PRIO_PROCESS)

		return -EINVAL;



	rcu_read_lock();

	read_lock(&tasklist_lock);

	switch (which) {

	case PRIO_PROCESS:

		if (who)

			p = find_task_by_vpid(who);

		else

			p = current;

		if (p) {

			niceval = nice_to_rlimit(task_nice(p));

			if (niceval > retval)

				retval = niceval;

		}

		break;

	case PRIO_PGRP:

		if (who)

			pgrp = find_vpid(who);

		else

			pgrp = task_pgrp(current);

		do_each_pid_thread(pgrp, PIDTYPE_PGID, p) {

			niceval = nice_to_rlimit(task_nice(p));

			if (niceval > retval)

				retval = niceval;

		} while_each_pid_thread(pgrp, PIDTYPE_PGID, p);

		break;

	case PRIO_USER:

		uid = make_kuid(cred->user_ns, who);

		user = cred->user;

		if (!who)

			uid = cred->uid;

		else if (!uid_eq(uid, cred->uid)) {

			user = find_user(uid);

			if (!user)

				goto out_unlock;	/* No processes for this user */

		}

		do_each_thread(g, p) {

			if (uid_eq(task_uid(p), uid) && task_pid_vnr(p)) {

				niceval = nice_to_rlimit(task_nice(p));

				if (niceval > retval)

					retval = niceval;

			}

		} while_each_thread(g, p);

		if (!uid_eq(uid, cred->uid))

			free_uid(user);		/* for find_user() */

		break;

	}

out_unlock:

	read_unlock(&tasklist_lock);

	rcu_read_unlock();



	return retval;

}



/*

 * Unprivileged users may change the real gid to the effective gid

 * or vice versa.  (BSD-style)

 *

 * If you set the real gid at all, or set the effective gid to a value not

 * equal to the real gid, then the saved gid is set to the new effective gid.

 *

 * This makes it possible for a setgid program to completely drop its

 * privileges, which is often a useful assertion to make when you are doing

 * a security audit over a program.

 *

 * The general idea is that a program which uses just setregid() will be

 * 100% compatible with BSD.  A program which uses just setgid() will be

 * 100% compatible with POSIX with saved IDs.

 *

 * SMP: There are not races, the GIDs are checked only by filesystem

 *      operations (as far as semantic preservation is concerned).

 */

#ifdef CONFIG_MULTIUSER

SYSCALL_DEFINE2(setregid, gid_t, rgid, gid_t, egid)

{

	struct user_namespace *ns = current_user_ns();

	const struct cred *old;

	struct cred *new;

	int retval;

	kgid_t krgid, kegid;



	krgid = make_kgid(ns, rgid);

	kegid = make_kgid(ns, egid);



	if ((rgid != (gid_t) -1) && !gid_valid(krgid))

		return -EINVAL;

	if ((egid != (gid_t) -1) && !gid_valid(kegid))

		return -EINVAL;



	new = prepare_creds();

	if (!new)

		return -ENOMEM;

	old = current_cred();



	retval = -EPERM;

	if (rgid != (gid_t) -1) {

		if (gid_eq(old->gid, krgid) ||

		    gid_eq(old->egid, krgid) ||

		    ns_capable(old->user_ns, CAP_SETGID))

			new->gid = krgid;

		else

			goto error;

	}

	if (egid != (gid_t) -1) {

		if (gid_eq(old->gid, kegid) ||

		    gid_eq(old->egid, kegid) ||

		    gid_eq(old->sgid, kegid) ||

		    ns_capable(old->user_ns, CAP_SETGID))

			new->egid = kegid;

		else

			goto error;

	}



	if (rgid != (gid_t) -1 ||

	    (egid != (gid_t) -1 && !gid_eq(kegid, old->gid)))

		new->sgid = new->egid;

	new->fsgid = new->egid;



	return commit_creds(new);



error:

	abort_creds(new);

	return retval;

}



/*

 * setgid() is implemented like SysV w/ SAVED_IDS

 *

 * SMP: Same implicit races as above.

 */

SYSCALL_DEFINE1(setgid, gid_t, gid)

{

	struct user_namespace *ns = current_user_ns();

	const struct cred *old;

	struct cred *new;

	int retval;

	kgid_t kgid;



	kgid = make_kgid(ns, gid);

	if (!gid_valid(kgid))

		return -EINVAL;



	new = prepare_creds();

	if (!new)

		return -ENOMEM;

	old = current_cred();



	retval = -EPERM;

	if (ns_capable(old->user_ns, CAP_SETGID))

		new->gid = new->egid = new->sgid = new->fsgid = kgid;

	else if (gid_eq(kgid, old->gid) || gid_eq(kgid, old->sgid))

		new->egid = new->fsgid = kgid;

	else

		goto error;



	return commit_creds(new);



error:

	abort_creds(new);

	return retval;

}



/*

 * change the user struct in a credentials set to match the new UID

 */

static int set_user(struct cred *new)

{

	struct user_struct *new_user;



	new_user = alloc_uid(new->uid);

	if (!new_user)

		return -EAGAIN;



	/*

	 * We don't fail in case of NPROC limit excess here because too many

	 * poorly written programs don't check set*uid() return code, assuming

	 * it never fails if called by root.  We may still enforce NPROC limit

	 * for programs doing set*uid()+execve() by harmlessly deferring the

	 * failure to the execve() stage.

	 */

	if (atomic_read(&new_user->processes) >= rlimit(RLIMIT_NPROC) &&

			new_user != INIT_USER)

		current->flags |= PF_NPROC_EXCEEDED;

	else

		current->flags &= ~PF_NPROC_EXCEEDED;



	free_uid(new->user);

	new->user = new_user;

	return 0;

}



/*

 * Unprivileged users may change the real uid to the effective uid

 * or vice versa.  (BSD-style)

 *

 * If you set the real uid at all, or set the effective uid to a value not

 * equal to the real uid, then the saved uid is set to the new effective uid.

 *

 * This makes it possible for a setuid program to completely drop its

 * privileges, which is often a useful assertion to make when you are doing

 * a security audit over a program.

 *

 * The general idea is that a program which uses just setreuid() will be

 * 100% compatible with BSD.  A program which uses just setuid() will be

 * 100% compatible with POSIX with saved IDs.

 */

SYSCALL_DEFINE2(setreuid, uid_t, ruid, uid_t, euid)

{

	struct user_namespace *ns = current_user_ns();

	const struct cred *old;

	struct cred *new;

	int retval;

	kuid_t kruid, keuid;



	kruid = make_kuid(ns, ruid);

	keuid = make_kuid(ns, euid);



	if ((ruid != (uid_t) -1) && !uid_valid(kruid))

		return -EINVAL;

	if ((euid != (uid_t) -1) && !uid_valid(keuid))

		return -EINVAL;



	new = prepare_creds();

	if (!new)

		return -ENOMEM;

	old = current_cred();



	retval = -EPERM;

	if (ruid != (uid_t) -1) {

		new->uid = kruid;

		if (!uid_eq(old->uid, kruid) &&

		    !uid_eq(old->euid, kruid) &&

		    !ns_capable(old->user_ns, CAP_SETUID))

			goto error;

	}



	if (euid != (uid_t) -1) {

		new->euid = keuid;

		if (!uid_eq(old->uid, keuid) &&

		    !uid_eq(old->euid, keuid) &&

		    !uid_eq(old->suid, keuid) &&

		    !ns_capable(old->user_ns, CAP_SETUID))

			goto error;

	}



	if (!uid_eq(new->uid, old->uid)) {

		retval = set_user(new);

		if (retval < 0)

			goto error;

	}

	if (ruid != (uid_t) -1 ||

	    (euid != (uid_t) -1 && !uid_eq(keuid, old->uid)))

		new->suid = new->euid;

	new->fsuid = new->euid;



	retval = security_task_fix_setuid(new, old, LSM_SETID_RE);

	if (retval < 0)

		goto error;



	return commit_creds(new);



error:

	abort_creds(new);

	return retval;

}



/*

 * setuid() is implemented like SysV with SAVED_IDS

 *

 * Note that SAVED_ID's is deficient in that a setuid root program

 * like sendmail, for example, cannot set its uid to be a normal

 * user and then switch back, because if you're root, setuid() sets

 * the saved uid too.  If you don't like this, blame the bright people

 * in the POSIX committee and/or USG.  Note that the BSD-style setreuid()

 * will allow a root program to temporarily drop privileges and be able to

 * regain them by swapping the real and effective uid.

 */

SYSCALL_DEFINE1(setuid, uid_t, uid)

{

	struct user_namespace *ns = current_user_ns();

	const struct cred *old;

	struct cred *new;

	int retval;

	kuid_t kuid;



	kuid = make_kuid(ns, uid);

	if (!uid_valid(kuid))

		return -EINVAL;



	new = prepare_creds();

	if (!new)

		return -ENOMEM;

	old = current_cred();



	retval = -EPERM;

	if (ns_capable(old->user_ns, CAP_SETUID)) {

		new->suid = new->uid = kuid;

		if (!uid_eq(kuid, old->uid)) {

			retval = set_user(new);

			if (retval < 0)

				goto error;

		}

	} else if (!uid_eq(kuid, old->uid) && !uid_eq(kuid, new->suid)) {

		goto error;

	}



	new->fsuid = new->euid = kuid;



	retval = security_task_fix_setuid(new, old, LSM_SETID_ID);

	if (retval < 0)

		goto error;



	return commit_creds(new);



error:

	abort_creds(new);

	return retval;

}





/*

 * This function implements a generic ability to update ruid, euid,

 * and suid.  This allows you to implement the 4.4 compatible seteuid().

 */

SYSCALL_DEFINE3(setresuid, uid_t, ruid, uid_t, euid, uid_t, suid)

{

	struct user_namespace *ns = current_user_ns();

	const struct cred *old;

	struct cred *new;

	int retval;

	kuid_t kruid, keuid, ksuid;



	kruid = make_kuid(ns, ruid);

	keuid = make_kuid(ns, euid);

	ksuid = make_kuid(ns, suid);



	if ((ruid != (uid_t) -1) && !uid_valid(kruid))

		return -EINVAL;



	if ((euid != (uid_t) -1) && !uid_valid(keuid))

		return -EINVAL;



	if ((suid != (uid_t) -1) && !uid_valid(ksuid))

		return -EINVAL;



	new = prepare_creds();

	if (!new)

		return -ENOMEM;



	old = current_cred();



	retval = -EPERM;

	if (!ns_capable(old->user_ns, CAP_SETUID)) {

		if (ruid != (uid_t) -1        && !uid_eq(kruid, old->uid) &&

		    !uid_eq(kruid, old->euid) && !uid_eq(kruid, old->suid))

			goto error;

		if (euid != (uid_t) -1        && !uid_eq(keuid, old->uid) &&

		    !uid_eq(keuid, old->euid) && !uid_eq(keuid, old->suid))

			goto error;

		if (suid != (uid_t) -1        && !uid_eq(ksuid, old->uid) &&

		    !uid_eq(ksuid, old->euid) && !uid_eq(ksuid, old->suid))

			goto error;

	}



	if (ruid != (uid_t) -1) {

		new->uid = kruid;

		if (!uid_eq(kruid, old->uid)) {

			retval = set_user(new);

			if (retval < 0)

				goto error;

		}

	}

	if (euid != (uid_t) -1)

		new->euid = keuid;

	if (suid != (uid_t) -1)

		new->suid = ksuid;

	new->fsuid = new->euid;



	retval = security_task_fix_setuid(new, old, LSM_SETID_RES);

	if (retval < 0)

		goto error;



	return commit_creds(new);



error:

	abort_creds(new);

	return retval;

}



SYSCALL_DEFINE3(getresuid, uid_t __user *, ruidp, uid_t __user *, euidp, uid_t __user *, suidp)

{

	const struct cred *cred = current_cred();

	int retval;

	uid_t ruid, euid, suid;



	ruid = from_kuid_munged(cred->user_ns, cred->uid);

	euid = from_kuid_munged(cred->user_ns, cred->euid);

	suid = from_kuid_munged(cred->user_ns, cred->suid);



	retval = put_user(ruid, ruidp);

	if (!retval) {

		retval = put_user(euid, euidp);

		if (!retval)

			return put_user(suid, suidp);

	}

	return retval;

}



/*

 * Same as above, but for rgid, egid, sgid.

 */

SYSCALL_DEFINE3(setresgid, gid_t, rgid, gid_t, egid, gid_t, sgid)

{

	struct user_namespace *ns = current_user_ns();

	const struct cred *old;

	struct cred *new;

	int retval;

	kgid_t krgid, kegid, ksgid;



	krgid = make_kgid(ns, rgid);

	kegid = make_kgid(ns, egid);

	ksgid = make_kgid(ns, sgid);



	if ((rgid != (gid_t) -1) && !gid_valid(krgid))

		return -EINVAL;

	if ((egid != (gid_t) -1) && !gid_valid(kegid))

		return -EINVAL;

	if ((sgid != (gid_t) -1) && !gid_valid(ksgid))

		return -EINVAL;



	new = prepare_creds();

	if (!new)

		return -ENOMEM;

	old = current_cred();



	retval = -EPERM;

	if (!ns_capable(old->user_ns, CAP_SETGID)) {

		if (rgid != (gid_t) -1        && !gid_eq(krgid, old->gid) &&

		    !gid_eq(krgid, old->egid) && !gid_eq(krgid, old->sgid))

			goto error;

		if (egid != (gid_t) -1        && !gid_eq(kegid, old->gid) &&

		    !gid_eq(kegid, old->egid) && !gid_eq(kegid, old->sgid))

			goto error;

		if (sgid != (gid_t) -1        && !gid_eq(ksgid, old->gid) &&

		    !gid_eq(ksgid, old->egid) && !gid_eq(ksgid, old->sgid))

			goto error;

	}



	if (rgid != (gid_t) -1)

		new->gid = krgid;

	if (egid != (gid_t) -1)

		new->egid = kegid;

	if (sgid != (gid_t) -1)

		new->sgid = ksgid;

	new->fsgid = new->egid;



	return commit_creds(new);



error:

	abort_creds(new);

	return retval;

}



SYSCALL_DEFINE3(getresgid, gid_t __user *, rgidp, gid_t __user *, egidp, gid_t __user *, sgidp)

{

	const struct cred *cred = current_cred();

	int retval;

	gid_t rgid, egid, sgid;



	rgid = from_kgid_munged(cred->user_ns, cred->gid);

	egid = from_kgid_munged(cred->user_ns, cred->egid);

	sgid = from_kgid_munged(cred->user_ns, cred->sgid);



	retval = put_user(rgid, rgidp);

	if (!retval) {

		retval = put_user(egid, egidp);

		if (!retval)

			retval = put_user(sgid, sgidp);

	}



	return retval;

}





/*

 * "setfsuid()" sets the fsuid - the uid used for filesystem checks. This

 * is used for "access()" and for the NFS daemon (letting nfsd stay at

 * whatever uid it wants to). It normally shadows "euid", except when

 * explicitly set by setfsuid() or for access..

 */

SYSCALL_DEFINE1(setfsuid, uid_t, uid)

{

	const struct cred *old;

	struct cred *new;

	uid_t old_fsuid;

	kuid_t kuid;



	old = current_cred();

	old_fsuid = from_kuid_munged(old->user_ns, old->fsuid);



	kuid = make_kuid(old->user_ns, uid);

	if (!uid_valid(kuid))

		return old_fsuid;



	new = prepare_creds();

	if (!new)

		return old_fsuid;



	if (uid_eq(kuid, old->uid)  || uid_eq(kuid, old->euid)  ||

	    uid_eq(kuid, old->suid) || uid_eq(kuid, old->fsuid) ||

	    ns_capable(old->user_ns, CAP_SETUID)) {

		if (!uid_eq(kuid, old->fsuid)) {

			new->fsuid = kuid;

			if (security_task_fix_setuid(new, old, LSM_SETID_FS) == 0)

				goto change_okay;

		}

	}



	abort_creds(new);

	return old_fsuid;



change_okay:

	commit_creds(new);

	return old_fsuid;

}



/*

 * Samma på svenska..

 */

SYSCALL_DEFINE1(setfsgid, gid_t, gid)

{

	const struct cred *old;

	struct cred *new;

	gid_t old_fsgid;

	kgid_t kgid;



	old = current_cred();

	old_fsgid = from_kgid_munged(old->user_ns, old->fsgid);



	kgid = make_kgid(old->user_ns, gid);

	if (!gid_valid(kgid))

		return old_fsgid;



	new = prepare_creds();

	if (!new)

		return old_fsgid;



	if (gid_eq(kgid, old->gid)  || gid_eq(kgid, old->egid)  ||

	    gid_eq(kgid, old->sgid) || gid_eq(kgid, old->fsgid) ||

	    ns_capable(old->user_ns, CAP_SETGID)) {

		if (!gid_eq(kgid, old->fsgid)) {

			new->fsgid = kgid;

			goto change_okay;

		}

	}



	abort_creds(new);

	return old_fsgid;



change_okay:

	commit_creds(new);

	return old_fsgid;

}

#endif /* CONFIG_MULTIUSER */



/**

 * sys_getpid - return the thread group id of the current process

 *

 * Note, despite the name, this returns the tgid not the pid.  The tgid and

 * the pid are identical unless CLONE_THREAD was specified on clone() in

 * which case the tgid is the same in all threads of the same group.

 *

 * This is SMP safe as current->tgid does not change.

 */

SYSCALL_DEFINE0(getpid)

{

	return task_tgid_vnr(current);

}



/* Thread ID - the internal kernel "pid" */

SYSCALL_DEFINE0(gettid)

{

	return task_pid_vnr(current);

}



/*

 * Accessing ->real_parent is not SMP-safe, it could

 * change from under us. However, we can use a stale

 * value of ->real_parent under rcu_read_lock(), see

 * release_task()->call_rcu(delayed_put_task_struct).

 */

SYSCALL_DEFINE0(getppid)

{

	int pid;



	rcu_read_lock();

	pid = task_tgid_vnr(rcu_dereference(current->real_parent));

	rcu_read_unlock();



	return pid;

}



SYSCALL_DEFINE0(getuid)

{

	/* Only we change this so SMP safe */

	return from_kuid_munged(current_user_ns(), current_uid());

}



SYSCALL_DEFINE0(geteuid)

{

	/* Only we change this so SMP safe */

	return from_kuid_munged(current_user_ns(), current_euid());

}



SYSCALL_DEFINE0(getgid)

{

	/* Only we change this so SMP safe */

	return from_kgid_munged(current_user_ns(), current_gid());

}



SYSCALL_DEFINE0(getegid)

{

	/* Only we change this so SMP safe */

	return from_kgid_munged(current_user_ns(), current_egid());

}



static void do_sys_times(struct tms *tms)

{

	u64 tgutime, tgstime, cutime, cstime;



	thread_group_cputime_adjusted(current, &tgutime, &tgstime);

	cutime = current->signal->cutime;

	cstime = current->signal->cstime;

	tms->tms_utime = nsec_to_clock_t(tgutime);

	tms->tms_stime = nsec_to_clock_t(tgstime);

	tms->tms_cutime = nsec_to_clock_t(cutime);

	tms->tms_cstime = nsec_to_clock_t(cstime);

}



SYSCALL_DEFINE1(times, struct tms __user *, tbuf)

{

	if (tbuf) {

		struct tms tmp;



		do_sys_times(&tmp);

		if (copy_to_user(tbuf, &tmp, sizeof(struct tms)))

			return -EFAULT;

	}

	force_successful_syscall_return();

	return (long) jiffies_64_to_clock_t(get_jiffies_64());

}



#ifdef CONFIG_COMPAT

static compat_clock_t clock_t_to_compat_clock_t(clock_t x)

{

	return compat_jiffies_to_clock_t(clock_t_to_jiffies(x));

}



COMPAT_SYSCALL_DEFINE1(times, struct compat_tms __user *, tbuf)

{

	if (tbuf) {

		struct tms tms;

		struct compat_tms tmp;



		do_sys_times(&tms);

		/* Convert our struct tms to the compat version. */

		tmp.tms_utime = clock_t_to_compat_clock_t(tms.tms_utime);

		tmp.tms_stime = clock_t_to_compat_clock_t(tms.tms_stime);

		tmp.tms_cutime = clock_t_to_compat_clock_t(tms.tms_cutime);

		tmp.tms_cstime = clock_t_to_compat_clock_t(tms.tms_cstime);

		if (copy_to_user(tbuf, &tmp, sizeof(tmp)))

			return -EFAULT;

	}

	force_successful_syscall_return();

	return compat_jiffies_to_clock_t(jiffies);

}

#endif



/*

 * This needs some heavy checking ...

 * I just haven't the stomach for it. I also don't fully

 * understand sessions/pgrp etc. Let somebody who does explain it.

 *

 * OK, I think I have the protection semantics right.... this is really

 * only important on a multi-user system anyway, to make sure one user

 * can't send a signal to a process owned by another.  -TYT, 12/12/91

 *

 * !PF_FORKNOEXEC check to conform completely to POSIX.

 */

SYSCALL_DEFINE2(setpgid, pid_t, pid, pid_t, pgid)

{

	struct task_struct *p;

	struct task_struct *group_leader = current->group_leader;

	struct pid *pgrp;

	int err;



	if (!pid)

		pid = task_pid_vnr(group_leader);

	if (!pgid)

		pgid = pid;

	if (pgid < 0)

		return -EINVAL;

	rcu_read_lock();



	/* From this point forward we keep holding onto the tasklist lock

	 * so that our parent does not change from under us. -DaveM

	 */

	write_lock_irq(&tasklist_lock);



	err = -ESRCH;

	p = find_task_by_vpid(pid);

	if (!p)

		goto out;



	err = -EINVAL;

	if (!thread_group_leader(p))

		goto out;



	if (same_thread_group(p->real_parent, group_leader)) {

		err = -EPERM;

		if (task_session(p) != task_session(group_leader))

			goto out;

		err = -EACCES;

		if (!(p->flags & PF_FORKNOEXEC))

			goto out;

	} else {

		err = -ESRCH;

		if (p != group_leader)

			goto out;

	}



	err = -EPERM;

	if (p->signal->leader)

		goto out;



	pgrp = task_pid(p);

	if (pgid != pid) {

		struct task_struct *g;



		pgrp = find_vpid(pgid);

		g = pid_task(pgrp, PIDTYPE_PGID);

		if (!g || task_session(g) != task_session(group_leader))

			goto out;

	}



	err = security_task_setpgid(p, pgid);

	if (err)

		goto out;



	if (task_pgrp(p) != pgrp)

		change_pid(p, PIDTYPE_PGID, pgrp);



	err = 0;

out:

	/* All paths lead to here, thus we are safe. -DaveM */

	write_unlock_irq(&tasklist_lock);

	rcu_read_unlock();

	return err;

}



SYSCALL_DEFINE1(getpgid, pid_t, pid)

{

	struct task_struct *p;

	struct pid *grp;

	int retval;



	rcu_read_lock();

	if (!pid)

		grp = task_pgrp(current);

	else {

		retval = -ESRCH;

		p = find_task_by_vpid(pid);

		if (!p)

			goto out;

		grp = task_pgrp(p);

		if (!grp)

			goto out;



		retval = security_task_getpgid(p);

		if (retval)

			goto out;

	}

	retval = pid_vnr(grp);

out:

	rcu_read_unlock();

	return retval;

}



#ifdef __ARCH_WANT_SYS_GETPGRP



SYSCALL_DEFINE0(getpgrp)

{

	return sys_getpgid(0);

}



#endif



SYSCALL_DEFINE1(getsid, pid_t, pid)

{

	struct task_struct *p;

	struct pid *sid;

	int retval;



	rcu_read_lock();

	if (!pid)

		sid = task_session(current);

	else {

		retval = -ESRCH;

		p = find_task_by_vpid(pid);

		if (!p)

			goto out;

		sid = task_session(p);

		if (!sid)

			goto out;



		retval = security_task_getsid(p);

		if (retval)

			goto out;

	}

	retval = pid_vnr(sid);

out:

	rcu_read_unlock();

	return retval;

}



static void set_special_pids(struct pid *pid)

{

	struct task_struct *curr = current->group_leader;



	if (task_session(curr) != pid)

		change_pid(curr, PIDTYPE_SID, pid);



	if (task_pgrp(curr) != pid)

		change_pid(curr, PIDTYPE_PGID, pid);

}



SYSCALL_DEFINE0(setsid)

{

	struct task_struct *group_leader = current->group_leader;

	struct pid *sid = task_pid(group_leader);

	pid_t session = pid_vnr(sid);

	int err = -EPERM;



	write_lock_irq(&tasklist_lock);

	/* Fail if I am already a session leader */

	if (group_leader->signal->leader)

		goto out;



	/* Fail if a process group id already exists that equals the

	 * proposed session id.

	 */

	if (pid_task(sid, PIDTYPE_PGID))

		goto out;



	group_leader->signal->leader = 1;

	set_special_pids(sid);



	proc_clear_tty(group_leader);



	err = session;

out:

	write_unlock_irq(&tasklist_lock);

	if (err > 0) {

		proc_sid_connector(group_leader);

		sched_autogroup_create_attach(group_leader);

	}

	return err;

}



DECLARE_RWSEM(uts_sem);



#ifdef COMPAT_UTS_MACHINE

static char compat_uts_machine[__OLD_UTS_LEN+1] = COMPAT_UTS_MACHINE;



static int __init parse_compat_uts_machine(char *arg)

{

	strncpy(compat_uts_machine, arg, __OLD_UTS_LEN);

	compat_uts_machine[__OLD_UTS_LEN] = 0;

	return 0;

}

early_param("compat_uts_machine", parse_compat_uts_machine);



#undef COMPAT_UTS_MACHINE

#define COMPAT_UTS_MACHINE compat_uts_machine

#endif



#ifdef COMPAT_UTS_MACHINE

#define override_architecture(name) \

	(personality(current->personality) == PER_LINUX32 && \

	 copy_to_user(name->machine, COMPAT_UTS_MACHINE, \

		      sizeof(COMPAT_UTS_MACHINE)))

#else

#define override_architecture(name)	0

#endif



/*

 * Work around broken programs that cannot handle "Linux 3.0".

 * Instead we map 3.x to 2.6.40+x, so e.g. 3.0 would be 2.6.40

 * And we map 4.x to 2.6.60+x, so 4.0 would be 2.6.60.

 */

static int override_release(char __user *release, size_t len)

{

	int ret = 0;



	if (current->personality & UNAME26) {

		const char *rest = UTS_RELEASE;

		char buf[65] = { 0 };

		int ndots = 0;

		unsigned v;

		size_t copy;



		while (*rest) {

			if (*rest == '.' && ++ndots >= 3)

				break;

			if (!isdigit(*rest) && *rest != '.')

				break;

			rest++;

		}

		v = ((LINUX_VERSION_CODE >> 8) & 0xff) + 60;

		copy = clamp_t(size_t, len, 1, sizeof(buf));

		copy = scnprintf(buf, copy, "2.6.%u%s", v, rest);

		ret = copy_to_user(release, buf, copy + 1);

	}

	return ret;

}



SYSCALL_DEFINE1(newuname, struct new_utsname __user *, name)

{

	int errno = 0;



	down_read(&uts_sem);

	if (copy_to_user(name, utsname(), sizeof *name))

		errno = -EFAULT;

	up_read(&uts_sem);



	if (!errno && override_release(name->release, sizeof(name->release)))

		errno = -EFAULT;

	if (!errno && override_architecture(name))

		errno = -EFAULT;

	return errno;

}



#ifdef __ARCH_WANT_SYS_OLD_UNAME

/*

 * Old cruft

 */

SYSCALL_DEFINE1(uname, struct old_utsname __user *, name)

{

	int error = 0;



	if (!name)

		return -EFAULT;



	down_read(&uts_sem);

	if (copy_to_user(name, utsname(), sizeof(*name)))

		error = -EFAULT;

	up_read(&uts_sem);



	if (!error && override_release(name->release, sizeof(name->release)))

		error = -EFAULT;

	if (!error && override_architecture(name))

		error = -EFAULT;

	return error;

}



SYSCALL_DEFINE1(olduname, struct oldold_utsname __user *, name)

{

	int error;



	if (!name)

		return -EFAULT;

	if (!access_ok(VERIFY_WRITE, name, sizeof(struct oldold_utsname)))

		return -EFAULT;



	down_read(&uts_sem);

	error = __copy_to_user(&name->sysname, &utsname()->sysname,

			       __OLD_UTS_LEN);

	error |= __put_user(0, name->sysname + __OLD_UTS_LEN);

	error |= __copy_to_user(&name->nodename, &utsname()->nodename,

				__OLD_UTS_LEN);

	error |= __put_user(0, name->nodename + __OLD_UTS_LEN);

	error |= __copy_to_user(&name->release, &utsname()->release,

				__OLD_UTS_LEN);

	error |= __put_user(0, name->release + __OLD_UTS_LEN);

	error |= __copy_to_user(&name->version, &utsname()->version,

				__OLD_UTS_LEN);

	error |= __put_user(0, name->version + __OLD_UTS_LEN);

	error |= __copy_to_user(&name->machine, &utsname()->machine,

				__OLD_UTS_LEN);

	error |= __put_user(0, name->machine + __OLD_UTS_LEN);

	up_read(&uts_sem);



	if (!error && override_architecture(name))

		error = -EFAULT;

	if (!error && override_release(name->release, sizeof(name->release)))

		error = -EFAULT;

	return error ? -EFAULT : 0;

}

#endif



SYSCALL_DEFINE2(sethostname, char __user *, name, int, len)

{

	int errno;

	char tmp[__NEW_UTS_LEN];



	if (!ns_capable(current->nsproxy->uts_ns->user_ns, CAP_SYS_ADMIN))

		return -EPERM;



	if (len < 0 || len > __NEW_UTS_LEN)

		return -EINVAL;

	down_write(&uts_sem);

	errno = -EFAULT;

	if (!copy_from_user(tmp, name, len)) {

		struct new_utsname *u = utsname();



		memcpy(u->nodename, tmp, len);

		memset(u->nodename + len, 0, sizeof(u->nodename) - len);

		errno = 0;

		uts_proc_notify(UTS_PROC_HOSTNAME);

	}

	up_write(&uts_sem);

	return errno;

}



#ifdef __ARCH_WANT_SYS_GETHOSTNAME



SYSCALL_DEFINE2(gethostname, char __user *, name, int, len)

{

	int i, errno;

	struct new_utsname *u;



	if (len < 0)

		return -EINVAL;

	down_read(&uts_sem);

	u = utsname();

	i = 1 + strlen(u->nodename);

	if (i > len)

		i = len;

	errno = 0;

	if (copy_to_user(name, u->nodename, i))

		errno = -EFAULT;

	up_read(&uts_sem);

	return errno;

}



#endif



/*

 * Only setdomainname; getdomainname can be implemented by calling

 * uname()

 */

SYSCALL_DEFINE2(setdomainname, char __user *, name, int, len)

{

	int errno;

	char tmp[__NEW_UTS_LEN];



	if (!ns_capable(current->nsproxy->uts_ns->user_ns, CAP_SYS_ADMIN))

		return -EPERM;

	if (len < 0 || len > __NEW_UTS_LEN)

		return -EINVAL;



	down_write(&uts_sem);

	errno = -EFAULT;

	if (!copy_from_user(tmp, name, len)) {

		struct new_utsname *u = utsname();



		memcpy(u->domainname, tmp, len);

		memset(u->domainname + len, 0, sizeof(u->domainname) - len);

		errno = 0;

		uts_proc_notify(UTS_PROC_DOMAINNAME);

	}

	up_write(&uts_sem);

	return errno;

}



SYSCALL_DEFINE2(getrlimit, unsigned int, resource, struct rlimit __user *, rlim)

{

	struct rlimit value;

	int ret;



	ret = do_prlimit(current, resource, NULL, &value);

	if (!ret)

		ret = copy_to_user(rlim, &value, sizeof(*rlim)) ? -EFAULT : 0;



	return ret;

}



#ifdef CONFIG_COMPAT



COMPAT_SYSCALL_DEFINE2(setrlimit, unsigned int, resource,

		       struct compat_rlimit __user *, rlim)

{

	struct rlimit r;

	struct compat_rlimit r32;



	if (copy_from_user(&r32, rlim, sizeof(struct compat_rlimit)))

		return -EFAULT;



	if (r32.rlim_cur == COMPAT_RLIM_INFINITY)

		r.rlim_cur = RLIM_INFINITY;

	else

		r.rlim_cur = r32.rlim_cur;

	if (r32.rlim_max == COMPAT_RLIM_INFINITY)

		r.rlim_max = RLIM_INFINITY;

	else

		r.rlim_max = r32.rlim_max;

	return do_prlimit(current, resource, &r, NULL);

}



COMPAT_SYSCALL_DEFINE2(getrlimit, unsigned int, resource,

		       struct compat_rlimit __user *, rlim)

{

	struct rlimit r;

	int ret;



	ret = do_prlimit(current, resource, NULL, &r);

	if (!ret) {

		struct compat_rlimit r32;

		if (r.rlim_cur > COMPAT_RLIM_INFINITY)

			r32.rlim_cur = COMPAT_RLIM_INFINITY;

		else

			r32.rlim_cur = r.rlim_cur;

		if (r.rlim_max > COMPAT_RLIM_INFINITY)

			r32.rlim_max = COMPAT_RLIM_INFINITY;

		else

			r32.rlim_max = r.rlim_max;



		if (copy_to_user(rlim, &r32, sizeof(struct compat_rlimit)))

			return -EFAULT;

	}

	return ret;

}



#endif



#ifdef __ARCH_WANT_SYS_OLD_GETRLIMIT



/*

 *	Back compatibility for getrlimit. Needed for some apps.

 */

SYSCALL_DEFINE2(old_getrlimit, unsigned int, resource,

		struct rlimit __user *, rlim)

{

	struct rlimit x;

	if (resource >= RLIM_NLIMITS)

		return -EINVAL;



	resource = array_index_nospec(resource, RLIM_NLIMITS);

	task_lock(current->group_leader);

	x = current->signal->rlim[resource];

	task_unlock(current->group_leader);

	if (x.rlim_cur > 0x7FFFFFFF)

		x.rlim_cur = 0x7FFFFFFF;

	if (x.rlim_max > 0x7FFFFFFF)

		x.rlim_max = 0x7FFFFFFF;

	return copy_to_user(rlim, &x, sizeof(x)) ? -EFAULT : 0;

}



#ifdef CONFIG_COMPAT

COMPAT_SYSCALL_DEFINE2(old_getrlimit, unsigned int, resource,

		       struct compat_rlimit __user *, rlim)

{

	struct rlimit r;



	if (resource >= RLIM_NLIMITS)

		return -EINVAL;



	resource = array_index_nospec(resource, RLIM_NLIMITS);

	task_lock(current->group_leader);

	r = current->signal->rlim[resource];

	task_unlock(current->group_leader);

	if (r.rlim_cur > 0x7FFFFFFF)

		r.rlim_cur = 0x7FFFFFFF;

	if (r.rlim_max > 0x7FFFFFFF)

		r.rlim_max = 0x7FFFFFFF;



	if (put_user(r.rlim_cur, &rlim->rlim_cur) ||

	    put_user(r.rlim_max, &rlim->rlim_max))

		return -EFAULT;

	return 0;

}

#endif



#endif



static inline bool rlim64_is_infinity(__u64 rlim64)

{

#if BITS_PER_LONG < 64

	return rlim64 >= ULONG_MAX;

#else

	return rlim64 == RLIM64_INFINITY;

#endif

}



static void rlim_to_rlim64(const struct rlimit *rlim, struct rlimit64 *rlim64)

{

	if (rlim->rlim_cur == RLIM_INFINITY)

		rlim64->rlim_cur = RLIM64_INFINITY;

	else

		rlim64->rlim_cur = rlim->rlim_cur;

	if (rlim->rlim_max == RLIM_INFINITY)

		rlim64->rlim_max = RLIM64_INFINITY;

	else

		rlim64->rlim_max = rlim->rlim_max;

}



static void rlim64_to_rlim(const struct rlimit64 *rlim64, struct rlimit *rlim)

{

	if (rlim64_is_infinity(rlim64->rlim_cur))

		rlim->rlim_cur = RLIM_INFINITY;

	else

		rlim->rlim_cur = (unsigned long)rlim64->rlim_cur;

	if (rlim64_is_infinity(rlim64->rlim_max))

		rlim->rlim_max = RLIM_INFINITY;

	else

		rlim->rlim_max = (unsigned long)rlim64->rlim_max;

}



/* make sure you are allowed to change @tsk limits before calling this */

int do_prlimit(struct task_struct *tsk, unsigned int resource,

		struct rlimit *new_rlim, struct rlimit *old_rlim)

{

	struct rlimit *rlim;

	int retval = 0;



	if (resource >= RLIM_NLIMITS)

		return -EINVAL;

	if (new_rlim) {

		if (new_rlim->rlim_cur > new_rlim->rlim_max)

			return -EINVAL;

		if (resource == RLIMIT_NOFILE &&

				new_rlim->rlim_max > sysctl_nr_open)

			return -EPERM;

	}



	/* protect tsk->signal and tsk->sighand from disappearing */

	read_lock(&tasklist_lock);

	if (!tsk->sighand) {

		retval = -ESRCH;

		goto out;

	}



	rlim = tsk->signal->rlim + resource;

	task_lock(tsk->group_leader);

	if (new_rlim) {

		/* Keep the capable check against init_user_ns until

		   cgroups can contain all limits */

		if (new_rlim->rlim_max > rlim->rlim_max &&

				!capable(CAP_SYS_RESOURCE))

			retval = -EPERM;

		if (!retval)

			retval = security_task_setrlimit(tsk, resource, new_rlim);

		if (resource == RLIMIT_CPU && new_rlim->rlim_cur == 0) {

			/*

			 * The caller is asking for an immediate RLIMIT_CPU

			 * expiry.  But we use the zero value to mean "it was

			 * never set".  So let's cheat and make it one second

			 * instead

			 */

			new_rlim->rlim_cur = 1;

		}

	}

	if (!retval) {

		if (old_rlim)

			*old_rlim = *rlim;

		if (new_rlim)

			*rlim = *new_rlim;

	}

	task_unlock(tsk->group_leader);



	/*

	 * RLIMIT_CPU handling.   Note that the kernel fails to return an error

	 * code if it rejected the user's attempt to set RLIMIT_CPU.  This is a

	 * very long-standing error, and fixing it now risks breakage of

	 * applications, so we live with it

	 */

	 if (!retval && new_rlim && resource == RLIMIT_CPU &&

	     new_rlim->rlim_cur != RLIM_INFINITY &&

	     IS_ENABLED(CONFIG_POSIX_TIMERS))

		update_rlimit_cpu(tsk, new_rlim->rlim_cur);

out:

	read_unlock(&tasklist_lock);

	return retval;

}



/* rcu lock must be held */

static int check_prlimit_permission(struct task_struct *task,

				    unsigned int flags)

{

	const struct cred *cred = current_cred(), *tcred;

	bool id_match;



	if (current == task)

		return 0;



	tcred = __task_cred(task);

	id_match = (uid_eq(cred->uid, tcred->euid) &&

		    uid_eq(cred->uid, tcred->suid) &&

		    uid_eq(cred->uid, tcred->uid)  &&

		    gid_eq(cred->gid, tcred->egid) &&

		    gid_eq(cred->gid, tcred->sgid) &&

		    gid_eq(cred->gid, tcred->gid));

	if (!id_match && !ns_capable(tcred->user_ns, CAP_SYS_RESOURCE))

		return -EPERM;



	return security_task_prlimit(cred, tcred, flags);

}



SYSCALL_DEFINE4(prlimit64, pid_t, pid, unsigned int, resource,

		const struct rlimit64 __user *, new_rlim,

		struct rlimit64 __user *, old_rlim)

{

	struct rlimit64 old64, new64;

	struct rlimit old, new;

	struct task_struct *tsk;

	unsigned int checkflags = 0;

	int ret;



	if (old_rlim)

		checkflags |= LSM_PRLIMIT_READ;



	if (new_rlim) {

		if (copy_from_user(&new64, new_rlim, sizeof(new64)))

			return -EFAULT;

		rlim64_to_rlim(&new64, &new);

		checkflags |= LSM_PRLIMIT_WRITE;

	}



	rcu_read_lock();

	tsk = pid ? find_task_by_vpid(pid) : current;

	if (!tsk) {

		rcu_read_unlock();

		return -ESRCH;

	}

	ret = check_prlimit_permission(tsk, checkflags);

	if (ret) {

		rcu_read_unlock();

		return ret;

	}

	get_task_struct(tsk);

	rcu_read_unlock();



	ret = do_prlimit(tsk, resource, new_rlim ? &new : NULL,

			old_rlim ? &old : NULL);



	if (!ret && old_rlim) {

		rlim_to_rlim64(&old, &old64);

		if (copy_to_user(old_rlim, &old64, sizeof(old64)))

			ret = -EFAULT;

	}



	put_task_struct(tsk);

	return ret;

}



SYSCALL_DEFINE2(setrlimit, unsigned int, resource, struct rlimit __user *, rlim)

{

	struct rlimit new_rlim;



	if (copy_from_user(&new_rlim, rlim, sizeof(*rlim)))

		return -EFAULT;

	return do_prlimit(current, resource, &new_rlim, NULL);

}



/*

 * It would make sense to put struct rusage in the task_struct,

 * except that would make the task_struct be *really big*.  After

 * task_struct gets moved into malloc'ed memory, it would

 * make sense to do this.  It will make moving the rest of the information

 * a lot simpler!  (Which we're not doing right now because we're not

 * measuring them yet).

 *

 * When sampling multiple threads for RUSAGE_SELF, under SMP we might have

 * races with threads incrementing their own counters.  But since word

 * reads are atomic, we either get new values or old values and we don't

 * care which for the sums.  We always take the siglock to protect reading

 * the c* fields from p->signal from races with exit.c updating those

 * fields when reaping, so a sample either gets all the additions of a

 * given child after it's reaped, or none so this sample is before reaping.

 *

 * Locking:

 * We need to take the siglock for CHILDEREN, SELF and BOTH

 * for  the cases current multithreaded, non-current single threaded

 * non-current multithreaded.  Thread traversal is now safe with

 * the siglock held.

 * Strictly speaking, we donot need to take the siglock if we are current and

 * single threaded,  as no one else can take our signal_struct away, no one

 * else can  reap the  children to update signal->c* counters, and no one else

 * can race with the signal-> fields. If we do not take any lock, the

 * signal-> fields could be read out of order while another thread was just

 * exiting. So we should  place a read memory barrier when we avoid the lock.

 * On the writer side,  write memory barrier is implied in  __exit_signal

 * as __exit_signal releases  the siglock spinlock after updating the signal->

 * fields. But we don't do this yet to keep things simple.

 *

 */



static void accumulate_thread_rusage(struct task_struct *t, struct rusage *r)

{

	r->ru_nvcsw += t->nvcsw;

	r->ru_nivcsw += t->nivcsw;

	r->ru_minflt += t->min_flt;

	r->ru_majflt += t->maj_flt;

	r->ru_inblock += task_io_get_inblock(t);

	r->ru_oublock += task_io_get_oublock(t);

}



void getrusage(struct task_struct *p, int who, struct rusage *r)

{

	struct task_struct *t;

	unsigned long flags;

	u64 tgutime, tgstime, utime, stime;

	unsigned long maxrss = 0;



	memset((char *)r, 0, sizeof (*r));

	utime = stime = 0;



	if (who == RUSAGE_THREAD) {

		task_cputime_adjusted(current, &utime, &stime);

		accumulate_thread_rusage(p, r);

		maxrss = p->signal->maxrss;

		goto out;

	}



	if (!lock_task_sighand(p, &flags))

		return;



	switch (who) {

	case RUSAGE_BOTH:

	case RUSAGE_CHILDREN:

		utime = p->signal->cutime;

		stime = p->signal->cstime;

		r->ru_nvcsw = p->signal->cnvcsw;

		r->ru_nivcsw = p->signal->cnivcsw;

		r->ru_minflt = p->signal->cmin_flt;

		r->ru_majflt = p->signal->cmaj_flt;

		r->ru_inblock = p->signal->cinblock;

		r->ru_oublock = p->signal->coublock;

		maxrss = p->signal->cmaxrss;



		if (who == RUSAGE_CHILDREN)

			break;



	case RUSAGE_SELF:

		thread_group_cputime_adjusted(p, &tgutime, &tgstime);

		utime += tgutime;

		stime += tgstime;

		r->ru_nvcsw += p->signal->nvcsw;

		r->ru_nivcsw += p->signal->nivcsw;

		r->ru_minflt += p->signal->min_flt;

		r->ru_majflt += p->signal->maj_flt;

		r->ru_inblock += p->signal->inblock;

		r->ru_oublock += p->signal->oublock;

		if (maxrss < p->signal->maxrss)

			maxrss = p->signal->maxrss;

		t = p;

		do {

			accumulate_thread_rusage(t, r);

		} while_each_thread(p, t);

		break;



	default:

		BUG();

	}

	unlock_task_sighand(p, &flags);



out:

	r->ru_utime = ns_to_timeval(utime);

	r->ru_stime = ns_to_timeval(stime);



	if (who != RUSAGE_CHILDREN) {

		struct mm_struct *mm = get_task_mm(p);



		if (mm) {

			setmax_mm_hiwater_rss(&maxrss, mm);

			mmput(mm);

		}

	}

	r->ru_maxrss = maxrss * (PAGE_SIZE / 1024); /* convert pages to KBs */

}



SYSCALL_DEFINE2(getrusage, int, who, struct rusage __user *, ru)

{

	struct rusage r;



	if (who != RUSAGE_SELF && who != RUSAGE_CHILDREN &&

	    who != RUSAGE_THREAD)

		return -EINVAL;



	getrusage(current, who, &r);

	return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;

}



#ifdef CONFIG_COMPAT

COMPAT_SYSCALL_DEFINE2(getrusage, int, who, struct compat_rusage __user *, ru)

{

	struct rusage r;



	if (who != RUSAGE_SELF && who != RUSAGE_CHILDREN &&

	    who != RUSAGE_THREAD)

		return -EINVAL;



	getrusage(current, who, &r);

	return put_compat_rusage(&r, ru);

}

#endif



SYSCALL_DEFINE1(umask, int, mask)

{

	mask = xchg(&current->fs->umask, mask & S_IRWXUGO);

	return mask;

}



static int prctl_set_mm_exe_file(struct mm_struct *mm, unsigned int fd)

{

	struct fd exe;

	struct file *old_exe, *exe_file;

	struct inode *inode;

	int err;



	exe = fdget(fd);

	if (!exe.file)

		return -EBADF;



	inode = file_inode(exe.file);



	/*

	 * Because the original mm->exe_file points to executable file, make

	 * sure that this one is executable as well, to avoid breaking an

	 * overall picture.

	 */

	err = -EACCES;

	if (!S_ISREG(inode->i_mode) || path_noexec(&exe.file->f_path))

		goto exit;



	err = inode_permission(inode, MAY_EXEC);

	if (err)

		goto exit;



	/*

	 * Forbid mm->exe_file change if old file still mapped.

	 */

	exe_file = get_mm_exe_file(mm);

	err = -EBUSY;

	if (exe_file) {

		struct vm_area_struct *vma;



		down_read(&mm->mmap_sem);

		for (vma = mm->mmap; vma; vma = vma->vm_next) {

			if (!vma->vm_file)

				continue;

			if (path_equal(&vma->vm_file->f_path,

				       &exe_file->f_path))

				goto exit_err;

		}



		up_read(&mm->mmap_sem);

		fput(exe_file);

	}



	err = 0;

	/* set the new file, lockless */

	get_file(exe.file);

	old_exe = xchg(&mm->exe_file, exe.file);

	if (old_exe)

		fput(old_exe);

exit:

	fdput(exe);

	return err;

exit_err:

	up_read(&mm->mmap_sem);

	fput(exe_file);

	goto exit;

}



/*

 * WARNING: we don't require any capability here so be very careful

 * in what is allowed for modification from userspace.

 */

static int validate_prctl_map(struct prctl_mm_map *prctl_map)

{

	unsigned long mmap_max_addr = TASK_SIZE;

	struct mm_struct *mm = current->mm;

	int error = -EINVAL, i;



	static const unsigned char offsets[] = {

		offsetof(struct prctl_mm_map, start_code),

		offsetof(struct prctl_mm_map, end_code),

		offsetof(struct prctl_mm_map, start_data),

		offsetof(struct prctl_mm_map, end_data),

		offsetof(struct prctl_mm_map, start_brk),

		offsetof(struct prctl_mm_map, brk),

		offsetof(struct prctl_mm_map, start_stack),

		offsetof(struct prctl_mm_map, arg_start),

		offsetof(struct prctl_mm_map, arg_end),

		offsetof(struct prctl_mm_map, env_start),

		offsetof(struct prctl_mm_map, env_end),

	};



	/*

	 * Make sure the members are not somewhere outside

	 * of allowed address space.

	 */

	for (i = 0; i < ARRAY_SIZE(offsets); i++) {

		u64 val = *(u64 *)((char *)prctl_map + offsets[i]);



		if ((unsigned long)val >= mmap_max_addr ||

		    (unsigned long)val < mmap_min_addr)

			goto out;

	}



	/*

	 * Make sure the pairs are ordered.

	 */

#define __prctl_check_order(__m1, __op, __m2)				\

	((unsigned long)prctl_map->__m1 __op				\

	 (unsigned long)prctl_map->__m2) ? 0 : -EINVAL

	error  = __prctl_check_order(start_code, <, end_code);

	error |= __prctl_check_order(start_data, <, end_data);

	error |= __prctl_check_order(start_brk, <=, brk);

	error |= __prctl_check_order(arg_start, <=, arg_end);

	error |= __prctl_check_order(env_start, <=, env_end);

	if (error)

		goto out;

#undef __prctl_check_order



	error = -EINVAL;



	/*

	 * @brk should be after @end_data in traditional maps.

	 */

	if (prctl_map->start_brk <= prctl_map->end_data ||

	    prctl_map->brk <= prctl_map->end_data)

		goto out;



	/*

	 * Neither we should allow to override limits if they set.

	 */

	if (check_data_rlimit(rlimit(RLIMIT_DATA), prctl_map->brk,

			      prctl_map->start_brk, prctl_map->end_data,

			      prctl_map->start_data))

			goto out;



	/*

	 * Someone is trying to cheat the auxv vector.

	 */

	if (prctl_map->auxv_size) {

		if (!prctl_map->auxv || prctl_map->auxv_size > sizeof(mm->saved_auxv))

			goto out;

	}



	/*

	 * Finally, make sure the caller has the rights to

	 * change /proc/pid/exe link: only local sys admin should

	 * be allowed to.

	 */

	if (prctl_map->exe_fd != (u32)-1) {

		if (!ns_capable(current_user_ns(), CAP_SYS_ADMIN))

			goto out;

	}



	error = 0;

out:

	return error;

}



#ifdef CONFIG_CHECKPOINT_RESTORE

static int prctl_set_mm_map(int opt, const void __user *addr, unsigned long data_size)

{

	struct prctl_mm_map prctl_map = { .exe_fd = (u32)-1, };

	unsigned long user_auxv[AT_VECTOR_SIZE];

	struct mm_struct *mm = current->mm;

	int error;



	BUILD_BUG_ON(sizeof(user_auxv) != sizeof(mm->saved_auxv));

	BUILD_BUG_ON(sizeof(struct prctl_mm_map) > 256);



	if (opt == PR_SET_MM_MAP_SIZE)

		return put_user((unsigned int)sizeof(prctl_map),

				(unsigned int __user *)addr);



	if (data_size != sizeof(prctl_map))

		return -EINVAL;



	if (copy_from_user(&prctl_map, addr, sizeof(prctl_map)))

		return -EFAULT;



	error = validate_prctl_map(&prctl_map);

	if (error)

		return error;



	if (prctl_map.auxv_size) {

		memset(user_auxv, 0, sizeof(user_auxv));

		if (copy_from_user(user_auxv,

				   (const void __user *)prctl_map.auxv,

				   prctl_map.auxv_size))

			return -EFAULT;



		/* Last entry must be AT_NULL as specification requires */

		user_auxv[AT_VECTOR_SIZE - 2] = AT_NULL;

		user_auxv[AT_VECTOR_SIZE - 1] = AT_NULL;

	}



	if (prctl_map.exe_fd != (u32)-1) {

		error = prctl_set_mm_exe_file(mm, prctl_map.exe_fd);

		if (error)

			return error;

	}



	down_write(&mm->mmap_sem);



	/*

	 * We don't validate if these members are pointing to

	 * real present VMAs because application may have correspond

	 * VMAs already unmapped and kernel uses these members for statistics

	 * output in procfs mostly, except

	 *

	 *  - @start_brk/@brk which are used in do_brk but kernel lookups

	 *    for VMAs when updating these memvers so anything wrong written

	 *    here cause kernel to swear at userspace program but won't lead

	 *    to any problem in kernel itself

	 */



	mm->start_code	= prctl_map.start_code;

	mm->end_code	= prctl_map.end_code;

	mm->start_data	= prctl_map.start_data;

	mm->end_data	= prctl_map.end_data;

	mm->start_brk	= prctl_map.start_brk;

	mm->brk		= prctl_map.brk;

	mm->start_stack	= prctl_map.start_stack;

	mm->arg_start	= prctl_map.arg_start;

	mm->arg_end	= prctl_map.arg_end;

	mm->env_start	= prctl_map.env_start;

	mm->env_end	= prctl_map.env_end;



	/*

	 * Note this update of @saved_auxv is lockless thus

	 * if someone reads this member in procfs while we're

	 * updating -- it may get partly updated results. It's

	 * known and acceptable trade off: we leave it as is to

	 * not introduce additional locks here making the kernel

	 * more complex.

	 */

	if (prctl_map.auxv_size)

		memcpy(mm->saved_auxv, user_auxv, sizeof(user_auxv));



	up_write(&mm->mmap_sem);

	return 0;

}

#endif /* CONFIG_CHECKPOINT_RESTORE */



static int prctl_set_auxv(struct mm_struct *mm, unsigned long addr,

			  unsigned long len)

{

	/*

	 * This doesn't move the auxiliary vector itself since it's pinned to

	 * mm_struct, but it permits filling the vector with new values.  It's

	 * up to the caller to provide sane values here, otherwise userspace

	 * tools which use this vector might be unhappy.

	 */

	unsigned long user_auxv[AT_VECTOR_SIZE];



	if (len > sizeof(user_auxv))

		return -EINVAL;



	if (copy_from_user(user_auxv, (const void __user *)addr, len))

		return -EFAULT;



	/* Make sure the last entry is always AT_NULL */

	user_auxv[AT_VECTOR_SIZE - 2] = 0;

	user_auxv[AT_VECTOR_SIZE - 1] = 0;



	BUILD_BUG_ON(sizeof(user_auxv) != sizeof(mm->saved_auxv));



	task_lock(current);

	memcpy(mm->saved_auxv, user_auxv, len);

	task_unlock(current);



	return 0;

}



static int prctl_set_mm(int opt, unsigned long addr,

			unsigned long arg4, unsigned long arg5)

{

	struct mm_struct *mm = current->mm;

	struct prctl_mm_map prctl_map;

	struct vm_area_struct *vma;

	int error;



	if (arg5 || (arg4 && (opt != PR_SET_MM_AUXV &&

			      opt != PR_SET_MM_MAP &&

			      opt != PR_SET_MM_MAP_SIZE)))

		return -EINVAL;



#ifdef CONFIG_CHECKPOINT_RESTORE

	if (opt == PR_SET_MM_MAP || opt == PR_SET_MM_MAP_SIZE)

		return prctl_set_mm_map(opt, (const void __user *)addr, arg4);

#endif



	if (!capable(CAP_SYS_RESOURCE))

		return -EPERM;



	if (opt == PR_SET_MM_EXE_FILE)

		return prctl_set_mm_exe_file(mm, (unsigned int)addr);



	if (opt == PR_SET_MM_AUXV)

		return prctl_set_auxv(mm, addr, arg4);



	if (addr >= TASK_SIZE || addr < mmap_min_addr)

		return -EINVAL;



	error = -EINVAL;



	down_write(&mm->mmap_sem);

	vma = find_vma(mm, addr);



	prctl_map.start_code	= mm->start_code;

	prctl_map.end_code	= mm->end_code;

	prctl_map.start_data	= mm->start_data;

	prctl_map.end_data	= mm->end_data;

	prctl_map.start_brk	= mm->start_brk;

	prctl_map.brk		= mm->brk;

	prctl_map.start_stack	= mm->start_stack;

	prctl_map.arg_start	= mm->arg_start;

	prctl_map.arg_end	= mm->arg_end;

	prctl_map.env_start	= mm->env_start;

	prctl_map.env_end	= mm->env_end;

	prctl_map.auxv		= NULL;

	prctl_map.auxv_size	= 0;

	prctl_map.exe_fd	= -1;



	switch (opt) {

	case PR_SET_MM_START_CODE:

		prctl_map.start_code = addr;

		break;

	case PR_SET_MM_END_CODE:

		prctl_map.end_code = addr;

		break;

	case PR_SET_MM_START_DATA:

		prctl_map.start_data = addr;

		break;

	case PR_SET_MM_END_DATA:

		prctl_map.end_data = addr;

		break;

	case PR_SET_MM_START_STACK:

		prctl_map.start_stack = addr;

		break;

	case PR_SET_MM_START_BRK:

		prctl_map.start_brk = addr;

		break;

	case PR_SET_MM_BRK:

		prctl_map.brk = addr;

		break;

	case PR_SET_MM_ARG_START:

		prctl_map.arg_start = addr;

		break;

	case PR_SET_MM_ARG_END:

		prctl_map.arg_end = addr;

		break;

	case PR_SET_MM_ENV_START:

		prctl_map.env_start = addr;

		break;

	case PR_SET_MM_ENV_END:

		prctl_map.env_end = addr;

		break;

	default:

		goto out;

	}



	error = validate_prctl_map(&prctl_map);

	if (error)

		goto out;



	switch (opt) {

	/*

	 * If command line arguments and environment

	 * are placed somewhere else on stack, we can

	 * set them up here, ARG_START/END to setup

	 * command line argumets and ENV_START/END

	 * for environment.

	 */

	case PR_SET_MM_START_STACK:

	case PR_SET_MM_ARG_START:

	case PR_SET_MM_ARG_END:

	case PR_SET_MM_ENV_START:

	case PR_SET_MM_ENV_END:

		if (!vma) {

			error = -EFAULT;

			goto out;

		}

	}



	mm->start_code	= prctl_map.start_code;

	mm->end_code	= prctl_map.end_code;

	mm->start_data	= prctl_map.start_data;

	mm->end_data	= prctl_map.end_data;

	mm->start_brk	= prctl_map.start_brk;

	mm->brk		= prctl_map.brk;

	mm->start_stack	= prctl_map.start_stack;

	mm->arg_start	= prctl_map.arg_start;

	mm->arg_end	= prctl_map.arg_end;

	mm->env_start	= prctl_map.env_start;

	mm->env_end	= prctl_map.env_end;



	error = 0;

out:

	up_write(&mm->mmap_sem);

	return error;

}



#ifdef CONFIG_CHECKPOINT_RESTORE

static int prctl_get_tid_address(struct task_struct *me, int __user **tid_addr)

{

	return put_user(me->clear_child_tid, tid_addr);

}

#else

static int prctl_get_tid_address(struct task_struct *me, int __user **tid_addr)

{

	return -EINVAL;

}

#endif



static int propagate_has_child_subreaper(struct task_struct *p, void *data)

{

	/*

	 * If task has has_child_subreaper - all its decendants

	 * already have these flag too and new decendants will

	 * inherit it on fork, skip them.

	 *

	 * If we've found child_reaper - skip descendants in

	 * it's subtree as they will never get out pidns.

	 */

	if (p->signal->has_child_subreaper ||

	    is_child_reaper(task_pid(p)))

		return 0;



	p->signal->has_child_subreaper = 1;

	return 1;

}



int __weak arch_prctl_spec_ctrl_get(struct task_struct *t, unsigned long which)

{

	return -EINVAL;

}



int __weak arch_prctl_spec_ctrl_set(struct task_struct *t, unsigned long which,

				    unsigned long ctrl)

{

	return -EINVAL;

}



SYSCALL_DEFINE5(prctl, int, option, unsigned long, arg2, unsigned long, arg3,

		unsigned long, arg4, unsigned long, arg5)

{

	struct task_struct *me = current;

	unsigned char comm[sizeof(me->comm)];

	long error;



	error = security_task_prctl(option, arg2, arg3, arg4, arg5);

	if (error != -ENOSYS)

		return error;



	error = 0;

	switch (option) {

	case PR_SET_PDEATHSIG:

		if (!valid_signal(arg2)) {

			error = -EINVAL;

			break;

		}

		me->pdeath_signal = arg2;

		break;

	case PR_GET_PDEATHSIG:

		error = put_user(me->pdeath_signal, (int __user *)arg2);

		break;

	case PR_GET_DUMPABLE:

		error = get_dumpable(me->mm);

		break;

	case PR_SET_DUMPABLE:

		if (arg2 != SUID_DUMP_DISABLE && arg2 != SUID_DUMP_USER) {

			error = -EINVAL;

			break;

		}

		set_dumpable(me->mm, arg2);

		break;



	case PR_SET_UNALIGN:

		error = SET_UNALIGN_CTL(me, arg2);

		break;

	case PR_GET_UNALIGN:

		error = GET_UNALIGN_CTL(me, arg2);

		break;

	case PR_SET_FPEMU:

		error = SET_FPEMU_CTL(me, arg2);

		break;

	case PR_GET_FPEMU:

		error = GET_FPEMU_CTL(me, arg2);

		break;

	case PR_SET_FPEXC:

		error = SET_FPEXC_CTL(me, arg2);

		break;

	case PR_GET_FPEXC:

		error = GET_FPEXC_CTL(me, arg2);

		break;

	case PR_GET_TIMING:

		error = PR_TIMING_STATISTICAL;

		break;

	case PR_SET_TIMING:

		if (arg2 != PR_TIMING_STATISTICAL)

			error = -EINVAL;

		break;

	case PR_SET_NAME:

		comm[sizeof(me->comm) - 1] = 0;

		if (strncpy_from_user(comm, (char __user *)arg2,

				      sizeof(me->comm) - 1) < 0)

			return -EFAULT;

		set_task_comm(me, comm);

		proc_comm_connector(me);

		break;

	case PR_GET_NAME:

		get_task_comm(comm, me);

		if (copy_to_user((char __user *)arg2, comm, sizeof(comm)))

			return -EFAULT;

		break;

	case PR_GET_ENDIAN:

		error = GET_ENDIAN(me, arg2);

		break;

	case PR_SET_ENDIAN:

		error = SET_ENDIAN(me, arg2);

		break;

	case PR_GET_SECCOMP:

		error = prctl_get_seccomp();

		break;

	case PR_SET_SECCOMP:

		error = prctl_set_seccomp(arg2, (char __user *)arg3);

		break;

	case PR_GET_TSC:

		error = GET_TSC_CTL(arg2);

		break;

	case PR_SET_TSC:

		error = SET_TSC_CTL(arg2);

		break;

	case PR_TASK_PERF_EVENTS_DISABLE:

		error = perf_event_task_disable();

		break;

	case PR_TASK_PERF_EVENTS_ENABLE:

		error = perf_event_task_enable();

		break;

	case PR_GET_TIMERSLACK:

		if (current->timer_slack_ns > ULONG_MAX)

			error = ULONG_MAX;

		else

			error = current->timer_slack_ns;

		break;

	case PR_SET_TIMERSLACK:

		if (arg2 <= 0)

			current->timer_slack_ns =

					current->default_timer_slack_ns;

		else

			current->timer_slack_ns = arg2;

		break;

	case PR_MCE_KILL:

		if (arg4 | arg5)

			return -EINVAL;

		switch (arg2) {

		case PR_MCE_KILL_CLEAR:

			if (arg3 != 0)

				return -EINVAL;

			current->flags &= ~PF_MCE_PROCESS;

			break;

		case PR_MCE_KILL_SET:

			current->flags |= PF_MCE_PROCESS;

			if (arg3 == PR_MCE_KILL_EARLY)

				current->flags |= PF_MCE_EARLY;

			else if (arg3 == PR_MCE_KILL_LATE)

				current->flags &= ~PF_MCE_EARLY;

			else if (arg3 == PR_MCE_KILL_DEFAULT)

				current->flags &=

						~(PF_MCE_EARLY|PF_MCE_PROCESS);

			else

				return -EINVAL;

			break;

		default:

			return -EINVAL;

		}

		break;

	case PR_MCE_KILL_GET:

		if (arg2 | arg3 | arg4 | arg5)

			return -EINVAL;

		if (current->flags & PF_MCE_PROCESS)

			error = (current->flags & PF_MCE_EARLY) ?

				PR_MCE_KILL_EARLY : PR_MCE_KILL_LATE;

		else

			error = PR_MCE_KILL_DEFAULT;

		break;

	case PR_SET_MM:

		error = prctl_set_mm(arg2, arg3, arg4, arg5);

		break;

	case PR_GET_TID_ADDRESS:

		error = prctl_get_tid_address(me, (int __user **)arg2);

		break;

	case PR_SET_CHILD_SUBREAPER:

		me->signal->is_child_subreaper = !!arg2;

		if (!arg2)

			break;



		walk_process_tree(me, propagate_has_child_subreaper, NULL);

		break;

	case PR_GET_CHILD_SUBREAPER:

		error = put_user(me->signal->is_child_subreaper,

				 (int __user *)arg2);

		break;

	case PR_SET_NO_NEW_PRIVS:

		if (arg2 != 1 || arg3 || arg4 || arg5)

			return -EINVAL;



		task_set_no_new_privs(current);

		break;

	case PR_GET_NO_NEW_PRIVS:

		if (arg2 || arg3 || arg4 || arg5)

			return -EINVAL;

		return task_no_new_privs(current) ? 1 : 0;

	case PR_GET_THP_DISABLE:

		if (arg2 || arg3 || arg4 || arg5)

			return -EINVAL;

		error = !!test_bit(MMF_DISABLE_THP, &me->mm->flags);

		break;

	case PR_SET_THP_DISABLE:

		if (arg3 || arg4 || arg5)

			return -EINVAL;

		if (down_write_killable(&me->mm->mmap_sem))

			return -EINTR;

		if (arg2)

			set_bit(MMF_DISABLE_THP, &me->mm->flags);

		else

			clear_bit(MMF_DISABLE_THP, &me->mm->flags);

		up_write(&me->mm->mmap_sem);

		break;

	case PR_MPX_ENABLE_MANAGEMENT:

		if (arg2 || arg3 || arg4 || arg5)

			return -EINVAL;

		error = MPX_ENABLE_MANAGEMENT();

		break;

	case PR_MPX_DISABLE_MANAGEMENT:

		if (arg2 || arg3 || arg4 || arg5)

			return -EINVAL;

		error = MPX_DISABLE_MANAGEMENT();

		break;

	case PR_SET_FP_MODE:

		error = SET_FP_MODE(me, arg2);

		break;

	case PR_GET_FP_MODE:

		error = GET_FP_MODE(me);

		break;

	case PR_SVE_SET_VL:

		error = SVE_SET_VL(arg2);

		break;

	case PR_SVE_GET_VL:

		error = SVE_GET_VL();

		break;

	case PR_GET_SPECULATION_CTRL:

		if (arg3 || arg4 || arg5)

			return -EINVAL;

		error = arch_prctl_spec_ctrl_get(me, arg2);

		break;

	case PR_SET_SPECULATION_CTRL:

		if (arg4 || arg5)

			return -EINVAL;

		error = arch_prctl_spec_ctrl_set(me, arg2, arg3);

		break;

	default:

		error = -EINVAL;

		break;

	}

	return error;

}



SYSCALL_DEFINE3(getcpu, unsigned __user *, cpup, unsigned __user *, nodep,

		struct getcpu_cache __user *, unused)

{

	int err = 0;

	int cpu = raw_smp_processor_id();



	if (cpup)

		err |= put_user(cpu, cpup);

	if (nodep)

		err |= put_user(cpu_to_node(cpu), nodep);

	return err ? -EFAULT : 0;

}



/**

 * do_sysinfo - fill in sysinfo struct

 * @info: pointer to buffer to fill

 */

static int do_sysinfo(struct sysinfo *info)

{

	unsigned long mem_total, sav_total;

	unsigned int mem_unit, bitcount;

	struct timespec tp;



	memset(info, 0, sizeof(struct sysinfo));



	get_monotonic_boottime(&tp);

	info->uptime = tp.tv_sec + (tp.tv_nsec ? 1 : 0);



	get_avenrun(info->loads, 0, SI_LOAD_SHIFT - FSHIFT);



	info->procs = nr_threads;



	si_meminfo(info);

	si_swapinfo(info);



	/*

	 * If the sum of all the available memory (i.e. ram + swap)

	 * is less than can be stored in a 32 bit unsigned long then

	 * we can be binary compatible with 2.2.x kernels.  If not,

	 * well, in that case 2.2.x was broken anyways...

	 *

	 *  -Erik Andersen <andersee@debian.org>

	 */



	mem_total = info->totalram + info->totalswap;

	if (mem_total < info->totalram || mem_total < info->totalswap)

		goto out;

	bitcount = 0;

	mem_unit = info->mem_unit;

	while (mem_unit > 1) {

		bitcount++;

		mem_unit >>= 1;

		sav_total = mem_total;

		mem_total <<= 1;

		if (mem_total < sav_total)

			goto out;

	}



	/*

	 * If mem_total did not overflow, multiply all memory values by

	 * info->mem_unit and set it to 1.  This leaves things compatible

	 * with 2.2.x, and also retains compatibility with earlier 2.4.x

	 * kernels...

	 */



	info->mem_unit = 1;

	info->totalram <<= bitcount;

	info->freeram <<= bitcount;

	info->sharedram <<= bitcount;

	info->bufferram <<= bitcount;

	info->totalswap <<= bitcount;

	info->freeswap <<= bitcount;

	info->totalhigh <<= bitcount;

	info->freehigh <<= bitcount;



out:

	return 0;

}



SYSCALL_DEFINE1(sysinfo, struct sysinfo __user *, info)

{

	struct sysinfo val;



	do_sysinfo(&val);



	if (copy_to_user(info, &val, sizeof(struct sysinfo)))

		return -EFAULT;



	return 0;

}



#ifdef CONFIG_COMPAT

struct compat_sysinfo {

	s32 uptime;

	u32 loads[3];

	u32 totalram;

	u32 freeram;

	u32 sharedram;

	u32 bufferram;

	u32 totalswap;

	u32 freeswap;

	u16 procs;

	u16 pad;

	u32 totalhigh;

	u32 freehigh;

	u32 mem_unit;

	char _f[20-2*sizeof(u32)-sizeof(int)];

};



COMPAT_SYSCALL_DEFINE1(sysinfo, struct compat_sysinfo __user *, info)

{

	struct sysinfo s;



	do_sysinfo(&s);



	/* Check to see if any memory value is too large for 32-bit and scale

	 *  down if needed

	 */

	if (upper_32_bits(s.totalram) || upper_32_bits(s.totalswap)) {

		int bitcount = 0;



		while (s.mem_unit < PAGE_SIZE) {

			s.mem_unit <<= 1;

			bitcount++;

		}



		s.totalram >>= bitcount;

		s.freeram >>= bitcount;

		s.sharedram >>= bitcount;

		s.bufferram >>= bitcount;

		s.totalswap >>= bitcount;

		s.freeswap >>= bitcount;

		s.totalhigh >>= bitcount;

		s.freehigh >>= bitcount;

	}



	if (!access_ok(VERIFY_WRITE, info, sizeof(struct compat_sysinfo)) ||

	    __put_user(s.uptime, &info->uptime) ||

	    __put_user(s.loads[0], &info->loads[0]) ||

	    __put_user(s.loads[1], &info->loads[1]) ||

	    __put_user(s.loads[2], &info->loads[2]) ||

	    __put_user(s.totalram, &info->totalram) ||

	    __put_user(s.freeram, &info->freeram) ||

	    __put_user(s.sharedram, &info->sharedram) ||

	    __put_user(s.bufferram, &info->bufferram) ||

	    __put_user(s.totalswap, &info->totalswap) ||

	    __put_user(s.freeswap, &info->freeswap) ||

	    __put_user(s.procs, &info->procs) ||

	    __put_user(s.totalhigh, &info->totalhigh) ||

	    __put_user(s.freehigh, &info->freehigh) ||

	    __put_user(s.mem_unit, &info->mem_unit))

		return -EFAULT;



	return 0;

}

#endif /* CONFIG_COMPAT */



SYSCALL_DEFINE0(dandjprint){

	printk(KERN_INFO "dandj");

	return 0;

}

SYSCALL_DEFINE2(dandjfill, char *, buf, int, n){

	int i;char nameBuf[5]="dandj";

	if(n<5){

		printk(KERN_INFO "Buffer to small");

		return -EFAULT;

	}

	for(i=0;i<5;i++){

		buf[i]=nameBuf[i];

	}

	printk(KERN_INFO "dandjfill passed back: \"%s\"\n",buf);

	return 0;

}

SYSCALL_DEFINE1(dandjfill2,kuid_t *, n){

	// kuid_t uid;

	// *n = current->real_cred->uid;

	// uid = *n;

	// printk(KERN_INFO "dandjfill2 passed back: \"%u\"\n",uid);

	// return 0;

	const struct cred *cred = current_cred();

	n[0] = cred->uid;

	printk(KERN_INFO "dandjfill2 passed back: \"%u\"\n",n[0]);

	return 0;

}]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ cat /usr/src/linux-source-4.15.0/include/ys[K[Ksyscall 
s.h[K[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K


[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K/linux/ 
syscalls.h 

/*

 * syscalls.h - Linux syscall interfaces (non-arch-specific)

 *

 * Copyright (c) 2004 Randy Dunlap

 * Copyright (c) 2004 Open Source Development Labs

 *

 * This file is released under the GPLv2.

 * See the file COPYING for more details.

 */



#ifndef _LINUX_SYSCALLS_H

#define _LINUX_SYSCALLS_H



struct epoll_event;

struct iattr;

struct inode;

struct iocb;

struct io_event;

struct iovec;

struct itimerspec;

struct itimerval;

struct kexec_segment;

struct linux_dirent;

struct linux_dirent64;

struct list_head;

struct mmap_arg_struct;

struct msgbuf;

struct user_msghdr;

struct mmsghdr;

struct msqid_ds;

struct new_utsname;

struct nfsctl_arg;

struct __old_kernel_stat;

struct oldold_utsname;

struct old_utsname;

struct pollfd;

struct rlimit;

struct rlimit64;

struct rusage;

struct sched_param;

struct sched_attr;

struct sel_arg_struct;

struct semaphore;

struct sembuf;

struct shmid_ds;

struct sockaddr;

struct stat;

struct stat64;

struct statfs;

struct statfs64;

struct statx;

struct __sysctl_args;

struct sysinfo;

struct timespec;

struct timeval;

struct timex;

struct timezone;

struct tms;

struct utimbuf;

struct mq_attr;

struct compat_stat;

struct compat_timeval;

struct robust_list_head;

struct getcpu_cache;

struct old_linux_dirent;

struct perf_event_attr;

struct file_handle;

struct sigaltstack;

union bpf_attr;



#include <linux/types.h>

#include <linux/aio_abi.h>

#include <linux/capability.h>

#include <linux/signal.h>

#include <linux/list.h>

#include <linux/bug.h>

#include <linux/sem.h>

#include <asm/siginfo.h>

#include <linux/unistd.h>

#include <linux/quota.h>

#include <linux/key.h>

#include <trace/syscall.h>



/*

 * __MAP - apply a macro to syscall arguments

 * __MAP(n, m, t1, a1, t2, a2, ..., tn, an) will expand to

 *    m(t1, a1), m(t2, a2), ..., m(tn, an)

 * The first argument must be equal to the amount of type/name

 * pairs given.  Note that this list of pairs (i.e. the arguments

 * of __MAP starting at the third one) is in the same format as

 * for SYSCALL_DEFINE<n>/COMPAT_SYSCALL_DEFINE<n>

 */

#define __MAP0(m,...)

#define __MAP1(m,t,a) m(t,a)

#define __MAP2(m,t,a,...) m(t,a), __MAP1(m,__VA_ARGS__)

#define __MAP3(m,t,a,...) m(t,a), __MAP2(m,__VA_ARGS__)

#define __MAP4(m,t,a,...) m(t,a), __MAP3(m,__VA_ARGS__)

#define __MAP5(m,t,a,...) m(t,a), __MAP4(m,__VA_ARGS__)

#define __MAP6(m,t,a,...) m(t,a), __MAP5(m,__VA_ARGS__)

#define __MAP(n,...) __MAP##n(__VA_ARGS__)



#define __SC_DECL(t, a)	t a

#define __TYPE_AS(t, v)	__same_type((__force t)0, v)

#define __TYPE_IS_L(t)	(__TYPE_AS(t, 0L))

#define __TYPE_IS_UL(t)	(__TYPE_AS(t, 0UL))

#define __TYPE_IS_LL(t) (__TYPE_AS(t, 0LL) || __TYPE_AS(t, 0ULL))

#define __SC_LONG(t, a) __typeof(__builtin_choose_expr(__TYPE_IS_LL(t), 0LL, 0L)) a

#define __SC_CAST(t, a)	(__force t) a

#define __SC_ARGS(t, a)	a

#define __SC_TEST(t, a) (void)BUILD_BUG_ON_ZERO(!__TYPE_IS_LL(t) && sizeof(t) > sizeof(long))



#ifdef CONFIG_FTRACE_SYSCALLS

#define __SC_STR_ADECL(t, a)	#a

#define __SC_STR_TDECL(t, a)	#t



extern struct trace_event_class event_class_syscall_enter;

extern struct trace_event_class event_class_syscall_exit;

extern struct trace_event_functions enter_syscall_print_funcs;

extern struct trace_event_functions exit_syscall_print_funcs;



#define SYSCALL_TRACE_ENTER_EVENT(sname)				\

	static struct syscall_metadata __syscall_meta_##sname;		\

	static struct trace_event_call __used				\

	  event_enter_##sname = {					\

		.class			= &event_class_syscall_enter,	\

		{							\

			.name                   = "sys_enter"#sname,	\

		},							\

		.event.funcs            = &enter_syscall_print_funcs,	\

		.data			= (void *)&__syscall_meta_##sname,\

		.flags                  = TRACE_EVENT_FL_CAP_ANY,	\

	};								\

	static struct trace_event_call __used				\

	  __attribute__((section("_ftrace_events")))			\

	 *__event_enter_##sname = &event_enter_##sname;



#define SYSCALL_TRACE_EXIT_EVENT(sname)					\

	static struct syscall_metadata __syscall_meta_##sname;		\

	static struct trace_event_call __used				\

	  event_exit_##sname = {					\

		.class			= &event_class_syscall_exit,	\

		{							\

			.name                   = "sys_exit"#sname,	\

		},							\

		.event.funcs		= &exit_syscall_print_funcs,	\

		.data			= (void *)&__syscall_meta_##sname,\

		.flags                  = TRACE_EVENT_FL_CAP_ANY,	\

	};								\

	static struct trace_event_call __used				\

	  __attribute__((section("_ftrace_events")))			\

	*__event_exit_##sname = &event_exit_##sname;



#define SYSCALL_METADATA(sname, nb, ...)			\

	static const char *types_##sname[] = {			\

		__MAP(nb,__SC_STR_TDECL,__VA_ARGS__)		\

	};							\

	static const char *args_##sname[] = {			\

		__MAP(nb,__SC_STR_ADECL,__VA_ARGS__)		\

	};							\

	SYSCALL_TRACE_ENTER_EVENT(sname);			\

	SYSCALL_TRACE_EXIT_EVENT(sname);			\

	static struct syscall_metadata __used			\

	  __syscall_meta_##sname = {				\

		.name 		= "sys"#sname,			\

		.syscall_nr	= -1,	/* Filled in at boot */	\

		.nb_args 	= nb,				\

		.types		= nb ? types_##sname : NULL,	\

		.args		= nb ? args_##sname : NULL,	\

		.enter_event	= &event_enter_##sname,		\

		.exit_event	= &event_exit_##sname,		\

		.enter_fields	= LIST_HEAD_INIT(__syscall_meta_##sname.enter_fields), \

	};							\

	static struct syscall_metadata __used			\

	  __attribute__((section("__syscalls_metadata")))	\

	 *__p_syscall_meta_##sname = &__syscall_meta_##sname;



static inline int is_syscall_trace_event(struct trace_event_call *tp_event)

{

	return tp_event->class == &event_class_syscall_enter ||

	       tp_event->class == &event_class_syscall_exit;

}



#else

#define SYSCALL_METADATA(sname, nb, ...)



static inline int is_syscall_trace_event(struct trace_event_call *tp_event)

{

	return 0;

}

#endif



#define SYSCALL_DEFINE0(sname)					\

	SYSCALL_METADATA(_##sname, 0);				\

	asmlinkage long sys_##sname(void)



#define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)

#define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)

#define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)

#define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)

#define SYSCALL_DEFINE5(name, ...) SYSCALL_DEFINEx(5, _##name, __VA_ARGS__)

#define SYSCALL_DEFINE6(name, ...) SYSCALL_DEFINEx(6, _##name, __VA_ARGS__)



#define SYSCALL_DEFINE_MAXARGS	6



#define SYSCALL_DEFINEx(x, sname, ...)				\

	SYSCALL_METADATA(sname, x, __VA_ARGS__)			\

	__SYSCALL_DEFINEx(x, sname, __VA_ARGS__)



#define __PROTECT(...) asmlinkage_protect(__VA_ARGS__)

#define __SYSCALL_DEFINEx(x, name, ...)					\

	asmlinkage long sys##name(__MAP(x,__SC_DECL,__VA_ARGS__))	\

		__attribute__((alias(__stringify(SyS##name))));		\

	static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__));	\

	asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__));	\

	asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__))	\

	{								\

		long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__));	\

		__MAP(x,__SC_TEST,__VA_ARGS__);				\

		__PROTECT(x, ret,__MAP(x,__SC_ARGS,__VA_ARGS__));	\

		return ret;						\

	}								\

	static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))



/*

 * Called before coming back to user-mode. Returning to user-mode with an

 * address limit different than USER_DS can allow to overwrite kernel memory.

 */

static inline void addr_limit_user_check(void)

{

#ifdef TIF_FSCHECK

	if (!test_thread_flag(TIF_FSCHECK))

		return;

#endif



	if (CHECK_DATA_CORRUPTION(!segment_eq(get_fs(), USER_DS),

				  "Invalid address limit on user-mode return"))

		force_sig(SIGKILL, current);



#ifdef TIF_FSCHECK

	clear_thread_flag(TIF_FSCHECK);

#endif

}



asmlinkage long sys32_quotactl(unsigned int cmd, const char __user *special,

			       qid_t id, void __user *addr);

asmlinkage long sys_time(time_t __user *tloc);

asmlinkage long sys_stime(time_t __user *tptr);

asmlinkage long sys_gettimeofday(struct timeval __user *tv,

				struct timezone __user *tz);

asmlinkage long sys_settimeofday(struct timeval __user *tv,

				struct timezone __user *tz);

asmlinkage long sys_adjtimex(struct timex __user *txc_p);



asmlinkage long sys_times(struct tms __user *tbuf);



asmlinkage long sys_gettid(void);

asmlinkage long sys_nanosleep(struct timespec __user *rqtp, struct timespec __user *rmtp);

asmlinkage long sys_alarm(unsigned int seconds);

asmlinkage long sys_getpid(void);

asmlinkage long sys_getppid(void);

asmlinkage long sys_getuid(void);

asmlinkage long sys_geteuid(void);

asmlinkage long sys_getgid(void);

asmlinkage long sys_getegid(void);

asmlinkage long sys_getresuid(uid_t __user *ruid, uid_t __user *euid, uid_t __user *suid);

asmlinkage long sys_getresgid(gid_t __user *rgid, gid_t __user *egid, gid_t __user *sgid);

asmlinkage long sys_getpgid(pid_t pid);

asmlinkage long sys_getpgrp(void);

asmlinkage long sys_getsid(pid_t pid);

asmlinkage long sys_getgroups(int gidsetsize, gid_t __user *grouplist);



asmlinkage long sys_setregid(gid_t rgid, gid_t egid);

asmlinkage long sys_setgid(gid_t gid);

asmlinkage long sys_setreuid(uid_t ruid, uid_t euid);

asmlinkage long sys_setuid(uid_t uid);

asmlinkage long sys_setresuid(uid_t ruid, uid_t euid, uid_t suid);

asmlinkage long sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid);

asmlinkage long sys_setfsuid(uid_t uid);

asmlinkage long sys_setfsgid(gid_t gid);

asmlinkage long sys_setpgid(pid_t pid, pid_t pgid);

asmlinkage long sys_setsid(void);

asmlinkage long sys_setgroups(int gidsetsize, gid_t __user *grouplist);



asmlinkage long sys_acct(const char __user *name);

asmlinkage long sys_capget(cap_user_header_t header,

				cap_user_data_t dataptr);

asmlinkage long sys_capset(cap_user_header_t header,

				const cap_user_data_t data);

asmlinkage long sys_personality(unsigned int personality);



asmlinkage long sys_sigpending(old_sigset_t __user *set);

asmlinkage long sys_sigprocmask(int how, old_sigset_t __user *set,

				old_sigset_t __user *oset);

asmlinkage long sys_sigaltstack(const struct sigaltstack __user *uss,

				struct sigaltstack __user *uoss);



asmlinkage long sys_getitimer(int which, struct itimerval __user *value);

asmlinkage long sys_setitimer(int which,

				struct itimerval __user *value,

				struct itimerval __user *ovalue);

asmlinkage long sys_timer_create(clockid_t which_clock,

				 struct sigevent __user *timer_event_spec,

				 timer_t __user * created_timer_id);

asmlinkage long sys_timer_gettime(timer_t timer_id,

				struct itimerspec __user *setting);

asmlinkage long sys_timer_getoverrun(timer_t timer_id);

asmlinkage long sys_timer_settime(timer_t timer_id, int flags,

				const struct itimerspec __user *new_setting,

				struct itimerspec __user *old_setting);

asmlinkage long sys_timer_delete(timer_t timer_id);

asmlinkage long sys_clock_settime(clockid_t which_clock,

				const struct timespec __user *tp);

asmlinkage long sys_clock_gettime(clockid_t which_clock,

				struct timespec __user *tp);

asmlinkage long sys_clock_adjtime(clockid_t which_clock,

				struct timex __user *tx);

asmlinkage long sys_clock_getres(clockid_t which_clock,

				struct timespec __user *tp);

asmlinkage long sys_clock_nanosleep(clockid_t which_clock, int flags,

				const struct timespec __user *rqtp,

				struct timespec __user *rmtp);



asmlinkage long sys_nice(int increment);

asmlinkage long sys_sched_setscheduler(pid_t pid, int policy,

					struct sched_param __user *param);

asmlinkage long sys_sched_setparam(pid_t pid,

					struct sched_param __user *param);

asmlinkage long sys_sched_setattr(pid_t pid,

					struct sched_attr __user *attr,

					unsigned int flags);

asmlinkage long sys_sched_getscheduler(pid_t pid);

asmlinkage long sys_sched_getparam(pid_t pid,

					struct sched_param __user *param);

asmlinkage long sys_sched_getattr(pid_t pid,

					struct sched_attr __user *attr,

					unsigned int size,

					unsigned int flags);

asmlinkage long sys_sched_setaffinity(pid_t pid, unsigned int len,

					unsigned long __user *user_mask_ptr);

asmlinkage long sys_sched_getaffinity(pid_t pid, unsigned int len,

					unsigned long __user *user_mask_ptr);

asmlinkage long sys_sched_yield(void);

asmlinkage long sys_sched_get_priority_max(int policy);

asmlinkage long sys_sched_get_priority_min(int policy);

asmlinkage long sys_sched_rr_get_interval(pid_t pid,

					struct timespec __user *interval);

asmlinkage long sys_setpriority(int which, int who, int niceval);

asmlinkage long sys_getpriority(int which, int who);



asmlinkage long sys_shutdown(int, int);

asmlinkage long sys_reboot(int magic1, int magic2, unsigned int cmd,

				void __user *arg);

asmlinkage long sys_restart_syscall(void);

asmlinkage long sys_kexec_load(unsigned long entry, unsigned long nr_segments,

				struct kexec_segment __user *segments,

				unsigned long flags);

asmlinkage long sys_kexec_file_load(int kernel_fd, int initrd_fd,

				    unsigned long cmdline_len,

				    const char __user *cmdline_ptr,

				    unsigned long flags);



asmlinkage long sys_exit(int error_code);

asmlinkage long sys_exit_group(int error_code);

asmlinkage long sys_wait4(pid_t pid, int __user *stat_addr,

				int options, struct rusage __user *ru);

asmlinkage long sys_waitid(int which, pid_t pid,

			   struct siginfo __user *infop,

			   int options, struct rusage __user *ru);

asmlinkage long sys_waitpid(pid_t pid, int __user *stat_addr, int options);

asmlinkage long sys_set_tid_address(int __user *tidptr);

asmlinkage long sys_futex(u32 __user *uaddr, int op, u32 val,

			struct timespec __user *utime, u32 __user *uaddr2,

			u32 val3);



asmlinkage long sys_init_module(void __user *umod, unsigned long len,

				const char __user *uargs);

asmlinkage long sys_delete_module(const char __user *name_user,

				unsigned int flags);



#ifdef CONFIG_OLD_SIGSUSPEND

asmlinkage long sys_sigsuspend(old_sigset_t mask);

#endif



#ifdef CONFIG_OLD_SIGSUSPEND3

asmlinkage long sys_sigsuspend(int unused1, int unused2, old_sigset_t mask);

#endif



asmlinkage long sys_rt_sigsuspend(sigset_t __user *unewset, size_t sigsetsize);



#ifdef CONFIG_OLD_SIGACTION

asmlinkage long sys_sigaction(int, const struct old_sigaction __user *,

				struct old_sigaction __user *);

#endif



#ifndef CONFIG_ODD_RT_SIGACTION

asmlinkage long sys_rt_sigaction(int,

				 const struct sigaction __user *,

				 struct sigaction __user *,

				 size_t);

#endif

asmlinkage long sys_rt_sigprocmask(int how, sigset_t __user *set,

				sigset_t __user *oset, size_t sigsetsize);

asmlinkage long sys_rt_sigpending(sigset_t __user *set, size_t sigsetsize);

asmlinkage long sys_rt_sigtimedwait(const sigset_t __user *uthese,

				siginfo_t __user *uinfo,

				const struct timespec __user *uts,

				size_t sigsetsize);

asmlinkage long sys_rt_tgsigqueueinfo(pid_t tgid, pid_t  pid, int sig,

		siginfo_t __user *uinfo);

asmlinkage long sys_kill(pid_t pid, int sig);

asmlinkage long sys_tgkill(pid_t tgid, pid_t pid, int sig);

asmlinkage long sys_tkill(pid_t pid, int sig);

asmlinkage long sys_rt_sigqueueinfo(pid_t pid, int sig, siginfo_t __user *uinfo);

asmlinkage long sys_sgetmask(void);

asmlinkage long sys_ssetmask(int newmask);

asmlinkage long sys_signal(int sig, __sighandler_t handler);

asmlinkage long sys_pause(void);



asmlinkage long sys_sync(void);

asmlinkage long sys_fsync(unsigned int fd);

asmlinkage long sys_fdatasync(unsigned int fd);

asmlinkage long sys_bdflush(int func, long data);

asmlinkage long sys_mount(char __user *dev_name, char __user *dir_name,

				char __user *type, unsigned long flags,

				void __user *data);

asmlinkage long sys_umount(char __user *name, int flags);

asmlinkage long sys_oldumount(char __user *name);

asmlinkage long sys_truncate(const char __user *path, long length);

asmlinkage long sys_ftruncate(unsigned int fd, unsigned long length);

asmlinkage long sys_stat(const char __user *filename,

			struct __old_kernel_stat __user *statbuf);

asmlinkage long sys_statfs(const char __user * path,

				struct statfs __user *buf);

asmlinkage long sys_statfs64(const char __user *path, size_t sz,

				struct statfs64 __user *buf);

asmlinkage long sys_fstatfs(unsigned int fd, struct statfs __user *buf);

asmlinkage long sys_fstatfs64(unsigned int fd, size_t sz,

				struct statfs64 __user *buf);

asmlinkage long sys_lstat(const char __user *filename,

			struct __old_kernel_stat __user *statbuf);

asmlinkage long sys_fstat(unsigned int fd,

			struct __old_kernel_stat __user *statbuf);

asmlinkage long sys_newstat(const char __user *filename,

				struct stat __user *statbuf);

asmlinkage long sys_newlstat(const char __user *filename,

				struct stat __user *statbuf);

asmlinkage long sys_newfstat(unsigned int fd, struct stat __user *statbuf);

asmlinkage long sys_ustat(unsigned dev, struct ustat __user *ubuf);

#if defined(__ARCH_WANT_STAT64) || defined(__ARCH_WANT_COMPAT_STAT64)

asmlinkage long sys_stat64(const char __user *filename,

				struct stat64 __user *statbuf);

asmlinkage long sys_fstat64(unsigned long fd, struct stat64 __user *statbuf);

asmlinkage long sys_lstat64(const char __user *filename,

				struct stat64 __user *statbuf);

asmlinkage long sys_fstatat64(int dfd, const char __user *filename,

			       struct stat64 __user *statbuf, int flag);

#endif

#if BITS_PER_LONG == 32

asmlinkage long sys_truncate64(const char __user *path, loff_t length);

asmlinkage long sys_ftruncate64(unsigned int fd, loff_t length);

#endif



asmlinkage long sys_setxattr(const char __user *path, const char __user *name,

			     const void __user *value, size_t size, int flags);

asmlinkage long sys_lsetxattr(const char __user *path, const char __user *name,

			      const void __user *value, size_t size, int flags);

asmlinkage long sys_fsetxattr(int fd, const char __user *name,

			      const void __user *value, size_t size, int flags);

asmlinkage long sys_getxattr(const char __user *path, const char __user *name,

			     void __user *value, size_t size);

asmlinkage long sys_lgetxattr(const char __user *path, const char __user *name,

			      void __user *value, size_t size);

asmlinkage long sys_fgetxattr(int fd, const char __user *name,

			      void __user *value, size_t size);

asmlinkage long sys_listxattr(const char __user *path, char __user *list,

			      size_t size);

asmlinkage long sys_llistxattr(const char __user *path, char __user *list,

			       size_t size);

asmlinkage long sys_flistxattr(int fd, char __user *list, size_t size);

asmlinkage long sys_removexattr(const char __user *path,

				const char __user *name);

asmlinkage long sys_lremovexattr(const char __user *path,

				 const char __user *name);

asmlinkage long sys_fremovexattr(int fd, const char __user *name);



asmlinkage long sys_brk(unsigned long brk);

asmlinkage long sys_mprotect(unsigned long start, size_t len,

				unsigned long prot);

asmlinkage long sys_mremap(unsigned long addr,

			   unsigned long old_len, unsigned long new_len,

			   unsigned long flags, unsigned long new_addr);

asmlinkage long sys_remap_file_pages(unsigned long start, unsigned long size,

			unsigned long prot, unsigned long pgoff,

			unsigned long flags);

asmlinkage long sys_msync(unsigned long start, size_t len, int flags);

asmlinkage long sys_fadvise64(int fd, loff_t offset, size_t len, int advice);

asmlinkage long sys_fadvise64_64(int fd, loff_t offset, loff_t len, int advice);

asmlinkage long sys_munmap(unsigned long addr, size_t len);

asmlinkage long sys_mlock(unsigned long start, size_t len);

asmlinkage long sys_munlock(unsigned long start, size_t len);

asmlinkage long sys_mlockall(int flags);

asmlinkage long sys_munlockall(void);

asmlinkage long sys_madvise(unsigned long start, size_t len, int behavior);

asmlinkage long sys_mincore(unsigned long start, size_t len,

				unsigned char __user * vec);



asmlinkage long sys_pivot_root(const char __user *new_root,

				const char __user *put_old);

asmlinkage long sys_chroot(const char __user *filename);

asmlinkage long sys_mknod(const char __user *filename, umode_t mode,

				unsigned dev);

asmlinkage long sys_link(const char __user *oldname,

				const char __user *newname);

asmlinkage long sys_symlink(const char __user *old, const char __user *new);

asmlinkage long sys_unlink(const char __user *pathname);

asmlinkage long sys_rename(const char __user *oldname,

				const char __user *newname);

asmlinkage long sys_chmod(const char __user *filename, umode_t mode);

asmlinkage long sys_fchmod(unsigned int fd, umode_t mode);



asmlinkage long sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg);

#if BITS_PER_LONG == 32

asmlinkage long sys_fcntl64(unsigned int fd,

				unsigned int cmd, unsigned long arg);

#endif

asmlinkage long sys_pipe(int __user *fildes);

asmlinkage long sys_pipe2(int __user *fildes, int flags);

asmlinkage long sys_dup(unsigned int fildes);

asmlinkage long sys_dup2(unsigned int oldfd, unsigned int newfd);

asmlinkage long sys_dup3(unsigned int oldfd, unsigned int newfd, int flags);

asmlinkage long sys_ioperm(unsigned long from, unsigned long num, int on);

asmlinkage long sys_ioctl(unsigned int fd, unsigned int cmd,

				unsigned long arg);

asmlinkage long sys_flock(unsigned int fd, unsigned int cmd);

asmlinkage long sys_io_setup(unsigned nr_reqs, aio_context_t __user *ctx);

asmlinkage long sys_io_destroy(aio_context_t ctx);

asmlinkage long sys_io_getevents(aio_context_t ctx_id,

				long min_nr,

				long nr,

				struct io_event __user *events,

				struct timespec __user *timeout);

asmlinkage long sys_io_submit(aio_context_t, long,

				struct iocb __user * __user *);

asmlinkage long sys_io_cancel(aio_context_t ctx_id, struct iocb __user *iocb,

			      struct io_event __user *result);

asmlinkage long sys_sendfile(int out_fd, int in_fd,

			     off_t __user *offset, size_t count);

asmlinkage long sys_sendfile64(int out_fd, int in_fd,

			       loff_t __user *offset, size_t count);

asmlinkage long sys_readlink(const char __user *path,

				char __user *buf, int bufsiz);

asmlinkage long sys_creat(const char __user *pathname, umode_t mode);

asmlinkage long sys_open(const char __user *filename,

				int flags, umode_t mode);

asmlinkage long sys_close(unsigned int fd);

asmlinkage long sys_access(const char __user *filename, int mode);

asmlinkage long sys_vhangup(void);

asmlinkage long sys_chown(const char __user *filename,

				uid_t user, gid_t group);

asmlinkage long sys_lchown(const char __user *filename,

				uid_t user, gid_t group);

asmlinkage long sys_fchown(unsigned int fd, uid_t user, gid_t group);

#ifdef CONFIG_HAVE_UID16

asmlinkage long sys_chown16(const char __user *filename,

				old_uid_t user, old_gid_t group);

asmlinkage long sys_lchown16(const char __user *filename,

				old_uid_t user, old_gid_t group);

asmlinkage long sys_fchown16(unsigned int fd, old_uid_t user, old_gid_t group);

asmlinkage long sys_setregid16(old_gid_t rgid, old_gid_t egid);

asmlinkage long sys_setgid16(old_gid_t gid);

asmlinkage long sys_setreuid16(old_uid_t ruid, old_uid_t euid);

asmlinkage long sys_setuid16(old_uid_t uid);

asmlinkage long sys_setresuid16(old_uid_t ruid, old_uid_t euid, old_uid_t suid);

asmlinkage long sys_getresuid16(old_uid_t __user *ruid,

				old_uid_t __user *euid, old_uid_t __user *suid);

asmlinkage long sys_setresgid16(old_gid_t rgid, old_gid_t egid, old_gid_t sgid);

asmlinkage long sys_getresgid16(old_gid_t __user *rgid,

				old_gid_t __user *egid, old_gid_t __user *sgid);

asmlinkage long sys_setfsuid16(old_uid_t uid);

asmlinkage long sys_setfsgid16(old_gid_t gid);

asmlinkage long sys_getgroups16(int gidsetsize, old_gid_t __user *grouplist);

asmlinkage long sys_setgroups16(int gidsetsize, old_gid_t __user *grouplist);

asmlinkage long sys_getuid16(void);

asmlinkage long sys_geteuid16(void);

asmlinkage long sys_getgid16(void);

asmlinkage long sys_getegid16(void);

#endif



asmlinkage long sys_utime(char __user *filename,

				struct utimbuf __user *times);

asmlinkage long sys_utimes(char __user *filename,

				struct timeval __user *utimes);

asmlinkage long sys_lseek(unsigned int fd, off_t offset,

			  unsigned int whence);

asmlinkage long sys_llseek(unsigned int fd, unsigned long offset_high,

			unsigned long offset_low, loff_t __user *result,

			unsigned int whence);

asmlinkage long sys_read(unsigned int fd, char __user *buf, size_t count);

asmlinkage long sys_readahead(int fd, loff_t offset, size_t count);

asmlinkage long sys_readv(unsigned long fd,

			  const struct iovec __user *vec,

			  unsigned long vlen);

asmlinkage long sys_write(unsigned int fd, const char __user *buf,

			  size_t count);

asmlinkage long sys_writev(unsigned long fd,

			   const struct iovec __user *vec,

			   unsigned long vlen);

asmlinkage long sys_pread64(unsigned int fd, char __user *buf,

			    size_t count, loff_t pos);

asmlinkage long sys_pwrite64(unsigned int fd, const char __user *buf,

			     size_t count, loff_t pos);

asmlinkage long sys_preadv(unsigned long fd, const struct iovec __user *vec,

			   unsigned long vlen, unsigned long pos_l, unsigned long pos_h);

asmlinkage long sys_preadv2(unsigned long fd, const struct iovec __user *vec,

			    unsigned long vlen, unsigned long pos_l, unsigned long pos_h,

			    rwf_t flags);

asmlinkage long sys_pwritev(unsigned long fd, const struct iovec __user *vec,

			    unsigned long vlen, unsigned long pos_l, unsigned long pos_h);

asmlinkage long sys_pwritev2(unsigned long fd, const struct iovec __user *vec,

			    unsigned long vlen, unsigned long pos_l, unsigned long pos_h,

			    rwf_t flags);

asmlinkage long sys_getcwd(char __user *buf, unsigned long size);

asmlinkage long sys_mkdir(const char __user *pathname, umode_t mode);

asmlinkage long sys_chdir(const char __user *filename);

asmlinkage long sys_fchdir(unsigned int fd);

asmlinkage long sys_rmdir(const char __user *pathname);

asmlinkage long sys_lookup_dcookie(u64 cookie64, char __user *buf, size_t len);

asmlinkage long sys_quotactl(unsigned int cmd, const char __user *special,

				qid_t id, void __user *addr);

asmlinkage long sys_getdents(unsigned int fd,

				struct linux_dirent __user *dirent,

				unsigned int count);

asmlinkage long sys_getdents64(unsigned int fd,

				struct linux_dirent64 __user *dirent,

				unsigned int count);



asmlinkage long sys_setsockopt(int fd, int level, int optname,

				char __user *optval, int optlen);

asmlinkage long sys_getsockopt(int fd, int level, int optname,

				char __user *optval, int __user *optlen);

asmlinkage long sys_bind(int, struct sockaddr __user *, int);

asmlinkage long sys_connect(int, struct sockaddr __user *, int);

asmlinkage long sys_accept(int, struct sockaddr __user *, int __user *);

asmlinkage long sys_accept4(int, struct sockaddr __user *, int __user *, int);

asmlinkage long sys_getsockname(int, struct sockaddr __user *, int __user *);

asmlinkage long sys_getpeername(int, struct sockaddr __user *, int __user *);

asmlinkage long sys_send(int, void __user *, size_t, unsigned);

asmlinkage long sys_sendto(int, void __user *, size_t, unsigned,

				struct sockaddr __user *, int);

asmlinkage long sys_sendmsg(int fd, struct user_msghdr __user *msg, unsigned flags);

asmlinkage long sys_sendmmsg(int fd, struct mmsghdr __user *msg,

			     unsigned int vlen, unsigned flags);

asmlinkage long sys_recv(int, void __user *, size_t, unsigned);

asmlinkage long sys_recvfrom(int, void __user *, size_t, unsigned,

				struct sockaddr __user *, int __user *);

asmlinkage long sys_recvmsg(int fd, struct user_msghdr __user *msg, unsigned flags);

asmlinkage long sys_recvmmsg(int fd, struct mmsghdr __user *msg,

			     unsigned int vlen, unsigned flags,

			     struct timespec __user *timeout);

asmlinkage long sys_socket(int, int, int);

asmlinkage long sys_socketpair(int, int, int, int __user *);

asmlinkage long sys_socketcall(int call, unsigned long __user *args);

asmlinkage long sys_listen(int, int);

asmlinkage long sys_poll(struct pollfd __user *ufds, unsigned int nfds,

				int timeout);

asmlinkage long sys_select(int n, fd_set __user *inp, fd_set __user *outp,

			fd_set __user *exp, struct timeval __user *tvp);

asmlinkage long sys_old_select(struct sel_arg_struct __user *arg);

asmlinkage long sys_epoll_create(int size);

asmlinkage long sys_epoll_create1(int flags);

asmlinkage long sys_epoll_ctl(int epfd, int op, int fd,

				struct epoll_event __user *event);

asmlinkage long sys_epoll_wait(int epfd, struct epoll_event __user *events,

				int maxevents, int timeout);

asmlinkage long sys_epoll_pwait(int epfd, struct epoll_event __user *events,

				int maxevents, int timeout,

				const sigset_t __user *sigmask,

				size_t sigsetsize);

asmlinkage long sys_gethostname(char __user *name, int len);

asmlinkage long sys_sethostname(char __user *name, int len);

asmlinkage long sys_setdomainname(char __user *name, int len);

asmlinkage long sys_newuname(struct new_utsname __user *name);

asmlinkage long sys_uname(struct old_utsname __user *);

asmlinkage long sys_olduname(struct oldold_utsname __user *);



asmlinkage long sys_getrlimit(unsigned int resource,

				struct rlimit __user *rlim);

#ifdef __ARCH_WANT_SYS_OLD_GETRLIMIT

asmlinkage long sys_old_getrlimit(unsigned int resource, struct rlimit __user *rlim);

#endif

asmlinkage long sys_setrlimit(unsigned int resource,

				struct rlimit __user *rlim);

asmlinkage long sys_prlimit64(pid_t pid, unsigned int resource,

				const struct rlimit64 __user *new_rlim,

				struct rlimit64 __user *old_rlim);

asmlinkage long sys_getrusage(int who, struct rusage __user *ru);

asmlinkage long sys_umask(int mask);



asmlinkage long sys_msgget(key_t key, int msgflg);

asmlinkage long sys_msgsnd(int msqid, struct msgbuf __user *msgp,

				size_t msgsz, int msgflg);

asmlinkage long sys_msgrcv(int msqid, struct msgbuf __user *msgp,

				size_t msgsz, long msgtyp, int msgflg);

asmlinkage long sys_msgctl(int msqid, int cmd, struct msqid_ds __user *buf);



asmlinkage long sys_semget(key_t key, int nsems, int semflg);

asmlinkage long sys_semop(int semid, struct sembuf __user *sops,

				unsigned nsops);

asmlinkage long sys_semctl(int semid, int semnum, int cmd, unsigned long arg);

asmlinkage long sys_semtimedop(int semid, struct sembuf __user *sops,

				unsigned nsops,

				const struct timespec __user *timeout);

asmlinkage long sys_shmat(int shmid, char __user *shmaddr, int shmflg);

asmlinkage long sys_shmget(key_t key, size_t size, int flag);

asmlinkage long sys_shmdt(char __user *shmaddr);

asmlinkage long sys_shmctl(int shmid, int cmd, struct shmid_ds __user *buf);

asmlinkage long sys_ipc(unsigned int call, int first, unsigned long second,

		unsigned long third, void __user *ptr, long fifth);



asmlinkage long sys_mq_open(const char __user *name, int oflag, umode_t mode, struct mq_attr __user *attr);

asmlinkage long sys_mq_unlink(const char __user *name);

asmlinkage long sys_mq_timedsend(mqd_t mqdes, const char __user *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec __user *abs_timeout);

asmlinkage long sys_mq_timedreceive(mqd_t mqdes, char __user *msg_ptr, size_t msg_len, unsigned int __user *msg_prio, const struct timespec __user *abs_timeout);

asmlinkage long sys_mq_notify(mqd_t mqdes, const struct sigevent __user *notification);

asmlinkage long sys_mq_getsetattr(mqd_t mqdes, const struct mq_attr __user *mqstat, struct mq_attr __user *omqstat);



asmlinkage long sys_pciconfig_iobase(long which, unsigned long bus, unsigned long devfn);

asmlinkage long sys_pciconfig_read(unsigned long bus, unsigned long dfn,

				unsigned long off, unsigned long len,

				void __user *buf);

asmlinkage long sys_pciconfig_write(unsigned long bus, unsigned long dfn,

				unsigned long off, unsigned long len,

				void __user *buf);



asmlinkage long sys_prctl(int option, unsigned long arg2, unsigned long arg3,

			unsigned long arg4, unsigned long arg5);

asmlinkage long sys_swapon(const char __user *specialfile, int swap_flags);

asmlinkage long sys_swapoff(const char __user *specialfile);

asmlinkage long sys_sysctl(struct __sysctl_args __user *args);

asmlinkage long sys_sysinfo(struct sysinfo __user *info);

asmlinkage long sys_sysfs(int option,

				unsigned long arg1, unsigned long arg2);

asmlinkage long sys_syslog(int type, char __user *buf, int len);

asmlinkage long sys_uselib(const char __user *library);

asmlinkage long sys_ni_syscall(void);

asmlinkage long sys_ptrace(long request, long pid, unsigned long addr,

			   unsigned long data);



asmlinkage long sys_add_key(const char __user *_type,

			    const char __user *_description,

			    const void __user *_payload,

			    size_t plen,

			    key_serial_t destringid);



asmlinkage long sys_request_key(const char __user *_type,

				const char __user *_description,

				const char __user *_callout_info,

				key_serial_t destringid);



asmlinkage long sys_keyctl(int cmd, unsigned long arg2, unsigned long arg3,

			   unsigned long arg4, unsigned long arg5);



asmlinkage long sys_ioprio_set(int which, int who, int ioprio);

asmlinkage long sys_ioprio_get(int which, int who);

asmlinkage long sys_set_mempolicy(int mode, const unsigned long __user *nmask,

				unsigned long maxnode);

asmlinkage long sys_migrate_pages(pid_t pid, unsigned long maxnode,

				const unsigned long __user *from,

				const unsigned long __user *to);

asmlinkage long sys_move_pages(pid_t pid, unsigned long nr_pages,

				const void __user * __user *pages,

				const int __user *nodes,

				int __user *status,

				int flags);

asmlinkage long sys_mbind(unsigned long start, unsigned long len,

				unsigned long mode,

				const unsigned long __user *nmask,

				unsigned long maxnode,

				unsigned flags);

asmlinkage long sys_get_mempolicy(int __user *policy,

				unsigned long __user *nmask,

				unsigned long maxnode,

				unsigned long addr, unsigned long flags);



asmlinkage long sys_inotify_init(void);

asmlinkage long sys_inotify_init1(int flags);

asmlinkage long sys_inotify_add_watch(int fd, const char __user *path,

					u32 mask);

asmlinkage long sys_inotify_rm_watch(int fd, __s32 wd);



asmlinkage long sys_spu_run(int fd, __u32 __user *unpc,

				 __u32 __user *ustatus);

asmlinkage long sys_spu_create(const char __user *name,

		unsigned int flags, umode_t mode, int fd);



asmlinkage long sys_mknodat(int dfd, const char __user * filename, umode_t mode,

			    unsigned dev);

asmlinkage long sys_mkdirat(int dfd, const char __user * pathname, umode_t mode);

asmlinkage long sys_unlinkat(int dfd, const char __user * pathname, int flag);

asmlinkage long sys_symlinkat(const char __user * oldname,

			      int newdfd, const char __user * newname);

asmlinkage long sys_linkat(int olddfd, const char __user *oldname,

			   int newdfd, const char __user *newname, int flags);

asmlinkage long sys_renameat(int olddfd, const char __user * oldname,

			     int newdfd, const char __user * newname);

asmlinkage long sys_renameat2(int olddfd, const char __user *oldname,

			      int newdfd, const char __user *newname,

			      unsigned int flags);

asmlinkage long sys_futimesat(int dfd, const char __user *filename,

			      struct timeval __user *utimes);

asmlinkage long sys_faccessat(int dfd, const char __user *filename, int mode);

asmlinkage long sys_fchmodat(int dfd, const char __user * filename,

			     umode_t mode);

asmlinkage long sys_fchownat(int dfd, const char __user *filename, uid_t user,

			     gid_t group, int flag);

asmlinkage long sys_openat(int dfd, const char __user *filename, int flags,

			   umode_t mode);

asmlinkage long sys_newfstatat(int dfd, const char __user *filename,

			       struct stat __user *statbuf, int flag);

asmlinkage long sys_readlinkat(int dfd, const char __user *path, char __user *buf,

			       int bufsiz);

asmlinkage long sys_utimensat(int dfd, const char __user *filename,

				struct timespec __user *utimes, int flags);

asmlinkage long sys_unshare(unsigned long unshare_flags);



asmlinkage long sys_splice(int fd_in, loff_t __user *off_in,

			   int fd_out, loff_t __user *off_out,

			   size_t len, unsigned int flags);



asmlinkage long sys_vmsplice(int fd, const struct iovec __user *iov,

			     unsigned long nr_segs, unsigned int flags);



asmlinkage long sys_tee(int fdin, int fdout, size_t len, unsigned int flags);



asmlinkage long sys_sync_file_range(int fd, loff_t offset, loff_t nbytes,

					unsigned int flags);

asmlinkage long sys_sync_file_range2(int fd, unsigned int flags,

				     loff_t offset, loff_t nbytes);

asmlinkage long sys_get_robust_list(int pid,

				    struct robust_list_head __user * __user *head_ptr,

				    size_t __user *len_ptr);

asmlinkage long sys_set_robust_list(struct robust_list_head __user *head,

				    size_t len);

asmlinkage long sys_getcpu(unsigned __user *cpu, unsigned __user *node, struct getcpu_cache __user *cache);

asmlinkage long sys_signalfd(int ufd, sigset_t __user *user_mask, size_t sizemask);

asmlinkage long sys_signalfd4(int ufd, sigset_t __user *user_mask, size_t sizemask, int flags);

asmlinkage long sys_timerfd_create(int clockid, int flags);

asmlinkage long sys_timerfd_settime(int ufd, int flags,

				    const struct itimerspec __user *utmr,

				    struct itimerspec __user *otmr);

asmlinkage long sys_timerfd_gettime(int ufd, struct itimerspec __user *otmr);

asmlinkage long sys_eventfd(unsigned int count);

asmlinkage long sys_eventfd2(unsigned int count, int flags);

asmlinkage long sys_memfd_create(const char __user *uname_ptr, unsigned int flags);

asmlinkage long sys_userfaultfd(int flags);

asmlinkage long sys_fallocate(int fd, int mode, loff_t offset, loff_t len);

asmlinkage long sys_old_readdir(unsigned int, struct old_linux_dirent __user *, unsigned int);

asmlinkage long sys_pselect6(int, fd_set __user *, fd_set __user *,

			     fd_set __user *, struct timespec __user *,

			     void __user *);

asmlinkage long sys_ppoll(struct pollfd __user *, unsigned int,

			  struct timespec __user *, const sigset_t __user *,

			  size_t);

asmlinkage long sys_fanotify_init(unsigned int flags, unsigned int event_f_flags);

asmlinkage long sys_fanotify_mark(int fanotify_fd, unsigned int flags,

				  u64 mask, int fd,

				  const char  __user *pathname);

asmlinkage long sys_syncfs(int fd);



asmlinkage long sys_fork(void);

asmlinkage long sys_vfork(void);

#ifdef CONFIG_CLONE_BACKWARDS

asmlinkage long sys_clone(unsigned long, unsigned long, int __user *, unsigned long,

	       int __user *);

#else

#ifdef CONFIG_CLONE_BACKWARDS3

asmlinkage long sys_clone(unsigned long, unsigned long, int, int __user *,

			  int __user *, unsigned long);

#else

asmlinkage long sys_clone(unsigned long, unsigned long, int __user *,

	       int __user *, unsigned long);

#endif

#endif



asmlinkage long sys_execve(const char __user *filename,

		const char __user *const __user *argv,

		const char __user *const __user *envp);



asmlinkage long sys_perf_event_open(

		struct perf_event_attr __user *attr_uptr,

		pid_t pid, int cpu, int group_fd, unsigned long flags);



asmlinkage long sys_mmap_pgoff(unsigned long addr, unsigned long len,

			unsigned long prot, unsigned long flags,

			unsigned long fd, unsigned long pgoff);

asmlinkage long sys_old_mmap(struct mmap_arg_struct __user *arg);

asmlinkage long sys_name_to_handle_at(int dfd, const char __user *name,

				      struct file_handle __user *handle,

				      int __user *mnt_id, int flag);

asmlinkage long sys_open_by_handle_at(int mountdirfd,

				      struct file_handle __user *handle,

				      int flags);

asmlinkage long sys_setns(int fd, int nstype);

asmlinkage long sys_process_vm_readv(pid_t pid,

				     const struct iovec __user *lvec,

				     unsigned long liovcnt,

				     const struct iovec __user *rvec,

				     unsigned long riovcnt,

				     unsigned long flags);

asmlinkage long sys_process_vm_writev(pid_t pid,

				      const struct iovec __user *lvec,

				      unsigned long liovcnt,

				      const struct iovec __user *rvec,

				      unsigned long riovcnt,

				      unsigned long flags);



asmlinkage long sys_kcmp(pid_t pid1, pid_t pid2, int type,

			 unsigned long idx1, unsigned long idx2);

asmlinkage long sys_finit_module(int fd, const char __user *uargs, int flags);

asmlinkage long sys_seccomp(unsigned int op, unsigned int flags,

			    const char __user *uargs);

asmlinkage long sys_getrandom(char __user *buf, size_t count,

			      unsigned int flags);

asmlinkage long sys_bpf(int cmd, union bpf_attr *attr, unsigned int size);



asmlinkage long sys_execveat(int dfd, const char __user *filename,

			const char __user *const __user *argv,

			const char __user *const __user *envp, int flags);



asmlinkage long sys_membarrier(int cmd, int flags);

asmlinkage long sys_copy_file_range(int fd_in, loff_t __user *off_in,

				    int fd_out, loff_t __user *off_out,

				    size_t len, unsigned int flags);



asmlinkage long sys_mlock2(unsigned long start, size_t len, int flags);



asmlinkage long sys_pkey_mprotect(unsigned long start, size_t len,

				  unsigned long prot, int pkey);

asmlinkage long sys_pkey_alloc(unsigned long flags, unsigned long init_val);

asmlinkage long sys_pkey_free(int pkey);

asmlinkage long sys_statx(int dfd, const char __user *path, unsigned flags,

			  unsigned mask, struct statx __user *buffer);



#endif

asmlinkage long sys_dandjprint(void);

asmlinkage long sys_dandjfill(char* buf, int n);

asmlinkage long sys_dandjfill2(kuid_t * n);

]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ /[Kincld[Ku[K[K[K[K[Kcat /usr/src/linux-source-4.15.0/arch/x86entry[K[K[K[K[K/entry/ 
syscalls/syscall_64.tbl 

#

# 64-bit system call numbers and entry vectors

#

# The format is:

# <number> <abi> <name> <entry point>

#

# The abi is "common", "64" or "x32" for this file.

#

0	common	read			sys_read

1	common	write			sys_write

2	common	open			sys_open

3	common	close			sys_close

4	common	stat			sys_newstat

5	common	fstat			sys_newfstat

6	common	lstat			sys_newlstat

7	common	poll			sys_poll

8	common	lseek			sys_lseek

9	common	mmap			sys_mmap

10	common	mprotect		sys_mprotect

11	common	munmap			sys_munmap

12	common	brk			sys_brk

13	64	rt_sigaction		sys_rt_sigaction

14	common	rt_sigprocmask		sys_rt_sigprocmask

15	64	rt_sigreturn		sys_rt_sigreturn/ptregs

16	64	ioctl			sys_ioctl

17	common	pread64			sys_pread64

18	common	pwrite64		sys_pwrite64

19	64	readv			sys_readv

20	64	writev			sys_writev

21	common	access			sys_access

22	common	pipe			sys_pipe

23	common	select			sys_select

24	common	sched_yield		sys_sched_yield

25	common	mremap			sys_mremap

26	common	msync			sys_msync

27	common	mincore			sys_mincore

28	common	madvise			sys_madvise

29	common	shmget			sys_shmget

30	common	shmat			sys_shmat

31	common	shmctl			sys_shmctl

32	common	dup			sys_dup

33	common	dup2			sys_dup2

34	common	pause			sys_pause

35	common	nanosleep		sys_nanosleep

36	common	getitimer		sys_getitimer

37	common	alarm			sys_alarm

38	common	setitimer		sys_setitimer

39	common	getpid			sys_getpid

40	common	sendfile		sys_sendfile64

41	common	socket			sys_socket

42	common	connect			sys_connect

43	common	accept			sys_accept

44	common	sendto			sys_sendto

45	64	recvfrom		sys_recvfrom

46	64	sendmsg			sys_sendmsg

47	64	recvmsg			sys_recvmsg

48	common	shutdown		sys_shutdown

49	common	bind			sys_bind

50	common	listen			sys_listen

51	common	getsockname		sys_getsockname

52	common	getpeername		sys_getpeername

53	common	socketpair		sys_socketpair

54	64	setsockopt		sys_setsockopt

55	64	getsockopt		sys_getsockopt

56	common	clone			sys_clone/ptregs

57	common	fork			sys_fork/ptregs

58	common	vfork			sys_vfork/ptregs

59	64	execve			sys_execve/ptregs

60	common	exit			sys_exit

61	common	wait4			sys_wait4

62	common	kill			sys_kill

63	common	uname			sys_newuname

64	common	semget			sys_semget

65	common	semop			sys_semop

66	common	semctl			sys_semctl

67	common	shmdt			sys_shmdt

68	common	msgget			sys_msgget

69	common	msgsnd			sys_msgsnd

70	common	msgrcv			sys_msgrcv

71	common	msgctl			sys_msgctl

72	common	fcntl			sys_fcntl

73	common	flock			sys_flock

74	common	fsync			sys_fsync

75	common	fdatasync		sys_fdatasync

76	common	truncate		sys_truncate

77	common	ftruncate		sys_ftruncate

78	common	getdents		sys_getdents

79	common	getcwd			sys_getcwd

80	common	chdir			sys_chdir

81	common	fchdir			sys_fchdir

82	common	rename			sys_rename

83	common	mkdir			sys_mkdir

84	common	rmdir			sys_rmdir

85	common	creat			sys_creat

86	common	link			sys_link

87	common	unlink			sys_unlink

88	common	symlink			sys_symlink

89	common	readlink		sys_readlink

90	common	chmod			sys_chmod

91	common	fchmod			sys_fchmod

92	common	chown			sys_chown

93	common	fchown			sys_fchown

94	common	lchown			sys_lchown

95	common	umask			sys_umask

96	common	gettimeofday		sys_gettimeofday

97	common	getrlimit		sys_getrlimit

98	common	getrusage		sys_getrusage

99	common	sysinfo			sys_sysinfo

100	common	times			sys_times

101	64	ptrace			sys_ptrace

102	common	getuid			sys_getuid

103	common	syslog			sys_syslog

104	common	getgid			sys_getgid

105	common	setuid			sys_setuid

106	common	setgid			sys_setgid

107	common	geteuid			sys_geteuid

108	common	getegid			sys_getegid

109	common	setpgid			sys_setpgid

110	common	getppid			sys_getppid

111	common	getpgrp			sys_getpgrp

112	common	setsid			sys_setsid

113	common	setreuid		sys_setreuid

114	common	setregid		sys_setregid

115	common	getgroups		sys_getgroups

116	common	setgroups		sys_setgroups

117	common	setresuid		sys_setresuid

118	common	getresuid		sys_getresuid

119	common	setresgid		sys_setresgid

120	common	getresgid		sys_getresgid

121	common	getpgid			sys_getpgid

122	common	setfsuid		sys_setfsuid

123	common	setfsgid		sys_setfsgid

124	common	getsid			sys_getsid

125	common	capget			sys_capget

126	common	capset			sys_capset

127	64	rt_sigpending		sys_rt_sigpending

128	64	rt_sigtimedwait		sys_rt_sigtimedwait

129	64	rt_sigqueueinfo		sys_rt_sigqueueinfo

130	common	rt_sigsuspend		sys_rt_sigsuspend

131	64	sigaltstack		sys_sigaltstack

132	common	utime			sys_utime

133	common	mknod			sys_mknod

134	64	uselib

135	common	personality		sys_personality

136	common	ustat			sys_ustat

137	common	statfs			sys_statfs

138	common	fstatfs			sys_fstatfs

139	common	sysfs			sys_sysfs

140	common	getpriority		sys_getpriority

141	common	setpriority		sys_setpriority

142	common	sched_setparam		sys_sched_setparam

143	common	sched_getparam		sys_sched_getparam

144	common	sched_setscheduler	sys_sched_setscheduler

145	common	sched_getscheduler	sys_sched_getscheduler

146	common	sched_get_priority_max	sys_sched_get_priority_max

147	common	sched_get_priority_min	sys_sched_get_priority_min

148	common	sched_rr_get_interval	sys_sched_rr_get_interval

149	common	mlock			sys_mlock

150	common	munlock			sys_munlock

151	common	mlockall		sys_mlockall

152	common	munlockall		sys_munlockall

153	common	vhangup			sys_vhangup

154	common	modify_ldt		sys_modify_ldt

155	common	pivot_root		sys_pivot_root

156	64	_sysctl			sys_sysctl

157	common	prctl			sys_prctl

158	common	arch_prctl		sys_arch_prctl

159	common	adjtimex		sys_adjtimex

160	common	setrlimit		sys_setrlimit

161	common	chroot			sys_chroot

162	common	sync			sys_sync

163	common	acct			sys_acct

164	common	settimeofday		sys_settimeofday

165	common	mount			sys_mount

166	common	umount2			sys_umount

167	common	swapon			sys_swapon

168	common	swapoff			sys_swapoff

169	common	reboot			sys_reboot

170	common	sethostname		sys_sethostname

171	common	setdomainname		sys_setdomainname

172	common	iopl			sys_iopl/ptregs

173	common	ioperm			sys_ioperm

174	64	create_module

175	common	init_module		sys_init_module

176	common	delete_module		sys_delete_module

177	64	get_kernel_syms

178	64	query_module

179	common	quotactl		sys_quotactl

180	64	nfsservctl

181	common	getpmsg

182	common	putpmsg

183	common	afs_syscall

184	common	tuxcall

185	common	security

186	common	gettid			sys_gettid

187	common	readahead		sys_readahead

188	common	setxattr		sys_setxattr

189	common	lsetxattr		sys_lsetxattr

190	common	fsetxattr		sys_fsetxattr

191	common	getxattr		sys_getxattr

192	common	lgetxattr		sys_lgetxattr

193	common	fgetxattr		sys_fgetxattr

194	common	listxattr		sys_listxattr

195	common	llistxattr		sys_llistxattr

196	common	flistxattr		sys_flistxattr

197	common	removexattr		sys_removexattr

198	common	lremovexattr		sys_lremovexattr

199	common	fremovexattr		sys_fremovexattr

200	common	tkill			sys_tkill

201	common	time			sys_time

202	common	futex			sys_futex

203	common	sched_setaffinity	sys_sched_setaffinity

204	common	sched_getaffinity	sys_sched_getaffinity

205	64	set_thread_area

206	64	io_setup		sys_io_setup

207	common	io_destroy		sys_io_destroy

208	common	io_getevents		sys_io_getevents

209	64	io_submit		sys_io_submit

210	common	io_cancel		sys_io_cancel

211	64	get_thread_area

212	common	lookup_dcookie		sys_lookup_dcookie

213	common	epoll_create		sys_epoll_create

214	64	epoll_ctl_old

215	64	epoll_wait_old

216	common	remap_file_pages	sys_remap_file_pages

217	common	getdents64		sys_getdents64

218	common	set_tid_address		sys_set_tid_address

219	common	restart_syscall		sys_restart_syscall

220	common	semtimedop		sys_semtimedop

221	common	fadvise64		sys_fadvise64

222	64	timer_create		sys_timer_create

223	common	timer_settime		sys_timer_settime

224	common	timer_gettime		sys_timer_gettime

225	common	timer_getoverrun	sys_timer_getoverrun

226	common	timer_delete		sys_timer_delete

227	common	clock_settime		sys_clock_settime

228	common	clock_gettime		sys_clock_gettime

229	common	clock_getres		sys_clock_getres

230	common	clock_nanosleep		sys_clock_nanosleep

231	common	exit_group		sys_exit_group

232	common	epoll_wait		sys_epoll_wait

233	common	epoll_ctl		sys_epoll_ctl

234	common	tgkill			sys_tgkill

235	common	utimes			sys_utimes

236	64	vserver

237	common	mbind			sys_mbind

238	common	set_mempolicy		sys_set_mempolicy

239	common	get_mempolicy		sys_get_mempolicy

240	common	mq_open			sys_mq_open

241	common	mq_unlink		sys_mq_unlink

242	common	mq_timedsend		sys_mq_timedsend

243	common	mq_timedreceive		sys_mq_timedreceive

244	64	mq_notify		sys_mq_notify

245	common	mq_getsetattr		sys_mq_getsetattr

246	64	kexec_load		sys_kexec_load

247	64	waitid			sys_waitid

248	common	add_key			sys_add_key

249	common	request_key		sys_request_key

250	common	keyctl			sys_keyctl

251	common	ioprio_set		sys_ioprio_set

252	common	ioprio_get		sys_ioprio_get

253	common	inotify_init		sys_inotify_init

254	common	inotify_add_watch	sys_inotify_add_watch

255	common	inotify_rm_watch	sys_inotify_rm_watch

256	common	migrate_pages		sys_migrate_pages

257	common	openat			sys_openat

258	common	mkdirat			sys_mkdirat

259	common	mknodat			sys_mknodat

260	common	fchownat		sys_fchownat

261	common	futimesat		sys_futimesat

262	common	newfstatat		sys_newfstatat

263	common	unlinkat		sys_unlinkat

264	common	renameat		sys_renameat

265	common	linkat			sys_linkat

266	common	symlinkat		sys_symlinkat

267	common	readlinkat		sys_readlinkat

268	common	fchmodat		sys_fchmodat

269	common	faccessat		sys_faccessat

270	common	pselect6		sys_pselect6

271	common	ppoll			sys_ppoll

272	common	unshare			sys_unshare

273	64	set_robust_list		sys_set_robust_list

274	64	get_robust_list		sys_get_robust_list

275	common	splice			sys_splice

276	common	tee			sys_tee

277	common	sync_file_range		sys_sync_file_range

278	64	vmsplice		sys_vmsplice

279	64	move_pages		sys_move_pages

280	common	utimensat		sys_utimensat

281	common	epoll_pwait		sys_epoll_pwait

282	common	signalfd		sys_signalfd

283	common	timerfd_create		sys_timerfd_create

284	common	eventfd			sys_eventfd

285	common	fallocate		sys_fallocate

286	common	timerfd_settime		sys_timerfd_settime

287	common	timerfd_gettime		sys_timerfd_gettime

288	common	accept4			sys_accept4

289	common	signalfd4		sys_signalfd4

290	common	eventfd2		sys_eventfd2

291	common	epoll_create1		sys_epoll_create1

292	common	dup3			sys_dup3

293	common	pipe2			sys_pipe2

294	common	inotify_init1		sys_inotify_init1

295	64	preadv			sys_preadv

296	64	pwritev			sys_pwritev

297	64	rt_tgsigqueueinfo	sys_rt_tgsigqueueinfo

298	common	perf_event_open		sys_perf_event_open

299	64	recvmmsg		sys_recvmmsg

300	common	fanotify_init		sys_fanotify_init

301	common	fanotify_mark		sys_fanotify_mark

302	common	prlimit64		sys_prlimit64

303	common	name_to_handle_at	sys_name_to_handle_at

304	common	open_by_handle_at	sys_open_by_handle_at

305	common	clock_adjtime		sys_clock_adjtime

306	common	syncfs			sys_syncfs

307	64	sendmmsg		sys_sendmmsg

308	common	setns			sys_setns

309	common	getcpu			sys_getcpu

310	64	process_vm_readv	sys_process_vm_readv

311	64	process_vm_writev	sys_process_vm_writev

312	common	kcmp			sys_kcmp

313	common	finit_module		sys_finit_module

314	common	sched_setattr		sys_sched_setattr

315	common	sched_getattr		sys_sched_getattr

316	common	renameat2		sys_renameat2

317	common	seccomp			sys_seccomp

318	common	getrandom		sys_getrandom

319	common	memfd_create		sys_memfd_create

320	common	kexec_file_load		sys_kexec_file_load

321	common	bpf			sys_bpf

322	64	execveat		sys_execveat/ptregs

323	common	userfaultfd		sys_userfaultfd

324	common	membarrier		sys_membarrier

325	common	mlock2			sys_mlock2

326	common	copy_file_range		sys_copy_file_range

327	64	preadv2			sys_preadv2

328	64	pwritev2		sys_pwritev2

329	common	pkey_mprotect		sys_pkey_mprotect

330	common	pkey_alloc		sys_pkey_alloc

331	common	pkey_free		sys_pkey_free

332	common	statx			sys_statx

333	common	dandjprint		sys_dandjprint

334	common	dandjfill		sys_dandjfill

335	common	dandjfill2		sys_dandjfill2

#

# x32-specific system call numbers start at 512 to avoid cache impact

# for native 64-bit operation.

#

512	x32	rt_sigaction		compat_sys_rt_sigaction

513	x32	rt_sigreturn		sys32_x32_rt_sigreturn

514	x32	ioctl			compat_sys_ioctl

515	x32	readv			compat_sys_readv

516	x32	writev			compat_sys_writev

517	x32	recvfrom		compat_sys_recvfrom

518	x32	sendmsg			compat_sys_sendmsg

519	x32	recvmsg			compat_sys_recvmsg

520	x32	execve			compat_sys_execve/ptregs

521	x32	ptrace			compat_sys_ptrace

522	x32	rt_sigpending		compat_sys_rt_sigpending

523	x32	rt_sigtimedwait		compat_sys_rt_sigtimedwait

524	x32	rt_sigqueueinfo		compat_sys_rt_sigqueueinfo

525	x32	sigaltstack		compat_sys_sigaltstack

526	x32	timer_create		compat_sys_timer_create

527	x32	mq_notify		compat_sys_mq_notify

528	x32	kexec_load		compat_sys_kexec_load

529	x32	waitid			compat_sys_waitid

530	x32	set_robust_list		compat_sys_set_robust_list

531	x32	get_robust_list		compat_sys_get_robust_list

532	x32	vmsplice		compat_sys_vmsplice

533	x32	move_pages		compat_sys_move_pages

534	x32	preadv			compat_sys_preadv64

535	x32	pwritev			compat_sys_pwritev64

536	x32	rt_tgsigqueueinfo	compat_sys_rt_tgsigqueueinfo

537	x32	recvmmsg		compat_sys_recvmmsg

538	x32	sendmmsg		compat_sys_sendmmsg

539	x32	process_vm_readv	compat_sys_process_vm_readv

540	x32	process_vm_writev	compat_sys_process_vm_writev

541	x32	setsockopt		compat_sys_setsockopt

542	x32	getsockopt		compat_sys_getsockopt

543	x32	io_setup		compat_sys_io_setup

544	x32	io_submit		compat_sys_io_submit

545	x32	execveat		compat_sys_execveat/ptregs

546	x32	preadv2			compat_sys_preadv64v2

547	x32	pwritev2		compat_sys_pwritev64v2

]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ touch usr/in[K[K[K[K[K[K/usr/include/dandj*

touch: cannot touch '/usr/include/dandjfill2.h': Permission denied

touch: cannot touch '/usr/include/dandjfill.h': Permission denied

touch: cannot touch '/usr/include/dandjprint.h': Permission denied

]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ sudo su

[sudo] password for mradmin: 

]0;root@mradmin-VirtualBox: /home/mradmin/Documentsroot@mradmin-VirtualBox:/home/mradmin/Documents# exitleafpad /etc/passwd &exit[K[Ktouch /usr/include/dan[Kndj*

]0;root@mradmin-VirtualBox: /home/mradmin/Documentsroot@mradmin-VirtualBox:/home/mradmin/Documents# touch /[KdandjTester.c 

]0;root@mradmin-VirtualBox: /home/mradmin/Documentsroot@mradmin-VirtualBox:/home/mradmin/Documents# touch /usr/include[K[K[K[K[K[K[Ksrc/linux-source-4.15.0/kern 
el/sys.c 

]0;root@mradmin-VirtualBox: /home/mradmin/Documentsroot@mradmin-VirtualBox:/home/mradmin/Documents# touch /usr/src/linux-source-4.15.0/inclu
ude/linux/syc[Ksc[K[K[K[Ksyscalls.h 

]0;root@mradmin-VirtualBox: /home/mradmin/Documentsroot@mradmin-VirtualBox:/home/mradmin/Documents# touch /usr/src/linux-source-4.15.0/arch/
/x86/entry/syscalls/syc[Kscall_64.tbl 

]0;root@mradmin-VirtualBox: /home/mradmin/Documentsroot@mradmin-VirtualBox:/home/mradmin/Documents# make-kpkg -j 8 /usr/src/linux-s[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kcd /usr/src

]0;root@mradmin-VirtualBox: /usr/srcroot@mradmin-VirtualBox:/usr/src# ls

[0m[01;34mlinux-headers-4.15.0-43[0m

[01;34mlinux-headers-4.15.0-43-generic[0m

[01;31mlinux-image-4.15.18dandj1.00_4.15.18dandj1.00-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj1.01_4.15.18dandj1.01-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj1.0_4.15.18dandj1.0-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.01_4.15.18dandj2.01-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.03_4.15.18dandj2.03-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.04_4.15.18dandj2.04-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.05_4.15.18dandj2.05-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.07_4.15.18dandj2.07-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.09_4.15.18dandj2.09-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.10_4.15.18dandj2.10-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.11_4.15.18dandj2.11-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.12_4.15.18dandj2.12-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.13_4.15.18dandj2.13-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.14_4.15.18dandj2.14-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj_4.15.18dandj-10.00.Custom_amd64.deb[0m

[01;34mlinux-source-4.15.0[0m

]0;root@mradmin-VirtualBox: /usr/srcroot@mradmin-VirtualBox:/usr/src# cd linux-source-4.15.0/

]0;root@mradmin-VirtualBox: /usr/src/linux-source-4.15.0root@mradmin-VirtualBox:/usr/src/linux-source-4.15.0# make-kpkg -j 8 kernel/[K[K[K[K[K[K[K--initrd --append-t 
o-version=dandj2.15 kernel-image

exec make kpkg_version=13.018 -f /usr/share/kernel-package/ruleset/minimal.mk debian APPEND_TO_VERSION=dandj2.15  INITRD=YES 

====== making target debian/stamp/conf/minimal_debian [new prereqs: ]======

This is kernel package version 13.018.

test -d debian             || mkdir debian

test ! -e stamp-building || rm -f stamp-building

install -p -m 755 /usr/share/kernel-package/rules debian/rules

for file in ChangeLog  Control  Control.bin86 config templates.in rules; do                                      \

            cp -f  /usr/share/kernel-package/$file ./debian/;                               \

        done

cp: cannot stat '/usr/share/kernel-package/ChangeLog': No such file or directory

for dir  in Config docs examples ruleset scripts pkg po;  do                                      \

          cp -af /usr/share/kernel-package/$dir  ./debian/;                                 \

        done

test -f debian/control || sed         -e 's/=V/4.15.18dandj2.15/g'  \

                -e 's/=D/4.15.18dandj2.14-10.00.Custom/g'         -e 's/=A/amd64/g'  \

	-e 's/=SA//g'  \

	-e 's/=I//g'				    \

	-e 's/=CV/4.15/g'			    \

	-e 's/=M/Unknown Kernel Package Maintainer <unknown@unconfigured.in.etc.kernel-pkg.conf>/g'			    \

	-e 's/=ST/linux/g'      -e 's/=B/x86_64/g'    \

                -e 's/=R/initramfs-tools | linux-initramfs-tool,/g'    /usr/share/kernel-package/Control > debian/control

test -f debian/changelog ||  sed -e 's/=V/4.15.18dandj2.15/g'       \

            -e 's/=D/4.15.18dandj2.14-10.00.Custom/g'        -e 's/=A/amd64/g'       \

            -e 's/=ST/linux/g'     -e 's/=B/x86_64/g'         \

            -e 's/=M/Unknown Kernel Package Maintainer <unknown@unconfigured.in.etc.kernel-pkg.conf>/g'                            \

             /usr/share/kernel-package/changelog > debian/changelog

chmod 0644 debian/control debian/changelog

test -d ./debian/stamp || mkdir debian/stamp

make -f debian/rules debian/stamp/conf/kernel-conf

make[1]: Entering directory '/usr/src/linux-source-4.15.0'

====== making target debian/stamp/conf/kernel-conf [new prereqs: ]======

make EXTRAVERSION=dandj2.15   ARCH=x86_64 \

                    oldconfig;

make[2]: Entering directory '/usr/src/linux-source-4.15.0'

scripts/kconfig/conf  --oldconfig Kconfig

security/Kconfig:393:warning: defaults for choice values not supported

security/Kconfig:397:warning: defaults for choice values not supported

security/Kconfig:401:warning: defaults for choice values not supported

security/Kconfig:405:warning: defaults for choice values not supported

security/Kconfig:409:warning: defaults for choice values not supported

#

# configuration written to .config

#

make[2]: Leaving directory '/usr/src/linux-source-4.15.0'

make EXTRAVERSION=dandj2.15   ARCH=x86_64 prepare

make[2]: Entering directory '/usr/src/linux-source-4.15.0'

scripts/kconfig/conf  --silentoldconfig Kconfig

security/Kconfig:393:warning: defaults for choice values not supported

security/Kconfig:397:warning: defaults for choice values not supported

security/Kconfig:401:warning: defaults for choice values not supported

security/Kconfig:405:warning: defaults for choice values not supported

security/Kconfig:409:warning: defaults for choice values not supported

  SYSHDR  arch/x86/include/generated/asm/unistd_64_x32.h

  SYSTBL  arch/x86/include/generated/asm/syscalls_64.h

  SYSHDR  arch/x86/include/generated/uapi/asm/unistd_64.h

  SYSHDR  arch/x86/include/generated/uapi/asm/unistd_x32.h

  CHK     include/config/kernel.release

  UPD     include/config/kernel.release

  CHK     include/generated/uapi/linux/version.h

  CHK     include/generated/utsrelease.h

  UPD     include/generated/utsrelease.h

  CHK     include/generated/timeconst.h

  CHK     include/generated/bounds.h

  CC      arch/x86/kernel/asm-offsets.s

  CHK     include/generated/asm-offsets.h

  CALL    scripts/checksyscalls.sh

  DESCEND  objtool

make[2]: Leaving directory '/usr/src/linux-source-4.15.0'

echo done > debian/stamp/conf/kernel-conf

make[1]: Leaving directory '/usr/src/linux-source-4.15.0'

make -f debian/rules debian/stamp/conf/full-changelog

make[1]: Entering directory '/usr/src/linux-source-4.15.0'

====== making target debian/stamp/conf/full-changelog [new prereqs: ]======

for file in ChangeLog  Control  Control.bin86 config templates.in rules; do				\

     cp -f  /usr/share/kernel-package/$file ./debian/;			\

done

cp: cannot stat '/usr/share/kernel-package/ChangeLog': No such file or directory

for dir  in Config docs examples ruleset scripts pkg po;	do				\

   cp -af /usr/share/kernel-package/$dir  ./debian/;				\

done

install -p -m 755 /usr/share/kernel-package/rules debian/rules

sed         -e 's/=V/4.15.18dandj2.15/g'  \

                -e 's/=D/4.15.18dandj2.15-10.00.Custom/g'         -e 's/=A/amd64/g'  \

	-e 's/=SA//g'  \

	-e 's/=I//g'				    \

	-e 's/=CV/4.15/g'			    \

	-e 's/=M/Unknown Kernel Package Maintainer <unknown@unconfigured.in.etc.kernel-pkg.conf>/g'			    \

	-e 's/=ST/linux/g'      -e 's/=B/x86_64/g'    \

                -e 's/=R/initramfs-tools | linux-initramfs-tool,/g'  /usr/share/kernel-package/Control > debian/control

sed -e 's/=V/4.15.18dandj2.15/g' -e 's/=D/4.15.18dandj2.15-10.00.Custom/g'	      \

    -e 's/=A/amd64/g' -e 's/=M/Unknown Kernel Package Maintainer <unknown@unconfigured.in.etc.kernel-pkg.conf>/g' \

    -e 's/=ST/linux/g'	 -e 's/=B/x86_64/g'	      \

	/usr/share/kernel-package/changelog > debian/changelog

chmod 0644 debian/control debian/changelog

make -f debian/rules debian/stamp/conf/kernel-conf

make[2]: Entering directory '/usr/src/linux-source-4.15.0'

make[2]: 'debian/stamp/conf/kernel-conf' is up to date.

make[2]: Leaving directory '/usr/src/linux-source-4.15.0'

make[1]: Leaving directory '/usr/src/linux-source-4.15.0'

echo done > debian/stamp/conf/minimal_debian

exec debian/rules  APPEND_TO_VERSION=dandj2.15  INITRD=YES  kernel-image 

====== making target debian/stamp/conf/vars [new prereqs: ]======



security/Kconfig:393:warning: defaults for choice values not supported

security/Kconfig:397:warning: defaults for choice values not supported

security/Kconfig:401:warning: defaults for choice values not supported

security/Kconfig:405:warning: defaults for choice values not supported

security/Kconfig:409:warning: defaults for choice values not supported

====== making target debian/stamp/build/kernel [new prereqs: vars]======

This is kernel package version 13.018.

restore_upstream_debianization

test ! -f scripts/package/builddeb.kpkg-dist ||	mv -f scripts/package/builddeb.kpkg-dist scripts/package/builddeb

test ! -f scripts/package/Makefile.kpkg-dist ||	mv -f scripts/package/Makefile.kpkg-dist scripts/package/Makefile

/usr/bin/make -j8 EXTRAVERSION=dandj2.15  ARCH=x86_64 \

		     bzImage

make[1]: Entering directory '/usr/src/linux-source-4.15.0'

scripts/kconfig/conf  --silentoldconfig Kconfig

security/Kconfig:393:warning: defaults for choice values not supported

security/Kconfig:397:warning: defaults for choice values not supported

security/Kconfig:401:warning: defaults for choice values not supported

security/Kconfig:405:warning: defaults for choice values not supported

security/Kconfig:409:warning: defaults for choice values not supported

  CHK     include/config/kernel.release

  CHK     include/generated/uapi/linux/version.h

  DESCEND  objtool

  CHK     include/generated/utsrelease.h

  CHK     include/generated/timeconst.h

  CHK     include/generated/bounds.h

  CHK     include/generated/asm-offsets.h

  CALL    scripts/checksyscalls.sh

  CHK     scripts/mod/devicetable-offsets.h

  CC      ipc/compat.o

  CC      init/main.o

  CC      certs/system_keyring.o

  CC      arch/x86/crypto/crc32c-intel_glue.o

  CC      fs/open.o

  CC      mm/filemap.o

  CC      security/apparmor/apparmorfs.o

  CC      kernel/fork.o

  CC      ipc/util.o

  CC      certs/blacklist.o

  AR      arch/x86/crypto/crc32c-intel.o

  CC      certs/efi_parser.o

  AR      arch/x86/crypto/built-in.o

  AS      arch/x86/entry/entry_64.o

  CC      ipc/msgutil.o

  CHK     include/generated/compile.h

  CC      certs/load_uefi.o

  CC      ipc/msg.o

  AR      certs/built-in.o

  CC      arch/x86/entry/syscall_64.o

  CC      fs/read_write.o

  CC      kernel/exec_domain.o

  CC      mm/mempool.o

  CC      init/do_mounts.o

  CC      arch/x86/entry/common.o

  CC      kernel/panic.o

  CC      ipc/sem.o

  CC      mm/oom_kill.o

  CC      fs/file_table.o

  CC      arch/x86/entry/vdso/vma.o

  CC      init/do_mounts_initrd.o

  CC      kernel/cpu.o

  CC      arch/x86/entry/vdso/vclock_gettime.o

  CC      security/apparmor/audit.o

  CC      security/apparmor/capability.o

  CC      init/do_mounts_md.o

  CC      fs/super.o

  X32     arch/x86/entry/vdso/vclock_gettime-x32.o

  VDSO    arch/x86/entry/vdso/vdso64.so.dbg

  CC      ipc/shm.o

  VDSO    arch/x86/entry/vdso/vdsox32.so.dbg

  OBJCOPY arch/x86/entry/vdso/vdso64.so

  OBJCOPY arch/x86/entry/vdso/vdsox32.so

  CC      mm/maccess.o

  VDSO2C  arch/x86/entry/vdso/vdso-image-64.c

  CC      kernel/exit.o

  CC      init/initramfs.o

  VDSO2C  arch/x86/entry/vdso/vdso-image-x32.c

  CC      arch/x86/entry/vdso/vdso-image-64.o

  CC      security/apparmor/context.o

  CC      arch/x86/entry/vdso/vdso-image-x32.o

  CC      mm/page_alloc.o

  AR      arch/x86/entry/vdso/built-in.o

  CC      fs/char_dev.o

  CC      ipc/syscall.o

  CC      mm/page-writeback.o

  CC      init/init_task.o

  CC      arch/x86/entry/vsyscall/vsyscall_64.o

  CC      security/apparmor/ipc.o

  CC      ipc/ipc_sysctl.o

  CC      init/version.o

  CC      kernel/softirq.o

  CC      fs/stat.o

  AR      init/mounts.o

  AR      init/built-in.o

  CC      ipc/mqueue.o

  CC      fs/exec.o

  AS      arch/x86/entry/vsyscall/vsyscall_emu_64.o

  AR      arch/x86/entry/vsyscall/built-in.o

  CC      arch/x86/entry/syscall_32.o

  CC      security/apparmor/lib.o

  AR      arch/x86/entry/built-in.o

  CC      arch/x86/events/core.o

  CC      kernel/resource.o

  CC      fs/pipe.o

  CC      security/apparmor/path.o

  CC      ipc/namespace.o

  CC      mm/readahead.o

  CC      kernel/sysctl.o

  CC      block/bio.o

  CC      arch/x86/events/amd/core.o

  CC      ipc/mq_sysctl.o

  CC      crypto/api.o

  AR      ipc/built-in.o

  CC      mm/swap.o

  CC      security/apparmor/domain.o

  CC      fs/namei.o

  CC      arch/x86/events/amd/uncore.o

  CC      arch/x86/events/intel/core.o

  CC      crypto/cipher.o

  CC      arch/x86/events/amd/ibs.o

  CC      kernel/sysctl_binary.o

  CC      crypto/compress.o

  CC      mm/truncate.o

  CC      block/elevator.o

  CC      security/apparmor/policy.o

  CC      crypto/memneq.o

  CC      arch/x86/events/intel/bts.o

  CC      arch/x86/events/amd/iommu.o

  CC      kernel/capability.o

  CC      crypto/crypto_wq.o

  CC      mm/vmscan.o

  CC      fs/fcntl.o

  CC      kernel/ptrace.o

  CC      arch/x86/events/intel/ds.o

  AR      arch/x86/events/amd/built-in.o

  CC      block/blk-core.o

  CC      arch/x86/events/intel/knc.o

  CC      crypto/algapi.o

  CC      security/apparmor/policy_unpack.o

  CC      fs/ioctl.o

  CC      kernel/user.o

  CC      arch/x86/events/intel/lbr.o

  CC      crypto/scatterwalk.o

  CC      kernel/signal.o

  CC      fs/readdir.o

  CC      security/apparmor/procattr.o

  CC      arch/x86/events/intel/p4.o

  CC      crypto/proc.o

  CC      mm/shmem.o

  CC      fs/select.o

  CC      block/blk-tag.o

  CC      crypto/aead.o

  CC      security/apparmor/lsm.o

  CC      arch/x86/events/intel/p6.o

  CC      drivers/acpi/tables.o

  CC      block/blk-sysfs.o

  CC      arch/x86/events/intel/pt.o

  CC      kernel/sys.o

  CC      fs/dcache.o

  CC      crypto/ablkcipher.o

  CC      drivers/acpi/blacklist.o

In file included from [01m[K./include/linux/printk.h:7:0[m[K,

                 from [01m[K./include/linux/kernel.h:14[m[K,

                 from [01m[K./include/asm-generic/bug.h:18[m[K,

                 from [01m[K./arch/x86/include/asm/bug.h:83[m[K,

                 from [01m[K./include/linux/bug.h:5[m[K,

                 from [01m[K./include/linux/mmdebug.h:5[m[K,

                 from [01m[K./include/linux/mm.h:9[m[K,

                 from [01m[Kkernel/sys.c:9[m[K:

[01m[Kkernel/sys.c:[m[K In function ‘[01m[KSYSC_dandjfill2[m[K’:

[01m[K./include/linux/kern_levels.h:5:18:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%u[m[K’ expects argument of type ‘[01m[Kunsigned int[m[K’, but argument 2 has type ‘[01m[Kkuid_t {aka struct <anonymous>}[m[K’ [-Wformat=]

 #define KERN_SOH "\001"  /* ASCII Start Of Header */

[01;32m[K                  ^[m[K

[01m[K./include/linux/kern_levels.h:14:19:[m[K [01;36m[Knote: [m[Kin expansion of macro ‘[01m[KKERN_SOH[m[K’

 #define KERN_INFO KERN_SOH "6" /* informational */

[01;32m[K                   ^[m[K

[01m[Kkernel/sys.c:2629:9:[m[K [01;36m[Knote: [m[Kin expansion of macro ‘[01m[KKERN_INFO[m[K’

  printk(KERN_INFO "dandjfill2 passed back: \"%u\"\n",n[0]);

[01;32m[K         ^[m[K

  CC      block/blk-flush.o

  CC      drivers/acpi/osi.o

  CC      arch/x86/events/intel/uncore.o

  CC      crypto/blkcipher.o

  CC      security/apparmor/resource.o

  CC      mm/util.o

  CC      drivers/acpi/osl.o

  CC      block/blk-settings.o

  CC      kernel/umh.o

  CC      crypto/skcipher.o

  CC      arch/x86/events/intel/uncore_nhmex.o

  CC      security/apparmor/file.o

  CC      fs/inode.o

  CC      mm/vmstat.o

  CC      block/blk-ioc.o

  CC      drivers/acpi/utils.o

  CC      kernel/workqueue.o

  CC      crypto/seqiv.o

  CC      arch/x86/events/intel/uncore_snb.o

  CC      block/blk-map.o

  CC      security/apparmor/policy_ns.o

  CC      drivers/acpi/reboot.o

  CC      mm/backing-dev.o

  CC      arch/x86/events/intel/uncore_snbep.o

  CC      crypto/ahash.o

  CC      block/blk-exec.o

  CC      fs/attr.o

  CC      drivers/acpi/nvs.o

  CC      security/apparmor/label.o

  CC      block/blk-merge.o

  CC      crypto/shash.o

  CC      fs/bad_inode.o

  CC      drivers/acpi/wakeup.o

  CC      mm/mm_init.o

  CC      fs/file.o

  AR      arch/x86/events/intel/intel-uncore.o

  AR      arch/x86/events/intel/built-in.o

  CC      arch/x86/events/msr.o

  CC      drivers/acpi/sleep.o

  CC      mm/mmu_context.o

  CC      kernel/pid.o

  CC      crypto/akcipher.o

  CC      block/blk-softirq.o

  AR      arch/x86/events/built-in.o

  CC      mm/percpu.o

  CC      fs/filesystems.o

  CC      security/apparmor/mount.o

  CC      arch/x86/ia32/sys_ia32.o

  CC      crypto/kpp.o

  CC      drivers/acpi/device_sysfs.o

  CC      block/blk-timeout.o

  CC      kernel/task_work.o

  CC      fs/namespace.o

  CC      arch/x86/ia32/ia32_signal.o

  CC      crypto/dh.o

  CC      drivers/acpi/device_pm.o

  CC      block/blk-lib.o

  CC      kernel/extable.o

  CC      security/apparmor/net.o

  CC      crypto/dh_helper.o

  AR      arch/x86/ia32/built-in.o

  CC      block/blk-mq.o

  CC      mm/slab_common.o

  CC      drivers/acpi/proc.o

  CC      kernel/params.o

  CC      crypto/rsa.o

  CC      security/apparmor/af_unix.o

  CC      fs/seq_file.o

  CC      drivers/acpi/bus.o

  CC      kernel/kthread.o

  CC      crypto/rsa-pkcs1pad.o

  CC      mm/compaction.o

  CC      arch/x86/kernel/process_64.o

  CC      block/blk-mq-tag.o

  CC      fs/xattr.o

  CC      security/apparmor/crypto.o

  CC      crypto/acompress.o

  CC      kernel/sys_ni.o

  CC      drivers/acpi/glue.o

  CC      kernel/nsproxy.o

  CC      arch/x86/kernel/signal.o

  CC      block/blk-stat.o

  CC      fs/libfs.o

  CC      crypto/scompress.o

  AR      security/apparmor/apparmor.o

  AR      security/apparmor/built-in.o

  CC      drivers/acpi/scan.o

  CC      mm/vmacache.o

  CC      kernel/notifier.o

  CC      security/integrity/iint.o

  CC      block/blk-mq-sysfs.o

  CC      arch/x86/kernel/signal_compat.o

  CC      mm/swap_slots.o

  CC      crypto/algboss.o

  CC      security/integrity/integrity_audit.o

  CC      kernel/ksysfs.o

  CC      arch/x86/kernel/traps.o

  CC      block/blk-mq-cpumap.o

  CC      fs/fs-writeback.o

  CC      drivers/acpi/resource.o

  CC      mm/interval_tree.o

  CC      security/integrity/digsig.o

  CC      kernel/cred.o

  CC      crypto/testmgr.o

  CC      block/blk-mq-sched.o

  CC      security/integrity/digsig_asymmetric.o

  CC      drivers/acpi/acpi_processor.o

  CC      arch/x86/kernel/idt.o

  CC      mm/list_lru.o

  CC      crypto/hmac.o

  CC      kernel/reboot.o

  CC      security/integrity/evm/evm_main.o

  CC      block/ioctl.o

  CC      arch/x86/kernel/irq.o

  CC      drivers/acpi/processor_core.o

  CC      mm/workingset.o

  CC      kernel/async.o

  CC      crypto/crypto_null.o

  CC      fs/pnode.o

  CC      security/integrity/evm/evm_crypto.o

  CC      drivers/acpi/processor_pdc.o

  CC      mm/debug.o

  CC      kernel/smpboot.o

  CC      crypto/md5.o

  CC      fs/splice.o

  CC      block/genhd.o

  CC      arch/x86/kernel/irq_64.o

  CC      security/integrity/evm/evm_secfs.o

  CC      drivers/acpi/ec.o

  CC      mm/gup.o

  CC      kernel/ucount.o

  CC      crypto/sha1_generic.o

  CC      arch/x86/kernel/dumpstack_64.o

  AR      security/integrity/evm/evm.o

  AR      security/integrity/evm/built-in.o

  CC      kernel/kmod.o

  CC      fs/sync.o

  CC      security/integrity/ima/ima_fs.o

  CC      arch/x86/kernel/ioport.o

  CC      crypto/sha256_generic.o

  CC      block/partition-generic.o

  CC      drivers/acpi/dock.o

  CC      mm/highmem.o

  CC      kernel/groups.o

  CC      arch/x86/kernel/dumpstack.o

  CC      security/integrity/ima/ima_queue.o

  CC      fs/utimes.o

  CC      drivers/acpi/pci_root.o

  CC      block/ioprio.o

  CC      crypto/sha512_generic.o

  CC      mm/memory.o

  CC      security/integrity/ima/ima_init.o

  CC      arch/x86/kernel/nmi.o

  CC      fs/fs_struct.o

  CC      block/badblocks.o

  CC      security/integrity/ima/ima_main.o

  CC      crypto/ecb.o

  CC      fs/statfs.o

  CC      drivers/acpi/pci_link.o

  CC      arch/x86/kernel/ldt.o

  CC      kernel/bpf/core.o

  CC      crypto/cbc.o

  CC      security/integrity/ima/ima_crypto.o

  CC      fs/fs_pin.o

  CC      drivers/acpi/pci_irq.o

  CC      block/partitions/check.o

  CC      fs/nsfs.o

  CC      arch/x86/kernel/setup.o

  CC      security/integrity/ima/ima_api.o

  CC      crypto/cts.o

  CC      drivers/acpi/acpi_lpss.o

  CC      block/partitions/amiga.o

  CC      fs/buffer.o

  CC      mm/mincore.o

  CC      security/integrity/ima/ima_policy.o

  CC      kernel/bpf/syscall.o

  CC      crypto/xts.o

  CC      block/partitions/atari.o

  CC      arch/x86/kernel/x86_init.o

  CC      drivers/acpi/acpi_apd.o

  CC      mm/mlock.o

  CC      security/integrity/ima/ima_template.o

  CC      block/partitions/aix.o

  CC      crypto/ctr.o

  CC      arch/x86/kernel/i8259.o

  CC      drivers/acpi/acpi_platform.o

  CC      security/integrity/ima/ima_template_lib.o

  CC      mm/mmap.o

  CC      block/partitions/cmdline.o

  CC      kernel/bpf/verifier.o

  CC      crypto/gcm.o

  CC      drivers/acpi/acpi_pnp.o

  CC      fs/block_dev.o

  CC      arch/x86/kernel/irqinit.o

  CC      security/integrity/ima/ima_appraise.o

  CC      block/partitions/mac.o

  CC      drivers/acpi/power.o

  CC      arch/x86/kernel/jump_label.o

  CC      crypto/aes_generic.o

  AR      security/integrity/ima/ima.o

  AR      security/integrity/ima/built-in.o

  AR      security/integrity/integrity.o

  CC      block/partitions/ldm.o

  AR      security/integrity/built-in.o

  CC      mm/mprotect.o

  CC      drivers/acpi/event.o

  CC      fs/direct-io.o

  CC      security/keys/gc.o

  CC      arch/x86/kernel/probe_roms.o

  CC      crypto/crc32c_generic.o

  CC      block/partitions/msdos.o

  CC      kernel/bpf/inode.o

  CC      drivers/acpi/sysfs.o

  CC      mm/mremap.o

  CC      security/keys/key.o

  CC      arch/x86/kernel/sys_x86_64.o

  CC      crypto/crct10dif_generic.o

  CC      fs/mpage.o

  CC      kernel/bpf/helpers.o

  CC      drivers/acpi/property.o

  CC      security/keys/keyring.o

  CC      arch/x86/kernel/espfix_64.o

  CC      block/partitions/osf.o

  CC      mm/msync.o

  CC      crypto/lzo.o

  CC      kernel/bpf/hashtab.o

  CC      fs/proc_namespace.o

  CC      drivers/acpi/acpi_cmos_rtc.o

  CC      block/partitions/sgi.o

  CC      arch/x86/kernel/bootflag.o

  CC      mm/page_vma_mapped.o

  CC      security/keys/keyctl.o

  CC      crypto/rng.o

  CC      drivers/acpi/x86/apple.o

  CC      arch/x86/kernel/e820.o

  CC      block/partitions/sun.o

  CC      mm/pagewalk.o

  CC      crypto/drbg.o

  CC      block/partitions/ultrix.o

  CC      drivers/acpi/x86/utils.o

  CC      security/keys/permission.o

  CC      kernel/bpf/arraymap.o

  CC      fs/configfs/inode.o

  CC      drivers/acpi/debugfs.o

  CC      arch/x86/kernel/pci-dma.o

  CC      mm/pgtable-generic.o

  CC      block/partitions/efi.o

  CC      security/keys/process_keys.o

  CC      fs/configfs/file.o

  CC      drivers/acpi/numa.o

  CC      kernel/bpf/lpm_trie.o

  CC      crypto/jitterentropy-kcapi.o

  CC      arch/x86/kernel/quirks.o

  CC      security/keys/request_key.o

  CC      mm/rmap.o

  CC      block/partitions/karma.o

  CC      fs/configfs/mount.o

  CC      drivers/acpi/acpi_lpat.o

  CC      security/keys/request_key_auth.o

  CC      block/partitions/sysv68.o

  CC      kernel/bpf/devmap.o

  CC      arch/x86/kernel/topology.o

  CC      crypto/ghash-generic.o

  AR      fs/configfs/configfs.o

  CC      drivers/acpi/acpi_lpit.o

  AR      fs/configfs/built-in.o

  CC      fs/crypto/crypto.o

  CC      security/keys/user_defined.o

  AR      block/partitions/built-in.o

  CC      block/bounce.o

  CC      mm/vmalloc.o

  CC      arch/x86/kernel/kdebugfs.o

  CC      kernel/bpf/cpumap.o

  CC      security/keys/compat.o

  CC      arch/x86/kernel/alternative.o

  CC      block/scsi_ioctl.o

  CC      fs/crypto/fname.o

  CC      crypto/asymmetric_keys/asymmetric_type.o

  CC      security/keys/compat_dh.o

  CC      security/keys/proc.o

  CC      fs/crypto/hooks.o

  CC      kernel/bpf/offload.o

  CC      mm/process_vm_access.o

  CC      arch/x86/kernel/pci-nommu.o

  CC      block/bsg.o

  CC      crypto/asymmetric_keys/signature.o

  CC      security/keys/sysctl.o

  CC      fs/crypto/keyinfo.o

  CC      arch/x86/kernel/hw_breakpoint.o

  CC      kernel/bpf/sockmap.o

  CC      mm/init-mm.o

  CC      crypto/asymmetric_keys/public_key.o

  CC      mm/nobootmem.o

  CC      security/keys/persistent.o

  CC      fs/crypto/policy.o

  CC      block/bsg-lib.o

  CC      crypto/asymmetric_keys/x509_public_key.o

  CC      arch/x86/kernel/tsc.o

  CC      security/keys/dh.o

  CC      mm/fadvise.o

  CC      drivers/acpi/acpica/dsargs.o

  CC      fs/crypto/bio.o

  CC      crypto/asymmetric_keys/pkcs7_verify.o

  CC      block/blk-cgroup.o

  CC      kernel/bpf/stackmap.o

  CC      security/keys/big_key.o

  CC      mm/madvise.o

  CC      arch/x86/kernel/rtc.o

  AR      fs/crypto/fscrypto.o

  AR      fs/crypto/built-in.o

  CC      crypto/asymmetric_keys/verify_pefile.o

  CC      fs/debugfs/inode.o

  CC      drivers/acpi/acpica/dscontrol.o

  CC      security/keys/trusted.o

  CC      kernel/bpf/cgroup.o

  CC      arch/x86/kernel/pci-iommu_table.o

  CC      mm/memblock.o

  CC      block/blk-throttle.o

  AR      crypto/asymmetric_keys/asymmetric_keys.o

  CC      drivers/acpi/acpica/dsdebug.o

  AR      crypto/asymmetric_keys/x509_key_parser.o

  AR      crypto/asymmetric_keys/pkcs7_message.o

  AR      crypto/asymmetric_keys/verify_signed_pefile.o

  AR      crypto/asymmetric_keys/built-in.o

  AR      crypto/crypto.o

  AR      crypto/crypto_algapi.o

  AR      crypto/crypto_blkcipher.o

  AR      crypto/crypto_hash.o

  AR      crypto/dh_generic.o

  AR      crypto/rsa_generic.o

  AR      crypto/crypto_acompress.o

  AR      crypto/cryptomgr.o

  CC      arch/x86/kernel/process.o

  CC      fs/debugfs/file.o

  AR      crypto/jitterentropy_rng.o

  CC      drivers/acpi/acpica/dsfield.o

  AR      crypto/built-in.o

  CC      drivers/acpi/acpica/dsinit.o

  AR      kernel/bpf/built-in.o

  CC      mm/page_io.o

  CC      drivers/acpi/acpica/dsmethod.o

  CC      security/keys/encrypted-keys/encrypted.o

  CC      kernel/cgroup/cgroup.o

  CC      block/noop-iosched.o

  CC      kernel/debug/debug_core.o

  AR      fs/debugfs/debugfs.o

  AR      fs/debugfs/built-in.o

  CC      mm/swap_state.o

  CC      fs/devpts/inode.o

  CC      drivers/acpi/acpica/dsmthdat.o

  CC      arch/x86/kernel/acpi/boot.o

  CC      block/deadline-iosched.o

  CC      security/keys/encrypted-keys/masterkey_trusted.o

  CC      drivers/acpi/acpica/dsobject.o

  AR      fs/devpts/devpts.o

  CC      kernel/debug/gdbstub.o

  AR      fs/devpts/built-in.o

  AR      security/keys/encrypted-keys/encrypted-keys.o

  CC      mm/swapfile.o

  CC      block/cfq-iosched.o

  CC      drivers/acpi/acpica/dsopcode.o

  CC      arch/x86/kernel/acpi/sleep.o

  AR      security/keys/encrypted-keys/built-in.o

  AR      security/keys/built-in.o

  CC      drivers/acpi/acpica/dspkginit.o

  CC      fs/ecryptfs/dentry.o

  CC      security/selinux/avc.o

  CC      arch/x86/kernel/acpi/apei.o

  CC      kernel/debug/kdb/kdb_io.o

  CC      drivers/acpi/acpica/dsutils.o

  CC      fs/ecryptfs/file.o

  CC      arch/x86/kernel/acpi/cppc_msr.o

  CC      kernel/cgroup/stat.o

  CC      drivers/acpi/acpica/dswexec.o

  CC      kernel/debug/kdb/kdb_main.o

  CC      fs/ecryptfs/inode.o

  CC      arch/x86/kernel/acpi/cstate.o

  CC      block/compat_ioctl.o

  CC      kernel/cgroup/namespace.o

  CC      security/selinux/hooks.o

  CC      drivers/acpi/acpica/dswload.o

  CC      mm/frontswap.o

  AR      arch/x86/kernel/acpi/built-in.o

  CC      kernel/cgroup/cgroup-v1.o

  CC      drivers/acpi/acpica/dswload2.o

  CC      block/cmdline-parser.o

  CC      fs/ecryptfs/main.o

  CC      kernel/debug/kdb/kdb_support.o

  CC      arch/x86/kernel/apic/apic.o

  CC      mm/zswap.o

  CC      drivers/acpi/acpica/dswscope.o

  CC      block/bio-integrity.o

  CC      kernel/cgroup/freezer.o

  CC      fs/ecryptfs/super.o

  CC      kernel/debug/kdb/kdb_bt.o

  CC      drivers/acpi/acpica/dswstate.o

  CC      block/blk-integrity.o

  CC      mm/dmapool.o

  CC      kernel/cgroup/pids.o

  CC      kernel/debug/kdb/kdb_bp.o

  CC      drivers/acpi/acpica/evevent.o

  CC      fs/ecryptfs/mmap.o

  CC      arch/x86/kernel/apic/ipi.o

  CC      drivers/acpi/acpica/evgpe.o

  CC      kernel/debug/kdb/kdb_debugger.o

  CC      mm/hugetlb.o

  CC      kernel/cgroup/rdma.o

  CC      block/t10-pi.o

  CC      fs/ecryptfs/read_write.o

  CC      arch/x86/kernel/apic/vector.o

  CC      drivers/acpi/acpica/evgpeblk.o

  CC      kernel/debug/kdb/kdb_keyboard.o

  CC      security/selinux/selinuxfs.o

  CC      block/blk-mq-pci.o

  CC      kernel/cgroup/cpuset.o

  AR      kernel/debug/kdb/built-in.o

  CC      drivers/acpi/acpica/evgpeinit.o

  AR      kernel/debug/built-in.o

  CC      fs/ecryptfs/crypto.o

  CC      fs/ecryptfs/keystore.o

  CC      block/blk-mq-virtio.o

  CC      arch/x86/kernel/apic/hw_nmi.o

  CC      drivers/acpi/acpica/evgpeutil.o

  CC      drivers/acpi/acpica/evglock.o

  CC      block/blk-zoned.o

  CC      fs/ecryptfs/kthread.o

  CC      security/selinux/netlink.o

  CC      arch/x86/kernel/apic/io_apic.o

  AR      kernel/cgroup/built-in.o

  CC      drivers/acpi/acpica/evhandler.o

  CC      drivers/acpi/acpica/evmisc.o

  CC      mm/mempolicy.o

  CC      block/blk-wbt.o

  CC      fs/ecryptfs/debug.o

  CC      kernel/events/core.o

  CC      mm/sparse.o

  CC      security/selinux/nlmsgtab.o

  CC      drivers/acpi/acpica/evregion.o

  CC      fs/ecryptfs/messaging.o

  CC      arch/x86/kernel/apic/msi.o

  CC      drivers/acpi/acpica/evrgnini.o

  CC      block/blk-mq-debugfs.o

  CC      security/selinux/netif.o

  CC      fs/ecryptfs/miscdev.o

  CC      drivers/acpi/acpica/evsci.o

  CC      mm/sparse-vmemmap.o

  CC      drivers/ata/libata-core.o

  CC      arch/x86/kernel/apic/x2apic_phys.o

  CC      drivers/acpi/acpica/evxface.o

  CC      block/sed-opal.o

  CC      security/selinux/netnode.o

  CC      mm/mmu_notifier.o

  AR      fs/ecryptfs/ecryptfs.o

  AR      fs/ecryptfs/built-in.o

  CC      arch/x86/kernel/apic/x2apic_cluster.o

  CC      drivers/acpi/acpica/evxfevnt.o

  CC      fs/efivarfs/inode.o

  CC      mm/ksm.o

  CC      drivers/acpi/acpica/evxfgpe.o

  CC      arch/x86/kernel/apic/apic_flat_64.o

  CC      security/selinux/netport.o

  CC      fs/efivarfs/file.o

  AR      block/built-in.o

  CC      drivers/ata/libata-scsi.o

  CC      arch/x86/kernel/apic/probe_64.o

  CC      drivers/acpi/acpica/evxfregn.o

  CC      fs/efivarfs/super.o

  CC      security/selinux/ibpkey.o

  CC      kernel/events/ring_buffer.o

  AR      arch/x86/kernel/apic/built-in.o

  CC      drivers/acpi/acpica/exconcat.o

  CC      mm/slub.o

  AR      fs/efivarfs/efivarfs.o

  AR      fs/efivarfs/built-in.o

  CC      arch/x86/kernel/cpu/cacheinfo.o

  CC      fs/exportfs/expfs.o

  CC      security/selinux/ss/ebitmap.o

  CC      drivers/acpi/acpica/exconfig.o

  CC      kernel/events/callchain.o

  CC      drivers/acpi/acpica/exconvrt.o

  CC      drivers/ata/libata-eh.o

  AR      fs/exportfs/exportfs.o

  AR      fs/exportfs/built-in.o

  CC      arch/x86/kernel/cpu/scattered.o

  CC      drivers/acpi/acpica/excreate.o

  CC      kernel/events/hw_breakpoint.o

  CC      security/selinux/ss/hashtab.o

  CC      kernel/irq/irqdesc.o

  CC      drivers/acpi/acpica/exdebug.o

  CC      arch/x86/kernel/cpu/topology.o

  CC      fs/ext4/balloc.o

  CC      kernel/events/uprobes.o

  CC      drivers/acpi/acpica/exdump.o

  CC      security/selinux/ss/sidtab.o

  CC      arch/x86/kernel/cpu/common.o

  CC      drivers/acpi/acpica/exfield.o

  CC      kernel/irq/handle.o

  CC      mm/memory_hotplug.o

  CC      security/selinux/ss/avtab.o

  CC      drivers/acpi/acpica/exfldio.o

  CC      drivers/ata/libata-transport.o

  CC      kernel/irq/manage.o

  AR      kernel/events/built-in.o

  CC      drivers/ata/libata-trace.o

  CC      fs/ext4/bitmap.o

  CC      arch/x86/kernel/cpu/match.o

  CC      drivers/acpi/acpica/exmisc.o

  CC      arch/x86/kernel/cpu/bugs.o

  CC      security/selinux/ss/policydb.o

  CC      security/selinux/ss/services.o

  CC      fs/ext4/block_validity.o

  CC      drivers/ata/libata-sff.o

  CC      mm/migrate.o

  CC      drivers/acpi/acpica/exmutex.o

  CC      kernel/irq/spurious.o

  CC      arch/x86/kernel/cpu/proc.o

  CC      fs/ext4/dir.o

  CC      drivers/acpi/acpica/exnames.o

  CC      kernel/irq/resend.o

  CC      drivers/acpi/acpica/exoparg1.o

  CC      drivers/ata/libata-pmp.o

  CC      arch/x86/kernel/cpu/intel.o

  CC      fs/ext4/ext4_jbd2.o

  CC      kernel/irq/chip.o

  CC      kernel/livepatch/core.o

  CC      drivers/acpi/acpica/exoparg2.o

  CC      security/selinux/ss/conditional.o

  CC      arch/x86/kernel/cpu/amd.o

  CC      mm/huge_memory.o

  CC      drivers/ata/libata-acpi.o

  CC      kernel/irq/dummychip.o

  CC      fs/ext4/extents.o

  CC      drivers/acpi/acpica/exoparg3.o

  CC      kernel/livepatch/patch.o

  CC      kernel/irq/devres.o

  CC      arch/x86/kernel/cpu/centaur.o

  CC      drivers/acpi/acpica/exoparg6.o

  CC      security/selinux/ss/mls.o

  CC      drivers/ata/libata-zpodd.o

  CC      arch/x86/kernel/cpu/intel_rdt.o

  CC      kernel/livepatch/shadow.o

  CC      drivers/acpi/acpica/exprep.o

  CC      kernel/irq/autoprobe.o

  CC      security/selinux/ss/status.o

  CC      drivers/ata/ata_piix.o

  CC      drivers/acpi/acpica/exregion.o

  CC      arch/x86/kernel/cpu/intel_rdt_rdtgroup.o

  CC      kernel/irq/irqdomain.o

  CC      kernel/livepatch/transition.o

  CC      mm/khugepaged.o

  CC      drivers/acpi/acpica/exresnte.o

  CC      security/selinux/netlabel.o

  CC      drivers/ata/pata_sis.o

  CC      drivers/acpi/acpica/exresolv.o

  CC      fs/ext4/extents_status.o

  CC      kernel/irq/proc.o

  AR      kernel/livepatch/livepatch.o

  AR      kernel/livepatch/built-in.o

  CC      kernel/irq/migration.o

  CC      arch/x86/kernel/cpu/intel_rdt_monitor.o

  CC      drivers/acpi/acpica/exresop.o

  CC      drivers/ata/ata_generic.o

  AR      security/selinux/selinux.o

  CC      drivers/acpi/acpica/exstore.o

  CC      kernel/irq/cpuhotplug.o

  AR      security/selinux/built-in.o

  CC      arch/x86/kernel/cpu/intel_rdt_ctrlmondata.o

  CC      security/smack/smack_lsm.o

  CC      mm/page_counter.o

  CC      arch/x86/kernel/cpu/mcheck/mce.o

  CC      fs/ext4/file.o

  CC      mm/memcontrol.o

  AR      drivers/ata/libata.o

  CC      drivers/acpi/acpica/exstoren.o

  CC      kernel/irq/pm.o

  AR      drivers/ata/built-in.o

  CC      drivers/acpi/acpica/exstorob.o

  CC      security/smack/smack_access.o

  CC      drivers/acpi/acpica/exsystem.o

  CC      fs/ext4/fsmap.o

  CC      kernel/irq/msi.o

  CC      fs/fat/cache.o

  CC      fs/fat/dir.o

  CC      arch/x86/kernel/cpu/mcheck/mce-severity.o

  CC      drivers/acpi/acpica/extrace.o

  CC      security/smack/smackfs.o

  CC      kernel/irq/affinity.o

  CC      arch/x86/kernel/cpu/mcheck/mce-genpool.o

  CC      kernel/locking/mutex.o

  CC      drivers/acpi/acpica/exutils.o

  CC      fs/ext4/fsync.o

  CC      kernel/irq/matrix.o

  CC      fs/fat/fatent.o

  CC      drivers/acpi/acpica/hwacpi.o

  CC      arch/x86/kernel/cpu/mcheck/mce_intel.o

  CC      kernel/locking/semaphore.o

  CC      mm/vmpressure.o

  CC      drivers/acpi/acpica/hwesleep.o

  CC      fs/ext4/hash.o

  CC      security/smack/smack_netfilter.o

  AR      kernel/irq/built-in.o

  CC      mm/swap_cgroup.o

  CC      arch/x86/kernel/cpu/mcheck/mce_amd.o

  CC      fs/fat/file.o

  CC      drivers/acpi/acpica/hwgpe.o

  CC      drivers/acpi/acpica/hwpci.o

  CC      kernel/locking/rwsem.o

  CC      fs/ext4/ialloc.o

  AR      security/smack/smack.o

  CC      fs/ext4/indirect.o

  CC      mm/hugetlb_cgroup.o

  AR      security/smack/built-in.o

  CC      drivers/acpi/acpica/hwregs.o

  CC      kernel/locking/percpu-rwsem.o

  CC      security/tomoyo/audit.o

  CC      fs/fat/inode.o

  CC      arch/x86/kernel/cpu/mcheck/therm_throt.o

  CC      drivers/acpi/acpica/hwsleep.o

  CC      mm/memory-failure.o

  CC      kernel/locking/osq_lock.o

  CC      drivers/acpi/acpica/hwvalid.o

  CC      arch/x86/kernel/cpu/mcheck/mce-apei.o

  CC      kernel/locking/rtmutex.o

  CC      security/tomoyo/common.o

  CC      kernel/locking/rwsem-xadd.o

  CC      fs/ext4/inline.o

  CC      fs/fat/misc.o

  CC      drivers/acpi/acpica/hwxface.o

  CC      arch/x86/kernel/cpu/mcheck/dev-mcelog.o

  CC      drivers/acpi/acpica/hwxfsleep.o

  AR      kernel/locking/built-in.o

  CC      fs/fat/nfs.o

  CC      mm/cleancache.o

  CC      kernel/printk/printk.o

  CC      drivers/acpi/acpica/nsaccess.o

  AR      arch/x86/kernel/cpu/mcheck/built-in.o

  CC      kernel/power/qos.o

  CC      arch/x86/kernel/cpu/microcode/core.o

  CC      fs/ext4/inode.o

  CC      fs/fat/namei_vfat.o

  CC      mm/page_isolation.o

  CC      security/tomoyo/condition.o

  CC      drivers/acpi/acpica/nsalloc.o

  CC      kernel/power/main.o

  CC      arch/x86/kernel/cpu/microcode/intel.o

  CC      drivers/acpi/acpica/nsarguments.o

  AR      fs/fat/fat.o

  CC      mm/zsmalloc.o

  AR      fs/fat/vfat.o

  AR      fs/fat/built-in.o

  CC      kernel/power/console.o

  CC      security/tomoyo/domain.o

  AR      kernel/printk/built-in.o

  CC      drivers/acpi/acpica/nsconvert.o

  CC      arch/x86/kernel/cpu/microcode/amd.o

  CC      drivers/acpi/acpica/nsdump.o

  CC      arch/x86/mm/init.o

  CC      kernel/power/process.o

  CC      mm/cma.o

  CC      security/tomoyo/environ.o

  CC      drivers/acpi/acpica/nseval.o

  AR      arch/x86/kernel/cpu/microcode/microcode.o

  CC      fs/fuse/dev.o

  AR      arch/x86/kernel/cpu/microcode/built-in.o

  CC      kernel/power/suspend.o

  CC      arch/x86/kernel/cpu/mtrr/main.o

  CC      arch/x86/mm/init_64.o

  CC      drivers/acpi/acpica/nsinit.o

  CC      fs/ext4/ioctl.o

  CC      mm/balloon_compaction.o

  CC      security/tomoyo/file.o

  CC      arch/x86/kernel/cpu/mtrr/if.o

  CC      drivers/acpi/acpica/nsload.o

  CC      kernel/power/hibernate.o

  CC      mm/userfaultfd.o

  CC      fs/fuse/dir.o

  CC      drivers/acpi/acpica/nsnames.o

  CC      arch/x86/kernel/cpu/mtrr/generic.o

  CC      arch/x86/mm/fault.o

  CC      security/tomoyo/gc.o

  CC      fs/ext4/mballoc.o

  CC      kernel/power/snapshot.o

  CC      drivers/acpi/acpica/nsobject.o

  CC      mm/page_idle.o

  CC      arch/x86/kernel/cpu/mtrr/cleanup.o

  CC      drivers/acpi/acpica/nsparse.o

  CC      fs/fuse/file.o

  CC      mm/usercopy.o

  CC      security/tomoyo/group.o

  CC      arch/x86/mm/ioremap.o

  CC      drivers/acpi/acpica/nspredef.o

  AR      arch/x86/kernel/cpu/mtrr/built-in.o

  CC      kernel/power/swap.o

  CC      arch/x86/kernel/cpu/perfctr-watchdog.o

  CC      mm/hmm.o

  CC      drivers/acpi/acpica/nsprepkg.o

  CC      arch/x86/mm/extable.o

  CC      security/tomoyo/load_policy.o

  CC      drivers/acpi/acpica/nsrepair.o

  CC      arch/x86/kernel/cpu/mshyperv.o

  CC      kernel/power/user.o

  CC      arch/x86/mm/pageattr.o

  AR      mm/built-in.o

  CC      drivers/acpi/acpica/nsrepair2.o

  CC      security/tomoyo/memory.o

  CC      fs/hugetlbfs/inode.o

  CC      fs/fuse/inode.o

  CC      fs/ext4/migrate.o

  AR      arch/x86/kernel/cpu/built-in.o

  CC      arch/x86/kernel/fpu/init.o

  CC      drivers/acpi/acpica/nssearch.o

  CC      kernel/power/wakelock.o

  CC      drivers/acpi/acpica/nsutils.o

  CC      security/tomoyo/mount.o

  CC      arch/x86/kernel/fpu/bugs.o

  CC      fs/ext4/mmp.o

  AR      fs/hugetlbfs/hugetlbfs.o

  AR      fs/hugetlbfs/built-in.o

  CC      drivers/acpi/acpica/nswalk.o

  CC      fs/fuse/control.o

  CC      arch/x86/mm/mmap.o

  AR      kernel/power/built-in.o

  CC      arch/x86/kernel/fpu/core.o

  CC      kernel/rcu/update.o

  CC      arch/x86/kernel/kprobes/core.o

  CC      security/tomoyo/network.o

  CC      fs/ext4/move_extent.o

  CC      drivers/acpi/acpica/nsxfeval.o

  CC      arch/x86/mm/pat.o

  CC      fs/fuse/xattr.o

  CC      kernel/rcu/sync.o

  CC      arch/x86/kernel/kprobes/opt.o

  CC      drivers/acpi/acpica/nsxfname.o

  CC      arch/x86/kernel/fpu/regset.o

  CC      fs/ext4/namei.o

  CC      security/tomoyo/realpath.o

  CC      fs/fuse/acl.o

  CC      kernel/rcu/srcutree.o

  CC      arch/x86/mm/pgtable.o

  CC      drivers/acpi/acpica/nsxfobj.o

  CC      arch/x86/kernel/kprobes/ftrace.o

  CC      arch/x86/kernel/fpu/signal.o

  AR      fs/fuse/fuse.o

  AR      fs/fuse/built-in.o

  CC      kernel/rcu/tree.o

  CC      security/tomoyo/securityfs_if.o

  CC      arch/x86/kernel/ptrace.o

  CC      drivers/acpi/acpica/psargs.o

  AR      arch/x86/kernel/kprobes/built-in.o

  CC      arch/x86/mm/tlb.o

  CC      arch/x86/kernel/fpu/xstate.o

  CC      drivers/base/component.o

  CC      drivers/acpi/acpica/psloop.o

  CC      security/tomoyo/tomoyo.o

  CC      arch/x86/mm/pat_rbtree.o

  CC      security/tomoyo/util.o

  CC      fs/ext4/page-io.o

  CC      drivers/acpi/acpica/psobject.o

  CC      drivers/base/core.o

  CC      arch/x86/mm/hugetlbpage.o

  AR      arch/x86/kernel/fpu/built-in.o

  CC      arch/x86/kernel/tls.o

  CC      drivers/acpi/acpica/psopcode.o

  CC      drivers/acpi/acpica/psopinfo.o

  AR      kernel/rcu/built-in.o

  CC      fs/ext4/readpage.o

  CC      fs/ext4/resize.o

  CC      arch/x86/mm/dump_pagetables.o

  CC      drivers/acpi/acpica/psparse.o

  AR      security/tomoyo/built-in.o

  CC      security/yama/yama_lsm.o

  CC      arch/x86/kernel/step.o

  CC      kernel/sched/core.o

  CC      arch/x86/mm/kmmio.o

  CC      arch/x86/kernel/tboot.o

  CC      drivers/acpi/acpica/psscope.o

  CC      drivers/acpi/acpica/pstree.o

  AR      security/yama/yama.o

  AR      security/yama/built-in.o

  CC      security/commoncap.o

  CC      drivers/base/bus.o

  CC      fs/ext4/super.o

  CC      drivers/base/dd.o

  CC      drivers/acpi/acpica/psutils.o

  CC      arch/x86/mm/pf_in.o

  CC      arch/x86/kernel/stacktrace.o

  CC      drivers/acpi/acpica/pswalk.o

  CC      drivers/acpi/acpica/psxface.o

  CC      arch/x86/mm/mmio-mod.o

  CC      security/security.o

  CC      drivers/base/syscore.o

  CC      arch/x86/kernel/reboot.o

  CC      drivers/acpi/acpica/rsaddr.o

  CC      drivers/block/loop.o

  CC      arch/x86/mm/numa.o

  CC      drivers/acpi/acpica/rscalc.o

  CC      drivers/base/driver.o

arch/x86/kernel/reboot.o: warning: objtool: machine_real_restart()+0x60: retpoline_safe hint not an indirect jump/call

  CC      arch/x86/kernel/early-quirks.o

  CC      drivers/acpi/acpica/rscreate.o

  CC      drivers/base/class.o

  CC      arch/x86/mm/amdtopology.o

  CC      kernel/sched/loadavg.o

  CC      drivers/block/xen-blkfront.o

  CC      drivers/acpi/acpica/rsdumpinfo.o

  CC      drivers/base/platform.o

  CC      drivers/acpi/acpica/rsinfo.o

  CC      security/inode.o

  CC      arch/x86/kernel/smp.o

  CC      kernel/sched/clock.o

  CC      arch/x86/mm/srat.o

  CC      drivers/acpi/acpica/rsio.o

  CC      kernel/sched/cputime.o

  CC      security/lsm_audit.o

  CC      arch/x86/mm/mpx.o

  CC      arch/x86/kernel/smpboot.o

  CC      drivers/base/cpu.o

  CC      drivers/acpi/acpica/rsirq.o

  CC      kernel/sched/idle_task.o

  CC      drivers/acpi/acpica/rslist.o

  CC      drivers/base/firmware.o

  CC      security/device_cgroup.o

  AR      drivers/block/built-in.o

  CC      arch/x86/kernel/tsc_sync.o

  CC      arch/x86/mm/pkeys.o

  CC      arch/x86/mm/kaslr.o

  CC      kernel/sched/fair.o

  CC      drivers/acpi/acpica/rsmemory.o

  CC      drivers/base/init.o

  CC      arch/x86/kernel/setup_percpu.o

  CC      security/lock_down.o

  CC      fs/ext4/symlink.o

  CC      arch/x86/kernel/mpparse.o

  CC      drivers/acpi/acpica/rsmisc.o

  CC      arch/x86/mm/pti.o

  CC      drivers/base/devres.o

  CC      fs/ext4/sysfs.o

  AR      security/built-in.o

  CC      drivers/acpi/acpica/rsserial.o

  CC      drivers/acpi/acpica/rsutils.o

  CC      arch/x86/kernel/ftrace.o

  CC      fs/ext4/xattr.o

  CC      arch/x86/mm/mem_encrypt.o

  CC      drivers/base/attribute_container.o

  CC      drivers/cdrom/cdrom.o

  CC      drivers/acpi/acpica/rsxface.o

  CC      drivers/acpi/acpica/tbdata.o

  CC      fs/ext4/xattr_trusted.o

  CC      drivers/base/transport_class.o

  CC      arch/x86/kernel/livepatch.o

  AR      arch/x86/mm/mmiotrace.o

  AR      arch/x86/mm/built-in.o

  CC      fs/ext4/xattr_user.o

  CC      drivers/acpi/acpica/tbfadt.o

  CC      drivers/base/topology.o

  CC      arch/x86/kernel/machine_kexec_64.o

  CC      arch/x86/net/bpf_jit_comp.o

  CC      drivers/acpi/acpica/tbfind.o

  AR      drivers/cdrom/built-in.o

  CC      arch/x86/kernel/crash.o

  CC      fs/ext4/acl.o

  CC      fs/jbd2/transaction.o

  CC      drivers/base/container.o

  CC      kernel/sched/rt.o

  CC      drivers/acpi/acpica/tbinstal.o

  CC      kernel/sched/deadline.o

  CC      drivers/base/property.o

  CC      arch/x86/kernel/kexec-bzimage64.o

  CC      fs/ext4/xattr_security.o

  CC      drivers/acpi/acpica/tbprint.o

  AR      arch/x86/net/built-in.o

  CC      drivers/acpi/acpica/tbutils.o

  CC      drivers/acpi/acpica/tbxface.o

  CC      kernel/sched/wait.o

  CC      fs/jbd2/commit.o

  AR      fs/ext4/ext4.o

  AR      fs/ext4/built-in.o

  CC      drivers/base/cacheinfo.o

  CC      drivers/char/mem.o

  CC      drivers/acpi/acpica/tbxfload.o

  CC      arch/x86/kernel/crash_dump_64.o

  CC      drivers/char/random.o

  CC      arch/x86/kernel/module.o

  CC      kernel/sched/wait_bit.o

  CC      drivers/base/devtmpfs.o

  CC      drivers/acpi/acpica/tbxfroot.o

  CC      fs/jbd2/recovery.o

  CC      arch/x86/kernel/doublefault.o

  CC      drivers/char/ttyprintk.o

  CC      kernel/sched/swait.o

  CC      drivers/base/power/sysfs.o

  CC      drivers/acpi/acpica/utaddress.o

  CC      arch/x86/kernel/kgdb.o

  CC      kernel/sched/completion.o

  CC      drivers/acpi/acpica/utalloc.o

  CC      drivers/acpi/acpica/utascii.o

  CC      fs/jbd2/checkpoint.o

  CC      drivers/base/power/generic_ops.o

  CC      drivers/base/regmap/regmap.o

  CC      drivers/acpi/acpica/utbuffer.o

  CC      kernel/sched/idle.o

  CC      arch/x86/kernel/early_printk.o

  CC      drivers/char/misc.o

  CC      drivers/acpi/acpica/utcopy.o

  CC      drivers/base/power/common.o

  CC      fs/jbd2/revoke.o

  CC      drivers/base/power/qos.o

  CC      drivers/acpi/acpica/utexcep.o

  CC      drivers/char/virtio_console.o

  CC      drivers/acpi/acpica/utdebug.o

  CC      drivers/base/power/runtime.o

  CC      fs/jbd2/journal.o

  CC      kernel/sched/cpupri.o

  CC      arch/x86/kernel/hpet.o

  CC      drivers/acpi/acpica/utdecode.o

  CC      drivers/acpi/acpica/utdelete.o

  CC      drivers/base/power/wakeirq.o

  CC      kernel/sched/cpudeadline.o

  CC      drivers/base/regmap/regcache.o

  CC      drivers/acpi/acpica/uterror.o

  CC      drivers/char/hpet.o

  CC      kernel/sched/topology.o

  CC      drivers/base/regmap/regcache-rbtree.o

  CC      drivers/base/power/main.o

  CC      arch/x86/kernel/amd_nb.o

  CC      drivers/base/power/wakeup.o

  CC      drivers/acpi/acpica/uteval.o

  CC      drivers/base/regmap/regcache-flat.o

  AR      fs/jbd2/jbd2.o

  AR      fs/jbd2/built-in.o

  CC      drivers/acpi/acpica/utglobal.o

  CC      arch/x86/kernel/kvm.o

  CC      kernel/sched/stop_task.o

  CC      drivers/base/regmap/regmap-debugfs.o

  CC      drivers/base/power/trace.o

  CC      drivers/base/power/clock_ops.o

  CC      drivers/acpi/acpica/uthex.o

  CC      fs/kernfs/mount.o

  CC      drivers/char/agp/backend.o

  CC      drivers/char/agp/frontend.o

  CC      drivers/acpi/acpica/utids.o

  CC      drivers/base/regmap/regmap-i2c.o

  AR      drivers/base/power/built-in.o

  CC      fs/kernfs/inode.o

  CC      kernel/sched/autogroup.o

  CC      drivers/char/agp/generic.o

  CC      arch/x86/kernel/kvmclock.o

  CC      drivers/acpi/acpica/utinit.o

  CC      drivers/base/dma-mapping.o

  CC      drivers/base/regmap/regmap-spi.o

  CC      fs/kernfs/dir.o

  CC      drivers/base/regmap/regmap-mmio.o

  CC      kernel/sched/stats.o

  CC      drivers/acpi/acpica/utlock.o

  CC      arch/x86/kernel/paravirt.o

  CC      drivers/acpi/acpica/utmath.o

  CC      drivers/char/agp/isoch.o

  CC      drivers/base/regmap/regmap-irq.o

  CC      drivers/char/agp/compat_ioctl.o

  CC      drivers/char/agp/amd64-agp.o

  CC      kernel/sched/debug.o

  CC      drivers/acpi/acpica/utmisc.o

  CC      fs/kernfs/file.o

  CC      arch/x86/kernel/pvclock.o

  CC      drivers/acpi/acpica/utmutex.o

  AR      drivers/base/regmap/built-in.o

  CC      drivers/base/isa.o

  CC      drivers/base/firmware_class.o

  CC      drivers/char/agp/intel-agp.o

  CC      drivers/char/agp/intel-gtt.o

  CC      drivers/acpi/acpica/utnonansi.o

  CC      arch/x86/kernel/pmem.o

  AR      fs/kernfs/built-in.o

  CC      kernel/sched/cpuacct.o

  CC      drivers/acpi/acpica/utobject.o

  CC      drivers/char/agp/via-agp.o

  CC      fs/notify/fsnotify.o

  CC      arch/x86/kernel/pcspeaker.o

  CC      drivers/acpi/acpica/utosi.o

  CC      drivers/base/node.o

  CC      drivers/acpi/acpica/utownerid.o

  CC      kernel/sched/cpufreq.o

  AR      drivers/char/agp/agpgart.o

  AR      drivers/char/agp/built-in.o

  CC      arch/x86/kernel/check.o

  CC      fs/notify/notification.o

  CC      drivers/char/hw_random/core.o

  CC      drivers/acpi/acpica/utpredef.o

  CC      kernel/sched/cpufreq_schedutil.o

  CC      drivers/base/memory.o

  CC      arch/x86/kernel/pci-swiotlb.o

  CC      fs/notify/group.o

  CC      arch/x86/platform/efi/quirks.o

  CC      drivers/acpi/acpica/utresdecode.o

  CC      drivers/char/tpm/tpm-interface.o

  CC      arch/x86/kernel/uprobes.o

  AR      drivers/char/hw_random/rng-core.o

  AR      drivers/char/hw_random/built-in.o

  CC      drivers/char/tpm/tpm-dev.o

  CC      fs/notify/mark.o

  CC      drivers/base/module.o

  CC      kernel/sched/membarrier.o

  CC      drivers/acpi/acpica/utresrc.o

  CC      arch/x86/platform/efi/efi.o

  CC      drivers/base/hypervisor.o

  CC      drivers/base/pinctrl.o

  CC      arch/x86/kernel/sysfb.o

  CC      drivers/acpi/acpica/utstate.o

  CC      kernel/sched/isolation.o

  CC      fs/notify/fdinfo.o

  CC      drivers/char/tpm/tpm-sysfs.o

  CC      arch/x86/platform/efi/efi_64.o

  CC      drivers/base/platform-msi.o

  CC      drivers/acpi/acpica/utstring.o

  AR      kernel/sched/built-in.o

  CC      arch/x86/kernel/sysfb_efi.o

  CC      drivers/char/tpm/tpm-chip.o

  CC      kernel/time/time.o

  AR      drivers/base/built-in.o

  CC      drivers/acpi/acpica/utstrsuppt.o

  CC      fs/notify/dnotify/dnotify.o

  CC      arch/x86/kernel/perf_regs.o

  CC      drivers/char/tpm/tpm2-cmd.o

  CC      arch/x86/platform/efi/early_printk.o

  CC      drivers/acpi/acpica/utstrtoul64.o

  CC      drivers/acpi/acpica/utxface.o

  CC      fs/proc/task_mmu.o

  AR      fs/notify/dnotify/built-in.o

  CC      kernel/time/timer.o

  CC      arch/x86/kernel/itmt.o

  CC      fs/notify/fanotify/fanotify.o

  CC      fs/notify/fanotify/fanotify_user.o

  CC      drivers/acpi/acpica/utxfinit.o

  AR      arch/x86/platform/efi/built-in.o

  CC      arch/x86/kernel/umip.o

  CC      arch/x86/platform/intel/iosf_mbi.o

  CC      drivers/char/tpm/tpm-dev-common.o

  CC      arch/x86/kernel/unwind_frame.o

  CC      drivers/acpi/acpica/utxferror.o

  CC      fs/proc/inode.o

  AR      fs/notify/fanotify/built-in.o

  CC      drivers/acpi/acpica/utxfmutex.o

  AR      arch/x86/platform/intel/built-in.o

  CC      arch/x86/kernel/audit_64.o

  CC      fs/notify/inotify/inotify_fsnotify.o

  CC      kernel/time/hrtimer.o

  CC      kernel/time/timekeeping.o

  CC      drivers/char/tpm/tpmrm-dev.o

  CC      arch/x86/platform/sfi/sfi.o

  CC      drivers/acpi/acpica/dbcmds.o

  CC      fs/proc/root.o

  CC      arch/x86/kernel/amd_gart_64.o

  CC      fs/notify/inotify/inotify_user.o

  CC      drivers/char/tpm/tpm1_eventlog.o

  AR      arch/x86/platform/sfi/built-in.o

  AR      arch/x86/platform/built-in.o

  CC      fs/proc/base.o

  CC      drivers/acpi/acpica/dbconvert.o

  CC      kernel/time/ntp.o

  CC      kernel/time/clocksource.o

  CC      fs/proc/generic.o

  CC      drivers/char/tpm/tpm2_eventlog.o

  AR      fs/notify/inotify/built-in.o

  AR      fs/notify/built-in.o

  CC      arch/x86/kernel/aperture_64.o

  CC      fs/proc/array.o

  CC      drivers/acpi/acpica/dbdisply.o

  CC      fs/proc/fd.o

  CC      kernel/time/timer_list.o

  CC      drivers/char/tpm/tpm2-space.o

  CC      drivers/acpi/acpica/dbexec.o

  CC      fs/proc/proc_tty.o

  CC      drivers/char/tpm/tpm_ppi.o

  CC      fs/pstore/inode.o

  CC      arch/x86/kernel/pci-calgary_64.o

  CC      fs/proc/cmdline.o

  CC      kernel/time/alarmtimer.o

  CC      drivers/char/tpm/tpm_acpi.o

  CC      fs/proc/consoles.o

  CC      drivers/acpi/acpica/dbhistry.o

  CC      fs/proc/cpuinfo.o

  CC      fs/pstore/platform.o

  CC      drivers/acpi/acpica/dbinput.o

  CC      drivers/char/tpm/tpm_tis_core.o

  CC      arch/x86/kernel/tce_64.o

  CC      fs/proc/devices.o

  CC      drivers/clk/clk-devres.o

  CC      kernel/time/posix-timers.o

  CC      drivers/clocksource/acpi_pm.o

  CC      drivers/acpi/acpica/dbmethod.o

  AR      fs/pstore/pstore.o

  AR      fs/pstore/built-in.o

  CC      kernel/time/posix-cpu-timers.o

  CC      drivers/clk/clk-bulk.o

  CC      fs/proc/interrupts.o

  CC      arch/x86/kernel/mmconf-fam10h_64.o

  AR      drivers/clocksource/built-in.o

  CC      drivers/acpi/acpica/dbnames.o

  CC      drivers/char/tpm/tpm_tis.o

  CC      drivers/clk/clkdev.o

  CC      drivers/char/tpm/tpm_crb.o

  CC      fs/proc/loadavg.o

  CC      arch/x86/kernel/head64.o

  CC      drivers/clk/clk.o

  CC      drivers/acpi/acpica/dbobject.o

  CC      kernel/time/posix-clock.o

  CC      fs/proc/meminfo.o

  CC      kernel/time/itimer.o

  CC      fs/quota/dquot.o

  AR      drivers/char/tpm/tpm.o

  AR      drivers/char/tpm/built-in.o

  AR      drivers/char/built-in.o

  CC      drivers/acpi/acpica/dbstats.o

  CC      kernel/time/clockevents.o

  AR      arch/x86/kernel/built-in.o

  CC      arch/x86/realmode/init.o

  CC      fs/proc/stat.o

  CC      drivers/acpi/acpica/dbutils.o

  CC      kernel/time/tick-common.o

  CC      drivers/acpi/apei/apei-base.o

  AR      arch/x86/realmode/built-in.o

  CC      drivers/acpi/acpica/dbxface.o

  CC      fs/proc/uptime.o

  CC      kernel/time/tick-broadcast.o

  CC      drivers/clk/clk-fixed-factor.o

  CC      arch/x86/xen/enlighten.o

  CC      drivers/acpi/acpica/rsdump.o

  CC      fs/quota/quota.o

  CC      fs/proc/version.o

  CC      kernel/time/tick-broadcast-hrtimer.o

  CC      drivers/clk/clk-fixed-rate.o

  CC      drivers/acpi/apei/hest.o

  AR      drivers/acpi/acpica/acpi.o

  AR      drivers/acpi/acpica/built-in.o

  CC      kernel/time/tick-oneshot.o

  CC      fs/proc/softirqs.o

  CC      drivers/acpi/dptf/int340x_thermal.o

  CC      fs/proc/namespaces.o

  CC      drivers/clk/clk-fractional-divider.o

  CC      arch/x86/xen/multicalls.o

  CC      fs/quota/compat.o

  CC      fs/proc/self.o

  CC      kernel/time/tick-sched.o

  CC      drivers/acpi/apei/erst.o

  AR      drivers/acpi/dptf/built-in.o

  CC      arch/x86/xen/mmu.o

  CC      fs/proc/thread_self.o

  CC      drivers/clk/clk-gpio.o

  CC      fs/proc/proc_sysctl.o

  CC      fs/quota/netlink.o

  CC      fs/proc/proc_net.o

  CC      arch/x86/xen/irq.o

  CC      kernel/time/timekeeping_debug.o

  CC      fs/proc/kcore.o

  CC      drivers/acpi/apei/bert.o

  AR      fs/quota/built-in.o

  CC      fs/proc/vmcore.o

  AR      kernel/time/built-in.o

  CC      arch/x86/xen/time.o

  CC      drivers/clk/x86/clk-lpt.o

  CC      fs/proc/kmsg.o

  CC      drivers/acpi/apei/ghes.o

  CC      fs/ramfs/inode.o

  CC      fs/ramfs/file-mmu.o

  CC      drivers/clk/x86/clk-pmc-atom.o

  CC      arch/x86/xen/grant-table.o

  CC      fs/proc/page.o

  CC      kernel/trace/trace_clock.o

  CC      kernel/trace/ftrace.o

  AR      fs/ramfs/ramfs.o

  AR      fs/ramfs/built-in.o

  AR      drivers/acpi/apei/apei.o

  CC      kernel/trace/ring_buffer.o

  AR      drivers/acpi/apei/built-in.o

  CC      drivers/acpi/ac.o

  CC      fs/squashfs/block.o

  CC      arch/x86/xen/suspend.o

  CC      drivers/acpi/button.o

  AR      drivers/clk/x86/clk-x86-lpss.o

  AR      drivers/clk/x86/built-in.o

  CC      fs/proc/version_signature.o

  AR      drivers/clk/built-in.o

  CC      kernel/kcmp.o

  CC      kernel/trace/trace.o

  AR      fs/proc/proc.o

  CC      arch/x86/xen/platform-pci-unplug.o

  CC      fs/squashfs/cache.o

  AR      fs/proc/built-in.o

  CC      kernel/freezer.o

  CC      fs/squashfs/file.o

  CC      arch/x86/xen/enlighten_hvm.o

  CC      drivers/acpi/fan.o

  CC      drivers/acpi/pci_slot.o

  CC      fs/squashfs/inode.o

  CC      arch/x86/pci/i386.o

  CC      arch/x86/power/cpu.o

  CC      arch/x86/video/fbdev.o

  CC      fs/squashfs/super.o

  CC      arch/x86/xen/mmu_hvm.o

  CC      drivers/acpi/processor_driver.o

  CC      arch/x86/xen/suspend_hvm.o

  CC      arch/x86/pci/init.o

  AR      arch/x86/video/built-in.o

  CC      arch/x86/power/hibernate_64.o

  CC      fs/squashfs/symlink.o

  CC      kernel/trace/trace_output.o

  CC      drivers/connector/cn_queue.o

  CC      arch/x86/xen/setup.o

  CC      drivers/acpi/processor_idle.o

  CC      arch/x86/pci/mmconfig_64.o

  CC      arch/x86/xen/apic.o

  CC      fs/squashfs/decompressor.o

  AR      arch/x86/power/built-in.o

  CC      kernel/trace/trace_seq.o

  CC      arch/x86/pci/direct.o

  CC      fs/squashfs/file_direct.o

  CC      fs/squashfs/page_actor.o

  CC      drivers/connector/connector.o

  CC      arch/x86/xen/pmu.o

  CC      arch/x86/xen/suspend_pv.o

  CC      drivers/acpi/processor_throttling.o

  CC      kernel/trace/trace_stat.o

  CC      arch/x86/pci/mmconfig-shared.o

  CC      kernel/trace/trace_printk.o

  CC      fs/squashfs/decompressor_single.o

  CC      drivers/connector/cn_proc.o

  CC      arch/x86/xen/p2m.o

  CC      drivers/acpi/processor_thermal.o

  CC      net/socket.o

  CC      arch/x86/pci/xen.o

  CC      fs/sysfs/file.o

  CC      fs/squashfs/lz4_wrapper.o

  CC      kernel/trace/tracing_map.o

  CC      drivers/acpi/processor_perflib.o

  AR      drivers/connector/cn.o

  AR      drivers/connector/built-in.o

  CC      fs/sysfs/mount.o

  CC      net/802/fc.o

  CC      arch/x86/xen/enlighten_pv.o

  CC      fs/squashfs/lzo_wrapper.o

  CC      arch/x86/pci/fixup.o

  AR      fs/sysfs/built-in.o

  CC      drivers/acpi/container.o

  CC      kernel/trace/trace_sched_switch.o

  CC      fs/squashfs/xz_wrapper.o

  CC      net/802/fddi.o

  CC      drivers/cpufreq/cpufreq.o

  CC      arch/x86/pci/acpi.o

  CC      drivers/acpi/thermal.o

  CC      kernel/trace/trace_functions.o

  CC      arch/x86/xen/mmu_pv.o

  CC      fs/squashfs/zlib_wrapper.o

  CC      arch/x86/xen/enlighten_pvh.o

  AR      net/802/built-in.o

  CC      net/bpf/test_run.o

  CC      arch/x86/pci/legacy.o

  CC      fs/squashfs/zstd_wrapper.o

  CC      drivers/acpi/acpi_memhotplug.o

  CC      kernel/trace/trace_sched_wakeup.o

  CC      arch/x86/pci/irq.o

  CC      kernel/trace/trace_hwlat.o

  CC      drivers/cpufreq/cpufreq_stats.o

  AR      net/bpf/built-in.o

  AR      fs/squashfs/squashfs.o

  CC      drivers/acpi/ioapic.o

  AR      fs/squashfs/built-in.o

  CC      fs/eventpoll.o

  CC      fs/tracefs/inode.o

  CC      drivers/cpufreq/cpufreq_ondemand.o

  CC      kernel/trace/trace_nop.o

  CC      arch/x86/pci/numachip.o

  CC      net/core/sock.o

  CC      arch/x86/xen/trace.o

  CC      drivers/acpi/battery.o

[01m[Kdrivers/cpufreq/cpufreq_ondemand.c:[m[K In function ‘[01m[Kod_set_powersave_bias[m[K’:

[01m[Kdrivers/cpufreq/cpufreq_ondemand.c:449:1:[m[K [01;35m[Kwarning: [m[Kthe frame size of 1032 bytes is larger than 1024 bytes [-Wframe-larger-than=]

 }

[01;32m[K ^[m[K

  AR      fs/tracefs/tracefs.o

  AR      fs/tracefs/built-in.o

  CC      arch/x86/pci/common.o

  CC      kernel/trace/trace_stack.o

  CC      drivers/cpufreq/cpufreq_conservative.o

  CC      kernel/trace/trace_mmiotrace.o

  CC      drivers/cpufreq/cpufreq_governor.o

  CC      drivers/acpi/hed.o

  CC      arch/x86/pci/early.o

  CC      fs/anon_inodes.o

  CC      net/dcb/dcbnl.o

  CC      arch/x86/xen/smp.o

  CC      kernel/trace/trace_functions_graph.o

  CC      arch/x86/pci/bus_numa.o

  CC      drivers/cpufreq/cpufreq_governor_attr_set.o

  CC      drivers/acpi/bgrt.o

  CC      fs/signalfd.o

  CC      arch/x86/xen/smp_pv.o

  CC      drivers/cpufreq/acpi-cpufreq.o

  CC      net/core/request_sock.o

  CC      arch/x86/pci/amd_bus.o

  CC      drivers/acpi/cppc_acpi.o

  CC      kernel/trace/blktrace.o

  CC      fs/timerfd.o

  CC      net/dcb/dcbevent.o

  CC      arch/x86/xen/smp_hvm.o

  AR      arch/x86/pci/built-in.o

  CC      fs/eventfd.o

  CC      net/core/skbuff.o

  CC      drivers/cpufreq/powernow-k8.o

  CC      drivers/acpi/acpi_dbg.o

  AR      net/dcb/built-in.o

  CC      drivers/cpufreq/pcc-cpufreq.o

  CC      arch/x86/xen/spinlock.o

  CC      kernel/trace/trace_events.o

  CC      fs/userfaultfd.o

  CC      drivers/acpi/pmic/tps68470_pmic.o

  CC      kernel/trace/trace_export.o

  CC      drivers/cpufreq/speedstep-centrino.o

  CC      kernel/trace/trace_syscalls.o

  CC      arch/x86/xen/vga.o

  CC      drivers/cpufreq/intel_pstate.o

  AR      drivers/acpi/acpi.o

  AR      drivers/acpi/processor.o

  CC      arch/x86/xen/pci-swiotlb-xen.o

  AR      drivers/acpi/built-in.o

  CC      fs/aio.o

  CC      net/core/datagram.o

  CC      kernel/trace/trace_event_perf.o

  CC      net/core/stream.o

  CC      arch/x86/xen/efi.o

  AR      drivers/cpufreq/built-in.o

  CC      kernel/trace/trace_events_filter.o

  CC      kernel/trace/trace_events_trigger.o

  AR      arch/x86/xen/built-in.o

  AR      arch/x86/built-in.o

  CC      fs/dax.o

  CC      drivers/cpuidle/cpuidle.o

  CC      fs/locks.o

  CC      net/core/scm.o

  CC      kernel/trace/trace_events_hist.o

  CC      kernel/profile.o

  CC      lib/random32.o

  CC      net/core/gen_stats.o

  CC      kernel/stacktrace.o

  CC      drivers/cpuidle/driver.o

  CC      lib/bust_spinlocks.o

  CC      kernel/trace/bpf_trace.o

  CC      net/core/gen_estimator.o

  CC      kernel/trace/trace_kprobe.o

  CC      drivers/cpuidle/sysfs.o

  CC      kernel/trace/power-traces.o

  CC      lib/bitmap.o

  CC      arch/x86/lib/msr.o

  CC      fs/compat.o

  CC      net/core/net_namespace.o

  CC      drivers/cpuidle/governors/ladder.o

  CC      kernel/trace/rpm-traces.o

  CC      lib/scatterlist.o

  CC      fs/compat_ioctl.o

  CC      fs/binfmt_script.o

  CC      arch/x86/lib/csum-partial_64.o

  CC      arch/x86/lib/csum-wrappers_64.o

  CC      drivers/cpuidle/governors/menu.o

  CC      kernel/trace/trace_kdb.o

  CC      arch/x86/lib/delay.o

  CC      lib/iov_iter.o

  CC      kernel/trace/trace_probe.o

  CC      net/core/secure_seq.o

  AR      drivers/cpuidle/governors/built-in.o

  CC      drivers/cpuidle/poll_state.o

  CC      net/dns_resolver/dns_key.o

  CC      kernel/trace/trace_uprobe.o

  CC      arch/x86/lib/insn-eval.o

  AR      drivers/cpuidle/built-in.o

  CC      net/dns_resolver/dns_query.o

  CC      net/core/flow_dissector.o

  CC      arch/x86/lib/usercopy.o

  CC      drivers/dax/super.o

  AR      kernel/trace/libftrace.o

  AR      kernel/trace/built-in.o

  CC      lib/kfifo.o

  CC      kernel/futex.o

  CC      arch/x86/lib/usercopy_64.o

  AR      net/dns_resolver/dns_resolver.o

  AR      net/dns_resolver/built-in.o

  CC      net/core/sysctl_net_core.o

  CC      net/ethernet/eth.o

  AR      drivers/dax/dax.o

  AR      drivers/dax/built-in.o

  AR      arch/x86/lib/lib.a

  EXPORTS arch/x86/lib/lib-ksyms.o

  CC      drivers/devfreq/devfreq.o

  CC      lib/percpu-refcount.o

  AR      arch/x86/lib/built-in.o

  CC      lib/percpu_ida.o

  CC      fs/binfmt_elf.o

  CC      lib/rhashtable.o

  CC      net/core/dev.o

  AR      net/ethernet/built-in.o

  CC      drivers/devfreq/devfreq-event.o

  CC      net/core/ethtool.o

  CC      drivers/dma/dmaengine.o

  CC      drivers/dma/acpi-dma.o

  CC      kernel/futex_compat.o

  CC      drivers/devfreq/governor_simpleondemand.o

  CC      kernel/dma.o

  CC      lib/usercopy.o

  CC      fs/compat_binfmt_elf.o

  CC      drivers/devfreq/governor_performance.o

  CC      kernel/smp.o

  CC      lib/kstrtox.o

  CC      lib/iomap.o

  CC      drivers/devfreq/governor_powersave.o

  AR      drivers/dma/built-in.o

  CC      lib/pci_iomap.o

  CC      net/ipv4/route.o

  CC      kernel/uid16.o

  CC      drivers/devfreq/governor_userspace.o

  CC      drivers/dma-buf/dma-buf.o

  CC      net/core/dev_addr_lists.o

  CC      fs/mbcache.o

  CC      lib/devres.o

  CC      drivers/devfreq/governor_passive.o

  CC      kernel/module.o

  CC      fs/posix_acl.o

  CC      lib/crc-t10dif.o

  CC      drivers/dma-buf/dma-fence.o

  AR      drivers/devfreq/built-in.o

  CC      lib/crc32.o

  CC      net/core/dst.o

  CC      fs/coredump.o

  CC      drivers/edac/edac_mc.o

  CC      net/ipv4/inetpeer.o

  CC      lib/genalloc.o

  CC      drivers/dma-buf/dma-fence-array.o

  CC      net/core/netevent.o

  CC      drivers/extcon/extcon.o

  CC      drivers/dma-buf/reservation.o

  CC      net/ipv4/protocol.o

  CC      fs/drop_caches.o

  CC      net/core/neighbour.o

  CC      drivers/edac/edac_device.o

  CC      drivers/extcon/devres.o

  CC      kernel/kallsyms.o

  CC      drivers/dma-buf/seqno-fence.o

  CC      lib/mpi/mpi-pow.o

  CC      fs/fhandle.o

  CC      net/ipv4/ip_input.o

  CC      drivers/edac/edac_mc_sysfs.o

  AR      drivers/extcon/extcon-core.o

  AR      drivers/extcon/built-in.o

  CC      net/core/rtnetlink.o

  CC      drivers/dma-buf/sync_file.o

  AR      lib/mpi/mpi.o

  AR      lib/mpi/built-in.o

  CC      kernel/acct.o

  CC      fs/iomap.o

  CC      drivers/edac/edac_module.o

  CC      drivers/dma-buf/sw_sync.o

  CC      lib/percpu_counter.o

  CC      net/ipv4/ip_fragment.o

  CC      drivers/edac/edac_device_sysfs.o

  CC      kernel/crash_core.o

  CC      lib/swiotlb.o

  CC      fs/dcookies.o

  CC      drivers/dma-buf/sync_debug.o

  CC      drivers/edac/wq.o

  CC      kernel/kexec_core.o

  CC      net/ipv6/af_inet6.o

  CC      net/ipv4/ip_forward.o

  CC      net/core/utils.o

  AR      fs/built-in.o

  CC      net/core/link_watch.o

  CC      drivers/edac/edac_pci.o

  AR      drivers/dma-buf/built-in.o

  CC      net/core/filter.o

  CC      lib/iommu-common.o

  CC      net/ipv4/ip_options.o

  CC      kernel/kexec.o

  CC      net/ipv6/anycast.o

  CC      lib/syscall.o

  CC      drivers/edac/edac_pci_sysfs.o

  CC      drivers/edac/ghes_edac.o

  CC      kernel/kexec_file.o

  CC      net/l3mdev/l3mdev.o

  CC      lib/dynamic_debug.o

  CC      net/ipv6/ip6_output.o

  CC      net/ipv4/ip_output.o

  AR      drivers/edac/edac_core.o

  AR      drivers/edac/built-in.o

  CC      net/core/sock_diag.o

  CC      kernel/compat.o

  AR      net/l3mdev/built-in.o

  CC      drivers/firmware/dmi_scan.o

  CC      net/core/dev_ioctl.o

  CC      net/ipv6/ip6_input.o

  CC      lib/nlattr.o

  CC      net/core/tso.o

  CC      drivers/firmware/edd.o

  CC      net/ipv6/addrconf.o

  CC      kernel/utsname.o

  CC      net/ipv4/ip_sockglue.o

  CC      lib/digsig.o

  CC      kernel/user_namespace.o

  CC      drivers/firmware/dmi-id.o

  CC      net/core/sock_reuseport.o

  CC      lib/strncpy_from_user.o

  CC      drivers/gpio/devres.o

  CC      kernel/pid_namespace.o

  CC      net/ipv4/inet_hashtables.o

  CC      drivers/firmware/iscsi_ibft_find.o

  CC      lib/strnlen_user.o

  CC      drivers/gpio/gpiolib.o

  CC      kernel/stop_machine.o

  CC      net/core/fib_notifier.o

  CC      lib/net_utils.o

  CC      net/ipv4/inet_timewait_sock.o

  CC      drivers/firmware/efi/efi-bgrt.o

  CC      lib/irq_poll.o

  CC      kernel/audit.o

  CC      net/core/net-sysfs.o

  CC      drivers/firmware/efi/efi.o

  CC      lib/sbitmap.o

  CC      net/ipv4/inet_connection_sock.o

  CC      net/ipv6/addrlabel.o

  CC      lib/bug.o

  CC      drivers/firmware/efi/vars.o

  CC      net/ipv6/route.o

  CC      drivers/gpio/gpiolib-legacy.o

  CC      kernel/auditfilter.o

  CC      lib/chacha20.o

  CC      net/core/net-procfs.o

  CC      net/ipv4/tcp.o

  CC      drivers/firmware/efi/reboot.o

  CC      lib/dump_stack.o

  CC      drivers/gpio/gpiolib-devprop.o

  CC      drivers/firmware/efi/memattr.o

  CC      lib/extable.o

  CC      net/core/fib_rules.o

  CC      drivers/gpio/gpiolib-sysfs.o

  CC      kernel/auditsc.o

  CC      lib/ioremap.o

  CC      drivers/firmware/efi/capsule.o

  CC      drivers/gpio/gpiolib-acpi.o

  CC      lib/is_single_threaded.o

  CC      drivers/firmware/efi/memmap.o

  CC      net/core/net-traces.o

  CC      drivers/gpu/vga/vgaarb.o

  CC      lib/klist.o

  CC      net/ipv6/ip6_fib.o

  CC      net/ipv4/tcp_input.o

  CC      drivers/firmware/efi/efivars.o

  CC      kernel/audit_watch.o

  CC      drivers/gpio/gpio-lynxpoint.o

  CC      lib/kobject_uevent.o

  CC      drivers/gpu/vga/vga_switcheroo.o

  CC      drivers/firmware/efi/esrt.o

  CC      kernel/audit_fsnotify.o

  CC      drivers/gpio/gpio-rc5t583.o

  CC      lib/nmi_backtrace.o

  CC      drivers/firmware/efi/cper.o

  CC      net/core/netprio_cgroup.o

  AR      drivers/gpu/vga/built-in.o

  AR      drivers/gpu/built-in.o

  CC      net/core/netclassid_cgroup.o

  CC      net/ipv6/ipv6_sockglue.o

  CC      drivers/gpio/gpio-palmas.o

  CC      kernel/audit_tree.o

  CC      lib/radix-tree.o

  CC      drivers/gpio/gpio-tps6586x.o

  CC      drivers/firmware/efi/runtime-map.o

  CC      net/ncsi/ncsi-cmd.o

  CC      net/core/lwtunnel.o

  CC      net/ipv6/ndisc.o

  CC      drivers/gpio/gpio-tps65910.o

  CC      kernel/kprobes.o

  CC      drivers/firmware/efi/runtime-wrappers.o

  CC      net/ipv4/tcp_output.o

  CC      lib/ratelimit.o

  CC      net/ncsi/ncsi-rsp.o

  CC      drivers/gpio/gpio-tps68470.o

  CC      net/core/lwt_bpf.o

  CC      lib/seq_buf.o

  CC      drivers/firmware/efi/libstub/efi-stub-helper.o

  AR      drivers/gpio/built-in.o

  CC      drivers/firmware/efi/dev-path-parser.o

  CC      net/ipv6/udp.o

  CC      lib/vsprintf.o

  CC      kernel/hung_task.o

  CC      net/ncsi/ncsi-aen.o

  CC      net/core/dst_cache.o

  CC      drivers/firmware/efi/secureboot.o

  CC      drivers/firmware/efi/libstub/gop.o

  CC      kernel/watchdog.o

  CC      net/ipv4/tcp_timer.o

  AR      net/core/built-in.o

  CC      drivers/firmware/efi/libstub/secureboot.o

  CC      drivers/firmware/efi/libstub/tpm.o

  CC      net/ncsi/ncsi-manage.o

  CC      drivers/firmware/efi/apple-properties.o

  CC      kernel/watchdog_hld.o

  CC      net/ipv6/udplite.o

  AR      lib/lib.a

  CC      net/ipv4/tcp_ipv4.o

  AR      drivers/firmware/efi/libstub/lib.a

  EXPORTS drivers/firmware/efi/libstub/lib-ksyms.o

  CC      kernel/seccomp.o

  AR      drivers/firmware/efi/libstub/built-in.o

  AR      drivers/firmware/efi/built-in.o

  AR      drivers/firmware/built-in.o

  CC      drivers/hwmon/hwmon.o

  CC      net/ipv6/raw.o

  AR      net/ncsi/built-in.o

  CC      net/ipv6/icmp.o

  CC      net/netfilter/core.o

  EXPORTS lib/lib-ksyms.o

  AR      lib/built-in.o

  CC      net/ipv6/mcast.o

  CC      kernel/relay.o

  CC      net/ipv6/reassembly.o

  AR      drivers/hwmon/built-in.o

  CC      drivers/hwspinlock/hwspinlock_core.o

  CC      net/netfilter/nf_log.o

  CC      kernel/utsname_sysctl.o

  CC      net/ipv4/tcp_minisocks.o

  AR      drivers/hwspinlock/built-in.o

  CC      kernel/delayacct.o

  CC      drivers/i2c/i2c-boardinfo.o

  CC      net/netlabel/netlabel_user.o

  CC      net/ipv6/tcp_ipv6.o

  CC      net/packet/af_packet.o

  CC      net/netlink/af_netlink.o

  CC      net/ipv4/tcp_cong.o

  CC      kernel/taskstats.o

  CC      net/netfilter/nf_queue.o

  CC      drivers/i2c/i2c-core-base.o

  CC      net/netlabel/netlabel_kapi.o

  CC      kernel/tsacct.o

  CC      net/ipv4/tcp_metrics.o

  CC      net/netfilter/nf_sockopt.o

  CC      kernel/tracepoint.o

  CC      net/ipv6/ping.o

  CC      drivers/i2c/i2c-core-smbus.o

  CC      net/netlink/genetlink.o

  CC      net/netlabel/netlabel_domainhash.o

  AR      net/netfilter/netfilter.o

  AR      net/netfilter/built-in.o

  CC      kernel/elfcore.o

  CC      net/ipv4/tcp_fastopen.o

  AR      net/packet/built-in.o

  CC      drivers/idle/intel_idle.o

  CC      drivers/input/input.o

  CC      net/ipv6/exthdrs.o

  CC      kernel/irq_work.o

  AR      net/netlink/built-in.o

  CC      drivers/input/input-compat.o

  CC      net/ipv4/tcp_rate.o

  AR      drivers/idle/built-in.o

  CC      net/ipv4/tcp_recovery.o

  CC      net/netlabel/netlabel_addrlist.o

  CC      kernel/crash_dump.o

  CC      drivers/i2c/i2c-core-acpi.o

  CC      drivers/i2c/i2c-dev.o

  CC      kernel/jump_label.o

  CC      net/ipv4/tcp_ulp.o

  CC      net/netlabel/netlabel_mgmt.o

  CC      drivers/input/input-mt.o

  CC      net/ipv6/datagram.o

  CC      net/rfkill/core.o

  CC      net/ipv6/ip6_flowlabel.o

  CC      kernel/memremap.o

  CC      drivers/input/ff-core.o

  CC      net/ipv4/tcp_offload.o

  CC      drivers/i2c/busses/i2c-designware-common.o

  CC      net/netlabel/netlabel_unlabeled.o

  CC      net/rfkill/input.o

  CC      drivers/i2c/busses/i2c-designware-master.o

  CC      net/ipv6/inet6_connection_sock.o

  CC      drivers/input/mousedev.o

  AR      kernel/built-in.o

  CC      net/ipv6/udp_offload.o

  AR      net/rfkill/rfkill.o

  AR      net/rfkill/built-in.o

  CC      net/ipv6/seg6.o

  CC      net/ipv4/datagram.o

  CC      net/sched/sch_generic.o

  CC      drivers/i2c/busses/i2c-designware-platdrv.o

  CC      drivers/i2c/busses/i2c-designware-baytrail.o

  CC      net/netlabel/netlabel_cipso_v4.o

  CC      drivers/input/evdev.o

  CC      net/ipv4/raw.o

  CC      drivers/i2c/busses/i2c-amd-pci-mp2.o

  CC      drivers/i2c/busses/i2c-amd-platdrv.o

  CC      net/ipv6/fib6_notifier.o

  CC      drivers/input/keyboard/atkbd.o

  CC      net/sched/sch_mq.o

  CC      net/ipv6/sysctl_net_ipv6.o

  CC      net/netlabel/netlabel_calipso.o

  CC      net/sched/sch_api.o

  CC      net/sched/sch_blackhole.o

  AR      drivers/i2c/busses/i2c-designware-core.o

  AR      drivers/i2c/busses/i2c-designware-platform.o

  CC      net/ipv6/ip6mr.o

  AR      drivers/i2c/busses/built-in.o

  AR      drivers/i2c/i2c-core.o

  AR      drivers/i2c/built-in.o

  AR      drivers/input/keyboard/built-in.o

  CC      net/ipv4/udp.o

  CC      drivers/input/misc/uinput.o

  CC      net/sched/cls_api.o

  AR      net/netlabel/built-in.o

  CC      net/sched/act_api.o

  CC      net/strparser/strparser.o

  CC      net/switchdev/switchdev.o

  AR      drivers/input/misc/built-in.o

  CC      net/ipv6/netfilter.o

  AR      net/strparser/built-in.o

  CC      net/sched/sch_fifo.o

  CC      drivers/input/touchscreen/of_touchscreen.o

  AR      net/switchdev/built-in.o

  CC      drivers/input/touchscreen/elants_i2c.o

  CC      drivers/input/serio/serio.o

  CC      net/unix/af_unix.o

  CC      drivers/iommu/iommu.o

  CC      net/ipv4/udplite.o

  CC      net/unix/garbage.o

  CC      net/sched/ematch.o

  CC      net/ipv6/fib6_rules.o

  AR      drivers/input/touchscreen/built-in.o

  AR      drivers/input/input-core.o

  AR      drivers/input/built-in.o

  CC      net/unix/sysctl_net_unix.o

  CC      drivers/input/serio/i8042.o

  CC      net/ipv4/udp_offload.o

  CC      drivers/input/serio/libps2.o

  AR      net/sched/built-in.o

  CC      net/ipv4/arp.o

  CC      drivers/iommu/iommu-traces.o

  CC      net/ipv6/proc.o

  CC      net/ipv6/syncookies.o

  AR      net/unix/unix.o

  AR      net/unix/built-in.o

  CC      drivers/iommu/iommu-sysfs.o

  CC      net/compat.o

  CC      net/ipv6/calipso.o

  CC      net/ipv4/icmp.o

  AR      drivers/input/serio/built-in.o

  CC      net/ipv6/seg6_iptunnel.o

  CC      net/ipv6/seg6_local.o

  CC      drivers/iommu/iova.o

  CC      net/ipv4/devinet.o

  CC      drivers/leds/led-core.o

  CC      drivers/iommu/amd_iommu.o

  CC      net/ipv6/seg6_hmac.o

  CC      net/ipv4/af_inet.o

  CC      net/ipv4/igmp.o

  CC      drivers/lightnvm/core.o

  CC      net/ipv6/addrconf_core.o

  CC      drivers/leds/led-class.o

  CC      drivers/leds/led-triggers.o

  CC      net/ipv6/exthdrs_core.o

  CC      drivers/leds/trigger/ledtrig-disk.o

  CC      drivers/leds/trigger/ledtrig-cpu.o

  AR      drivers/lightnvm/built-in.o

  CC      net/ipv6/ip6_checksum.o

  CC      net/ipv6/ip6_icmp.o

  CC      net/sysctl_net.o

  CC      net/ipv4/fib_frontend.o

  CC      drivers/leds/trigger/ledtrig-panic.o

  CC      drivers/iommu/amd_iommu_init.o

  CC      net/ipv4/fib_semantics.o

  CC      drivers/mailbox/mailbox.o

  AR      drivers/leds/trigger/built-in.o

  AR      drivers/leds/built-in.o

  CC      net/ipv6/output_core.o

  CC      drivers/iommu/dmar.o

  CC      drivers/iommu/intel-iommu.o

  CC      net/ipv6/protocol.o

  CC      drivers/mailbox/pcc.o

  CC      net/ipv4/fib_trie.o

  CC      drivers/iommu/intel-svm.o

  AR      drivers/mailbox/built-in.o

  CC      net/ipv6/ip6_offload.o

  CC      net/ipv6/tcpv6_offload.o

  CC      drivers/iommu/intel_irq_remapping.o

  CC      net/ipv6/exthdrs_offload.o

  CC      drivers/md/md.o

  CC      drivers/iommu/irq_remapping.o

  CC      net/ipv6/inet6_hashtables.o

  CC      net/ipv4/fib_notifier.o

  CC      drivers/md/md-bitmap.o

  AR      drivers/iommu/built-in.o

  CC      net/ipv6/mcast_snoop.o

  CC      net/ipv4/inet_fragment.o

  AR      net/ipv6/ipv6.o

  AR      net/ipv6/built-in.o

  CC      drivers/misc/sram.o

  CC      net/ipv4/ping.o

  CC      drivers/md/dm-uevent.o

  CC      drivers/mmc/core/core.o

  AR      drivers/misc/built-in.o

  CC      net/ipv4/ip_tunnel_core.o

  CC      drivers/mmc/core/bus.o

  CC      drivers/net/Space.o

  CC      drivers/mfd/88pm860x-core.o

  CC      drivers/mmc/core/host.o

  CC      drivers/md/dm.o

  CC      net/ipv4/gre_offload.o

  CC      drivers/net/loopback.o

  CC      drivers/mfd/88pm860x-i2c.o

  CC      drivers/nvdimm/core.o

  CC      net/ipv4/sysctl_net_ipv4.o

  CC      drivers/mmc/core/mmc.o

  CC      drivers/nvdimm/bus.o

  CC      drivers/mfd/htc-i2cpld.o

  CC      drivers/md/dm-table.o

  CC      net/ipv4/proc.o

  CC      drivers/mfd/wm8400-core.o

  CC      drivers/nvdimm/dimm_devs.o

  CC      drivers/nvdimm/dimm.o

  CC      drivers/mmc/core/mmc_ops.o

  CC      drivers/md/dm-target.o

  CC      net/ipv4/fib_rules.o

  CC      drivers/nvdimm/region_devs.o

  CC      drivers/mmc/core/sd.o

  CC      drivers/md/dm-linear.o

  CC      drivers/mfd/wm831x-core.o

  CC      drivers/nvdimm/region.o

  CC      net/ipv4/ipmr.o

  CC      drivers/md/dm-stripe.o

  CC      drivers/md/dm-ioctl.o

  CC      drivers/mmc/core/sd_ops.o

  CC      drivers/mfd/wm831x-irq.o

  CC      drivers/nvdimm/namespace_devs.o

  CC      drivers/md/dm-io.o

  CC      drivers/md/dm-kcopyd.o

  CC      drivers/mmc/core/sdio.o

  CC      drivers/mfd/wm831x-otp.o

  CC      drivers/mmc/core/sdio_ops.o

  CC      drivers/mmc/core/sdio_bus.o

  CC      drivers/mfd/wm831x-auxadc.o

  CC      drivers/mfd/wm831x-i2c.o

  CC      net/ipv4/syncookies.o

  CC      drivers/md/dm-sysfs.o

  CC      drivers/net/phy/mdio-boardinfo.o

  CC      drivers/nvdimm/label.o

  CC      drivers/net/ppp/ppp_generic.o

  CC      drivers/mmc/core/sdio_cis.o

  CC      drivers/mfd/wm831x-spi.o

  CC      drivers/net/phy/phy.o

  CC      drivers/net/slip/slhc.o

  CC      drivers/md/dm-stats.o

  CC      drivers/mmc/core/sdio_io.o

  CC      net/ipv4/netfilter.o

  CC      drivers/mfd/wm8350-core.o

  CC      drivers/nvdimm/badrange.o

  CC      drivers/mmc/core/sdio_irq.o

  CC      drivers/net/phy/phy-c45.o

  AR      drivers/net/slip/built-in.o

  CC      drivers/mmc/core/slot-gpio.o

  CC      drivers/nvdimm/claim.o

  CC      drivers/md/dm-rq.o

  CC      net/ipv4/tcp_cubic.o

  CC      drivers/mfd/wm8350-regmap.o

  AR      drivers/net/ppp/built-in.o

  CC      net/ipv4/cipso_ipv4.o

  CC      drivers/net/phy/phy-core.o

  CC      drivers/nvdimm/btt_devs.o

  CC      drivers/mmc/core/debugfs.o

  CC      drivers/mfd/wm8350-gpio.o

  CC      drivers/md/dm-builtin.o

  CC      drivers/net/phy/phy_device.o

  CC      drivers/net/phy/mdio_bus.o

  AR      drivers/mmc/core/mmc_core.o

  AR      drivers/mmc/core/built-in.o

  AR      drivers/mmc/built-in.o

  CC      drivers/nvdimm/pfn_devs.o

  CC      drivers/nvdimm/dax_devs.o

  CC      drivers/mfd/wm8350-irq.o

  AR      drivers/md/md-mod.o

  AR      drivers/md/dm-mod.o

  AR      drivers/md/built-in.o

  AR      net/ipv4/built-in.o

  CC      drivers/nvdimm/e820.o

  AR      net/built-in.o

  CC      drivers/net/phy/mdio_device.o

  CC      drivers/net/phy/swphy.o

  AR      drivers/nvdimm/libnvdimm.o

  CC      drivers/nvmem/core.o

  CC      drivers/net/phy/phy_led_triggers.o

  CC      drivers/mfd/wm8350-i2c.o

  AR      drivers/nvdimm/nd_e820.o

  AR      drivers/nvdimm/built-in.o

  CC      drivers/net/phy/fixed_phy.o

  CC      drivers/opp/core.o

  CC      drivers/opp/cpu.o

  AR      drivers/nvmem/nvmem_core.o

  AR      drivers/nvmem/built-in.o

  CC      drivers/opp/debugfs.o

  CC      drivers/mfd/tps65910.o

  CC      drivers/pci/dwc/pcie-designware.o

  AR      drivers/net/phy/libphy.o

  CC      drivers/pci/endpoint/pci-ep-cfs.o

  AR      drivers/net/phy/built-in.o

  CC      drivers/net/tun.o

  CC      drivers/pci/access.o

  CC      drivers/pci/bus.o

  CC      drivers/pci/probe.o

  CC      drivers/mfd/tps65912-core.o

  CC      drivers/pci/dwc/pcie-designware-host.o

  CC      drivers/pci/endpoint/pci-epc-core.o

  AR      drivers/opp/built-in.o

  CC      drivers/pci/endpoint/pci-epf-core.o

  CC      drivers/pci/host-bridge.o

  CC      drivers/mfd/tps65912-i2c.o

  CC      drivers/net/xen-netfront.o

  CC      drivers/pci/dwc/pcie-designware-plat.o

  CC      drivers/mfd/tps65912-spi.o

  CC      drivers/pci/endpoint/pci-epc-mem.o

  CC      drivers/pci/remove.o

  CC      drivers/mfd/tps68470.o

  CC      drivers/phy/phy-core.o

  CC      drivers/mfd/tps80031.o

  AR      drivers/pci/dwc/built-in.o

  CC      drivers/pci/pci.o

  CC      drivers/pci/pci-driver.o

  AR      drivers/pci/endpoint/built-in.o

  CC      drivers/mfd/twl-core.o

  CC      drivers/pci/search.o

  CC      drivers/pci/pci-sysfs.o

  CC      drivers/pinctrl/core.o

  AR      drivers/net/built-in.o

  CC      drivers/mfd/twl4030-irq.o

  CC      drivers/mfd/twl6030-irq.o

  CC      drivers/pnp/core.o

  CC      drivers/pci/rom.o

  AR      drivers/phy/built-in.o

  CC      drivers/platform/x86/intel_pmc_core.o

  CC      drivers/pci/setup-res.o

  CC      drivers/pnp/card.o

  CC      drivers/mfd/twl4030-audio.o

  CC      drivers/pnp/driver.o

  CC      drivers/pinctrl/pinctrl-utils.o

  CC      drivers/platform/x86/pmc_atom.o

  CC      drivers/pci/irq.o

  CC      drivers/pinctrl/pinmux.o

  CC      drivers/pci/vpd.o

  CC      drivers/mfd/twl6040.o

  CC      drivers/pinctrl/pinconf.o

  CC      drivers/pnp/resource.o

  CC      drivers/power/reset/restart-poweroff.o

  AR      drivers/platform/x86/built-in.o

  CC      drivers/pnp/manager.o

  AR      drivers/platform/built-in.o

  CC      drivers/pci/setup-bus.o

  CC      drivers/mfd/mfd-core.o

  CC      drivers/pinctrl/pinconf-generic.o

  CC      drivers/powercap/powercap_sys.o

  AR      drivers/power/reset/built-in.o

  CC      drivers/mfd/ezx-pcap.o

  CC      drivers/pnp/support.o

  CC      drivers/power/supply/power_supply_core.o

  CC      drivers/pinctrl/pinctrl-amd.o

  CC      drivers/pwm/core.o

  CC      drivers/pwm/sysfs.o

  CC      drivers/pnp/interface.o

  CC      drivers/pci/vc.o

  CC      drivers/pinctrl/pinctrl-sx150x.o

  AR      drivers/powercap/built-in.o

  CC      drivers/pwm/pwm-crc.o

  CC      drivers/mfd/smsc-ece1099.o

  CC      drivers/power/supply/power_supply_sysfs.o

  CC      drivers/pnp/quirks.o

  CC      drivers/pnp/system.o

  CC      drivers/pci/mmap.o

  CC      drivers/pnp/pnpacpi/core.o

  AR      drivers/pwm/built-in.o

  CC      drivers/mfd/da903x.o

  CC      drivers/power/supply/power_supply_leds.o

  CC      drivers/pci/setup-irq.o

  CC      drivers/pnp/pnpacpi/rsparser.o

  CC      drivers/mfd/da9052-irq.o

  CC      drivers/pci/proc.o

  CC      drivers/rapidio/rio.o

  CC      drivers/pinctrl/intel/pinctrl-baytrail.o

  CC      drivers/pinctrl/intel/pinctrl-cherryview.o

  AR      drivers/pnp/pnpacpi/pnp.o

  CC      drivers/mfd/da9052-core.o

  CC      drivers/rapidio/rio-access.o

  AR      drivers/pnp/pnpacpi/built-in.o

  CC      drivers/power/supply/charger-manager.o

  AR      drivers/pnp/pnp.o

  AR      drivers/pnp/built-in.o

  CC      drivers/pci/slot.o

  CC      drivers/pci/quirks.o

  CC      drivers/ras/ras.o

  CC      drivers/mfd/da9052-spi.o

  CC      drivers/pinctrl/intel/pinctrl-intel.o

  CC      drivers/rapidio/rio-driver.o

  CC      drivers/regulator/core.o

  CC      drivers/rapidio/rio-sysfs.o

  AR      drivers/power/supply/power_supply.o

  AR      drivers/power/supply/built-in.o

  AR      drivers/power/built-in.o

  CC      drivers/mfd/da9052-i2c.o

  CC      drivers/mfd/lp8788.o

  CC      drivers/ras/debugfs.o

  CC      drivers/regulator/dummy.o

  CC      drivers/regulator/fixed-helper.o

  CC      drivers/pinctrl/intel/pinctrl-cannonlake.o

  CC      drivers/mfd/lp8788-irq.o

  AR      drivers/rapidio/rapidio.o

  AR      drivers/rapidio/built-in.o

  CC      drivers/ras/cec.o

  CC      drivers/pci/pcie/aspm.o

  CC      drivers/pci/hotplug/pci_hotplug_core.o

  CC      drivers/mfd/da9055-core.o

  CC      drivers/mfd/da9055-i2c.o

  AR      drivers/pinctrl/intel/built-in.o

  AR      drivers/pinctrl/built-in.o

  CC      drivers/mfd/da9063-core.o

  CC      drivers/reset/core.o

  AR      drivers/ras/built-in.o

  CC      drivers/pci/msi.o

  CC      drivers/mfd/da9063-irq.o

  CC      drivers/regulator/helpers.o

  CC      drivers/rtc/rtc-lib.o

  CC      drivers/pci/pcie/portdrv_core.o

  CC      drivers/pci/hotplug/cpci_hotplug_core.o

  CC      drivers/pci/hotplug/cpci_hotplug_pci.o

  AR      drivers/reset/built-in.o

  CC      drivers/pci/hotplug/acpi_pcihp.o

  CC      drivers/rtc/hctosys.o

  CC      drivers/regulator/devres.o

  CC      drivers/mfd/da9063-i2c.o

  CC      drivers/pci/pcie/portdrv_pci.o

  CC      drivers/pci/ats.o

  CC      drivers/mfd/max14577.o

  CC      drivers/mfd/max77693.o

  CC      drivers/pci/hotplug/pciehp_core.o

  CC      drivers/rtc/systohc.o

  CC      drivers/pci/pcie/portdrv_bus.o

  AR      drivers/regulator/built-in.o

  CC      drivers/pci/iov.o

  CC      drivers/mfd/max77843.o

  CC      drivers/rtc/class.o

  CC      drivers/pci/pci-acpi.o

  CC      drivers/pci/hotplug/pciehp_ctrl.o

  CC      drivers/sfi/sfi_acpi.o

  CC      drivers/pci/pcie/portdrv_acpi.o

  CC      drivers/scsi/scsi.o

  CC      drivers/rtc/interface.o

  CC      drivers/pci/hotplug/pciehp_pci.o

  CC      drivers/mfd/max8925-core.o

  CC      drivers/sfi/sfi_core.o

  CC      drivers/pci/pci-label.o

  CC      drivers/pci/hotplug/pciehp_hpc.o

  CC      drivers/pci/pcie/aer/aerdrv_errprint.o

  CC      drivers/pci/pcie/pme.o

  CC      drivers/rtc/nvmem.o

  CC      drivers/mfd/max8925-i2c.o

  AR      drivers/sfi/built-in.o

  CC      drivers/pci/hotplug/acpiphp_core.o

  CC      drivers/pci/hotplug/acpiphp_glue.o

  CC      drivers/scsi/hosts.o

  AR      drivers/pci/hotplug/pci_hotplug.o

  CC      drivers/scsi/scsi_ioctl.o

  CC      drivers/pci/pcie/aer/aerdrv_core.o

  CC      drivers/mfd/max8997.o

  CC      drivers/rtc/rtc-dev.o

  CC      drivers/mfd/max8997-irq.o

  AR      drivers/pci/hotplug/pciehp.o

  CC      drivers/scsi/scsicam.o

  CC      drivers/pci/pcie/pcie-dpc.o

  CC      drivers/scsi/scsi_error.o

  CC      drivers/rtc/rtc-proc.o

  CC      drivers/pci/pcie/aer/aerdrv.o

  AR      drivers/pci/hotplug/acpiphp.o

  AR      drivers/pci/hotplug/built-in.o

  CC      drivers/mfd/max8998.o

  CC      drivers/rtc/rtc-sysfs.o

  CC      drivers/pci/pcie/aer/aerdrv_acpi.o

  CC      drivers/pci/pcie/ptm.o

  CC      drivers/mfd/abx500-core.o

  CC      drivers/mfd/max8998-irq.o

  CC      drivers/mfd/ab3100-core.o

  CC      drivers/rtc/rtc-mc146818-lib.o

  AR      drivers/pci/pcie/pcieportdrv.o

  CC      drivers/scsi/scsi_lib.o

  CC      drivers/mfd/adp5520.o

  AR      drivers/pci/pcie/aer/aerdriver.o

  AR      drivers/pci/pcie/aer/built-in.o

  AR      drivers/pci/pcie/built-in.o

  AR      drivers/pci/built-in.o

  CC      drivers/mfd/tps6586x.o

  CC      drivers/scsi/constants.o

  CC      drivers/scsi/scsi_lib_dma.o

  CC      drivers/rtc/rtc-cmos.o

  CC      drivers/mfd/tps65090.o

  CC      drivers/scsi/scsi_scan.o

  CC      drivers/mfd/aat2870-core.o

  CC      drivers/mfd/palmas.o

  CC      drivers/mfd/rc5t583.o

  AR      drivers/rtc/rtc-core.o

  AR      drivers/rtc/built-in.o

  CC      drivers/scsi/scsi_sysfs.o

  CC      drivers/spi/spi.o

  CC      drivers/scsi/scsi_devinfo.o

  CC      drivers/mfd/rc5t583-irq.o

  CC      drivers/scsi/scsi_sysctl.o

  CC      drivers/scsi/scsi_proc.o

  CC      drivers/mfd/sec-core.o

  CC      drivers/thermal/thermal_core.o

  CC      drivers/scsi/scsi_debugfs.o

  CC      drivers/usb/common/common.o

  CC      drivers/mfd/sec-irq.o

  CC      drivers/staging/skein/skein_generic.o

  CC      drivers/tty/tty_io.o

  CC      drivers/scsi/scsi_trace.o

  CC      drivers/mfd/syscon.o

  CC      drivers/scsi/scsi_logging.o

  CC      drivers/usb/common/led.o

  AR      drivers/staging/skein/skein.o

  AR      drivers/spi/built-in.o

  CC      drivers/scsi/scsi_pm.o

  AR      drivers/usb/common/usb-common.o

  CC      drivers/mfd/as3711.o

  AR      drivers/usb/common/built-in.o

  CC      drivers/mfd/intel_soc_pmic_core.o

  AR      drivers/staging/skein/built-in.o

  CC      drivers/mfd/intel_soc_pmic_crc.o

  CC      drivers/usb/core/usb.o

  AR      drivers/staging/built-in.o

  CC      drivers/thermal/thermal_sysfs.o

  CC      drivers/thermal/thermal_helpers.o

  CC      drivers/tty/n_tty.o

  CC      drivers/scsi/scsi_dh.o

  CC      drivers/thermal/thermal_hwmon.o

  CC      drivers/thermal/fair_share.o

  CC      drivers/mfd/intel_soc_pmic_chtwc.o

  CC      drivers/tty/tty_ioctl.o

  CC      drivers/video/hdmi.o

  CC      drivers/tty/tty_ldisc.o

  CC      drivers/usb/core/hub.o

  CC      drivers/thermal/gov_bang_bang.o

  AR      drivers/mfd/88pm860x.o

  AR      drivers/mfd/wm831x.o

  AR      drivers/mfd/wm8350.o

  AR      drivers/mfd/da9055.o

  AR      drivers/mfd/da9063.o

  AR      drivers/mfd/max8925.o

  AR      drivers/mfd/intel-soc-pmic.o

  AR      drivers/mfd/built-in.o

  CC      drivers/scsi/sd.o

  CC      drivers/usb/core/hcd.o

  CC      drivers/usb/core/urb.o

  CC      drivers/thermal/step_wise.o

  CC      drivers/video/backlight/backlight.o

  CC      drivers/thermal/user_space.o

  CC      drivers/tty/tty_buffer.o

  CC      drivers/scsi/sd_dif.o

  CC      drivers/thermal/power_allocator.o

  CC      drivers/scsi/sd_zbc.o

  AR      drivers/video/backlight/built-in.o

  CC      drivers/tty/tty_port.o

  CC      drivers/thermal/devfreq_cooling.o

  CC      drivers/video/console/dummycon.o

  CC      drivers/usb/dwc2/core.o

  CC      drivers/scsi/sr.o

  CC      drivers/video/console/vgacon.o

  CC      drivers/scsi/sr_ioctl.o

  CC      drivers/usb/core/message.o

  CC      drivers/tty/tty_mutex.o

  AR      drivers/video/console/built-in.o

  CC      drivers/scsi/sr_vendor.o

  CC      drivers/usb/dwc2/core_intr.o

  CC      drivers/video/fbdev/core/fb_cmdline.o

  AR      drivers/thermal/thermal_sys.o

  AR      drivers/thermal/built-in.o

  CC      drivers/scsi/sg.o

  CC      drivers/tty/tty_ldsem.o

  CC      drivers/usb/core/driver.o

  CC      drivers/video/fbdev/core/fb_notify.o

  CC      drivers/usb/core/config.o

  CC      drivers/tty/tty_baudrate.o

  CC      drivers/usb/dwc2/platform.o

  CC      drivers/tty/tty_jobctrl.o

  CC      drivers/video/fbdev/core/fbmem.o

  CC      drivers/usb/core/file.o

  AR      drivers/scsi/scsi_mod.o

  CC      drivers/usb/core/buffer.o

  CC      drivers/usb/dwc2/params.o

  CC      drivers/video/fbdev/imsttfb.o

  AR      drivers/scsi/sd_mod.o

  CC      drivers/tty/n_null.o

  AR      drivers/scsi/sr_mod.o

  AR      drivers/scsi/built-in.o

  CC      drivers/usb/core/sysfs.o

  CC      drivers/video/fbdev/asiliantfb.o

  CC      drivers/virtio/virtio.o

  CC      drivers/usb/core/endpoint.o

  CC      drivers/usb/dwc2/hcd.o

  CC      drivers/tty/pty.o

  CC      drivers/video/fbdev/core/fbmon.o

  CC      drivers/tty/tty_audit.o

  CC      drivers/virtio/virtio_ring.o

  CC      drivers/video/fbdev/core/fbcmap.o

  CC      drivers/tty/sysrq.o

  CC      drivers/usb/core/devio.o

  CC      drivers/usb/core/notify.o

  CC      drivers/usb/core/generic.o

  CC      drivers/usb/core/quirks.o

  CC      drivers/video/fbdev/core/fbsysfs.o

  CC      drivers/usb/core/devices.o

  CC      drivers/tty/hvc/hvc_console.o

  CC      drivers/tty/hvc/hvc_irq.o

  CC      drivers/virtio/virtio_mmio.o

  CC      drivers/usb/dwc2/hcd_intr.o

  CC      drivers/usb/dwc2/hcd_queue.o

  CC      drivers/video/fbdev/vesafb.o

  CC      drivers/video/fbdev/core/modedb.o

  CC      drivers/usb/core/port.o

  CC      drivers/video/fbdev/efifb.o

  CC      drivers/tty/hvc/hvc_xen.o

  CC      drivers/virtio/virtio_pci_modern.o

  CC      drivers/virtio/virtio_pci_common.o

  CC      drivers/usb/dwc2/hcd_ddma.o

  CC      drivers/video/fbdev/core/fbcvt.o

  CC      drivers/usb/core/hcd-pci.o

  CC      drivers/video/fbdev/simplefb.o

  CC      drivers/usb/early/ehci-dbgp.o

  CC      drivers/virtio/virtio_pci_legacy.o

  AR      drivers/tty/hvc/built-in.o

  CC      drivers/video/fbdev/core/fb_defio.o

  CC      drivers/tty/serdev/core.o

  CC      drivers/usb/core/usb-acpi.o

  CC      drivers/video/fbdev/core/fbcon.o

  CC      drivers/usb/dwc2/debugfs.o

  AR      drivers/usb/early/built-in.o

  CC      drivers/usb/host/pci-quirks.o

  CC      drivers/video/fbdev/core/bitblit.o

  CC      drivers/virtio/virtio_balloon.o

  CC      drivers/usb/host/ehci-hcd.o

  AR      drivers/usb/dwc2/dwc2.o

  AR      drivers/usb/dwc2/built-in.o

  AR      drivers/usb/core/usbcore.o

  AR      drivers/usb/core/built-in.o

  CC      drivers/usb/host/ehci-pci.o

  CC      drivers/tty/serdev/serdev-ttyport.o

  CC      drivers/usb/host/ehci-platform.o

  AR      drivers/tty/serdev/serdev.o

  CC      drivers/usb/host/ohci-hcd.o

  AR      drivers/tty/serdev/built-in.o

  AR      drivers/virtio/virtio_pci.o

  AR      drivers/virtio/built-in.o

  CC      drivers/watchdog/watchdog_core.o

  CC      drivers/usb/host/ohci-pci.o

  CC      drivers/vme/vme.o

  CC      drivers/tty/serial/serial_core.o

  CC      drivers/video/fbdev/core/softcursor.o

  CC      drivers/xen/cpu_hotplug.o

  CC      drivers/tty/serial/earlycon.o

  CC      drivers/watchdog/watchdog_dev.o

  CC      drivers/xen/grant-table.o

  CC      drivers/video/fbdev/core/tileblit.o

  CC      drivers/xen/balloon.o

  CC      drivers/xen/manage.o

  CC      drivers/watchdog/watchdog_pretimeout.o

  AR      drivers/vme/built-in.o

  CC      drivers/usb/host/ohci-platform.o

  CC      drivers/video/fbdev/core/fbcon_rotate.o

  CC      drivers/watchdog/pretimeout_noop.o

  CC      drivers/tty/serial/8250/8250_core.o

  CC      drivers/tty/serial/8250/8250_pnp.o

  CC      drivers/usb/host/uhci-hcd.o

  CC      drivers/xen/preempt.o

  AR      drivers/watchdog/watchdog.o

  CC      drivers/tty/serial/8250/8250_port.o

  AR      drivers/watchdog/built-in.o

  CC      drivers/video/fbdev/core/fbcon_cw.o

  CC      drivers/usb/host/xhci.o

  CC      drivers/tty/vt/vt_ioctl.o

  CC      drivers/tty/vt/vc_screen.o

  CC      drivers/xen/time.o

  CC      drivers/video/fbdev/core/fbcon_ud.o

  CC      drivers/xen/events/events_base.o

  CC      drivers/xen/events/events_2l.o

  CC      drivers/tty/serial/max310x.o

  CC      drivers/tty/vt/selection.o

  CC      drivers/tty/serial/8250/8250_dma.o

  CC      drivers/video/fbdev/core/fbcon_ccw.o

  CC      drivers/tty/serial/8250/8250_fintek.o

  CC      drivers/usb/host/xhci-mem.o

  CC      drivers/tty/vt/keyboard.o

  CC      drivers/tty/vt/consolemap.o

  CC      drivers/xen/events/events_fifo.o

  CC      drivers/tty/serial/8250/8250_pci.o

  CC      drivers/video/fbdev/core/fbcon_dmi_quirks.o

  CC      drivers/tty/serial/sccnxp.o

  CC      drivers/usb/host/xhci-ring.o

  CC      drivers/usb/host/xhci-hub.o

  CC      drivers/tty/vt/vt.o

  AR      drivers/xen/events/events.o

  CC      drivers/video/fbdev/core/cfbfillrect.o

  AR      drivers/xen/events/built-in.o

  CC      drivers/tty/serial/8250/8250_early.o

  CC      drivers/xen/pci.o

  CC      drivers/xen/xenbus/xenbus_client.o

  AR      drivers/tty/serial/8250/8250.o

  CC      drivers/usb/host/xhci-dbg.o

  AR      drivers/tty/serial/8250/8250_base.o

  AR      drivers/tty/serial/8250/built-in.o

  CC      drivers/tty/serial/kgdb_nmi.o

  CC      drivers/video/fbdev/core/cfbcopyarea.o

  CC      drivers/tty/serial/kgdboc.o

  CC      drivers/usb/host/xhci-trace.o

  CC      drivers/video/fbdev/core/cfbimgblt.o

  AR      drivers/video/fbdev/core/fb.o

  CC      drivers/xen/xenbus/xenbus_comms.o

  CC      drivers/usb/host/xhci-dbgcap.o

  CC      drivers/usb/host/xhci-dbgtty.o

  CC      drivers/xen/xenbus/xenbus_xs.o

  AR      drivers/tty/serial/built-in.o

  CC      drivers/usb/host/xhci-debugfs.o

  AR      drivers/tty/vt/built-in.o

  AR      drivers/tty/built-in.o

  CC      drivers/xen/dbgp.o

  AR      drivers/video/fbdev/core/built-in.o

  AR      drivers/video/fbdev/built-in.o

  AR      drivers/video/built-in.o

  CC      drivers/xen/xenbus/xenbus_probe.o

  CC      drivers/usb/host/xhci-pci.o

  CC      drivers/xen/xenbus/xenbus_probe_backend.o

  CC      drivers/xen/acpi.o

  CC      drivers/xen/xenbus/xenbus_dev_frontend.o

  CC      drivers/xen/xen-acpi-pad.o

  CC      drivers/xen/pcpu.o

  AR      drivers/usb/host/xhci-hcd.o

  CC      drivers/xen/biomerge.o

  CC      drivers/xen/xen-balloon.o

  CC      drivers/xen/xenbus/xenbus_dev_backend.o

  AR      drivers/usb/host/built-in.o

  AR      drivers/usb/built-in.o

  CC      drivers/xen/xenbus/xenbus_probe_frontend.o

  CC      drivers/xen/xen-selfballoon.o

  CC      drivers/xen/sys-hypervisor.o

  CC      drivers/xen/platform-pci.o

  AR      drivers/xen/xenbus/xenbus.o

  CC      drivers/xen/swiotlb-xen.o

  CC      drivers/xen/mcelog.o

  CC      drivers/xen/xen-acpi-processor.o

  CC      drivers/xen/efi.o

  CC      drivers/xen/xlate_mmu.o

  AR      drivers/xen/xenbus/built-in.o

  AR      drivers/xen/built-in.o

  AR      drivers/built-in.o

  GEN     .version

  CHK     include/generated/compile.h

  UPD     include/generated/compile.h

  CC      init/version.o

  AR      init/built-in.o

  AR      built-in.o

  LD      vmlinux.o

  MODPOST vmlinux.o

  KSYM    .tmp_kallsyms1.o

  KSYM    .tmp_kallsyms2.o

  LD      vmlinux

  SORTEX  vmlinux

  SYSMAP  System.map

  CC      arch/x86/boot/version.o

  VOFFSET arch/x86/boot/compressed/../voffset.h

  OBJCOPY arch/x86/boot/compressed/vmlinux.bin

  RELOCS  arch/x86/boot/compressed/vmlinux.relocs

  CC      arch/x86/boot/compressed/kaslr.o

  CC      arch/x86/boot/compressed/eboot.o

  CC      arch/x86/boot/compressed/misc.o

  GZIP    arch/x86/boot/compressed/vmlinux.bin.gz

  MKPIGGY arch/x86/boot/compressed/piggy.S

  AS      arch/x86/boot/compressed/piggy.o

  DATAREL arch/x86/boot/compressed/vmlinux

  LD      arch/x86/boot/compressed/vmlinux

  ZOFFSET arch/x86/boot/zoffset.h

  OBJCOPY arch/x86/boot/vmlinux.bin

  AS      arch/x86/boot/header.o

  LD      arch/x86/boot/setup.elf

  OBJCOPY arch/x86/boot/setup.bin

  BUILD   arch/x86/boot/bzImage

Setup is 17212 bytes (padded to 17408 bytes).

System is 7751 kB

CRC 1d974670

Kernel: arch/x86/boot/bzImage is ready  (#17)

make[1]: Leaving directory '/usr/src/linux-source-4.15.0'

/usr/bin/make -j8 EXTRAVERSION=dandj2.15  ARCH=x86_64 \

		     modules

make[1]: Entering directory '/usr/src/linux-source-4.15.0'

  CHK     include/config/kernel.release

  CHK     include/generated/uapi/linux/version.h

  DESCEND  objtool

  CHK     include/generated/utsrelease.h

  CHK     scripts/mod/devicetable-offsets.h

  CHK     include/generated/bounds.h

  CHK     include/generated/timeconst.h

  CHK     include/generated/asm-offsets.h

  CALL    scripts/checksyscalls.sh

  CC [M]  arch/x86/crypto/glue_helper.o

  CC [M]  arch/x86/events/intel/rapl.o

  GZIP    kernel/config_data.gz

  CC [M]  arch/x86/crypto/aes_glue.o

  CC [M]  arch/x86/crypto/aesni-intel_glue.o

  CC [M]  arch/x86/crypto/fpu.o

  LD [M]  arch/x86/events/intel/intel-rapl-perf.o

  CHK     kernel/config_data.h

  UPD     kernel/config_data.h

  CC [M]  kernel/configs.o

  CC [M]  fs/autofs4/init.o

  CC [M]  crypto/pcbc.o

  CC [M]  drivers/acpi/acpi_video.o

  CC [M]  crypto/cryptd.o

  CC [M]  crypto/simd.o

  CC [M]  fs/autofs4/inode.o

  CC [M]  drivers/acpi/video_detect.o

  CC [M]  arch/x86/crypto/ghash-clmulni-intel_glue.o

  LD [M]  crypto/crypto_simd.o

  CC [M]  fs/autofs4/root.o

  CC [M]  arch/x86/crypto/crc32-pclmul_glue.o

  CC [M]  drivers/ata/ahci.o

  CC [M]  fs/autofs4/symlink.o

  CC [M]  fs/autofs4/waitq.o

  CC [M]  fs/autofs4/expire.o

  LD [M]  drivers/acpi/video.o

  CC [M]  fs/autofs4/dev-ioctl.o

  CC [M]  arch/x86/crypto/crct10dif-pclmul_glue.o

  CC [M]  drivers/ata/libahci.o

  LD [M]  arch/x86/crypto/aes-x86_64.o

  LD [M]  arch/x86/crypto/aesni-intel.o

  CC [M]  drivers/ata/acard-ahci.o

  LD [M]  arch/x86/crypto/ghash-clmulni-intel.o

  LD [M]  arch/x86/crypto/crc32-pclmul.o

  LD [M]  fs/autofs4/autofs4.o

  LD [M]  arch/x86/crypto/crct10dif-pclmul.o

  CC [M]  drivers/ata/ahci_platform.o

  CC [M]  drivers/ata/libahci_platform.o

  CC [M]  drivers/hid/hid-core.o

  CC [M]  drivers/gpu/drm/drm_crtc_helper.o

  CC [M]  drivers/hid/hid-input.o

  CC [M]  drivers/gpu/drm/drm_dp_helper.o

  CC [M]  drivers/ata/pata_acpi.o

  CC [M]  drivers/hid/hid-debug.o

  CC [M]  drivers/gpu/drm/drm_probe_helper.o

  CC [M]  drivers/hid/hidraw.o

  CC [M]  drivers/gpu/drm/drm_plane_helper.o

  CC [M]  drivers/hid/hid-generic.o

  CC [M]  drivers/hid/usbhid/hid-core.o

  CC [M]  drivers/i2c/algos/i2c-algo-bit.o

  CC [M]  drivers/i2c/busses/i2c-piix4.o

  CC [M]  drivers/gpu/drm/drm_dp_mst_topology.o

  CC [M]  drivers/gpu/drm/drm_atomic_helper.o

  CC [M]  drivers/gpu/drm/drm_kms_helper_common.o

  LD [M]  drivers/hid/hid.o

  CC [M]  drivers/gpu/drm/drm_dp_dual_mode_helper.o

  CC [M]  drivers/input/input-leds.o

  CC [M]  drivers/hid/usbhid/hid-quirks.o

  CC [M]  drivers/gpu/drm/drm_simple_kms_helper.o

  CC [M]  drivers/hid/usbhid/hiddev.o

  CC [M]  drivers/gpu/drm/drm_modeset_helper.o

  CC [M]  drivers/gpu/drm/drm_scdc_helper.o

  CC [M]  drivers/gpu/drm/drm_gem_framebuffer_helper.o

  CC [M]  drivers/input/joydev.o

  CC [M]  drivers/input/serio/serio_raw.o

  CC [M]  drivers/gpu/drm/bridge/panel.o

  CC [M]  drivers/gpu/drm/drm_fb_helper.o

  CC [M]  drivers/hid/usbhid/hid-pidff.o

  CC [M]  drivers/gpu/drm/drm_dp_aux_dev.o

  CC [M]  drivers/gpu/drm/drm_auth.o

  CC [M]  drivers/gpu/drm/drm_bufs.o

  CC [M]  drivers/input/mouse/psmouse-base.o

  CC [M]  drivers/input/mouse/synaptics.o

  CC [M]  drivers/gpu/drm/drm_cache.o

  CC [M]  drivers/input/mouse/focaltech.o

  LD [M]  drivers/hid/usbhid/usbhid.o

  CC [M]  drivers/input/mouse/alps.o

  CC [M]  drivers/input/mouse/byd.o

  CC [M]  drivers/input/mouse/elantech.o

  CC [M]  drivers/input/mouse/logips2pp.o

  CC [M]  drivers/input/mouse/lifebook.o

  CC [M]  drivers/input/mouse/sentelic.o

  CC [M]  drivers/gpu/drm/drm_context.o

  CC [M]  drivers/input/mouse/trackpoint.o

  CC [M]  drivers/gpu/drm/drm_dma.o

  CC [M]  drivers/gpu/drm/drm_file.o

  CC [M]  drivers/gpu/drm/drm_gem.o

  CC [M]  drivers/gpu/drm/drm_ioctl.o

  CC [M]  drivers/input/mouse/touchkit_ps2.o

  CC [M]  drivers/input/mouse/cypress_ps2.o

  CC [M]  drivers/gpu/drm/drm_irq.o

  CC [M]  drivers/input/mouse/vmmouse.o

  CC [M]  drivers/gpu/drm/drm_lock.o

  CC [M]  drivers/gpu/drm/drm_memory.o

  CC [M]  drivers/input/mouse/psmouse-smbus.o

  CC [M]  drivers/gpu/drm/drm_drv.o

  CC [M]  drivers/macintosh/mac_hid.o

  CC [M]  drivers/gpu/drm/drm_scatter.o

  CC [M]  drivers/gpu/drm/drm_pci.o

  CC [M]  drivers/gpu/drm/drm_sysfs.o

  LD [M]  drivers/input/mouse/psmouse.o

  CC [M]  drivers/gpu/drm/drm_hashtab.o

  CC [M]  drivers/gpu/drm/drm_mm.o

  CC [M]  drivers/gpu/drm/drm_crtc.o

  CC [M]  drivers/gpu/drm/drm_fourcc.o

  CC [M]  drivers/gpu/drm/drm_modes.o

  CC [M]  drivers/net/ethernet/intel/e1000/e1000_main.o

  CC [M]  drivers/gpu/drm/drm_edid.o

  CC [M]  drivers/gpu/drm/drm_info.o

  CC [M]  drivers/net/ethernet/intel/e1000/e1000_hw.o

  CC [M]  drivers/gpu/drm/drm_encoder_slave.o

  CC [M]  drivers/gpu/drm/drm_trace_points.o

  CC [M]  drivers/net/ethernet/intel/e1000/e1000_ethtool.o

  CC [M]  drivers/net/ethernet/intel/e1000/e1000_param.o

  CC [M]  drivers/gpu/drm/drm_prime.o

  CC [M]  drivers/gpu/drm/drm_rect.o

  CC [M]  drivers/gpu/drm/drm_vma_manager.o

  CC [M]  drivers/gpu/drm/drm_flip_work.o

  CC [M]  drivers/gpu/drm/drm_modeset_lock.o

  CC [M]  drivers/gpu/drm/drm_atomic.o

  CC [M]  drivers/gpu/drm/drm_bridge.o

  CC [M]  drivers/gpu/drm/drm_framebuffer.o

  CC [M]  drivers/gpu/drm/drm_connector.o

  CC [M]  drivers/gpu/drm/drm_blend.o

  CC [M]  drivers/gpu/drm/drm_encoder.o

  CC [M]  drivers/gpu/drm/drm_mode_object.o

  CC [M]  drivers/gpu/drm/drm_property.o

  LD [M]  drivers/net/ethernet/intel/e1000/e1000.o

  CC [M]  drivers/gpu/drm/drm_plane.o

  CC [M]  drivers/gpu/drm/drm_color_mgmt.o

  CC [M]  drivers/gpu/drm/drm_print.o

  CC [M]  drivers/video/fbdev/core/sysfillrect.o

  CC [M]  drivers/video/fbdev/core/syscopyarea.o

  CC [M]  drivers/xen/tmem.o

  CC [M]  drivers/video/fbdev/core/sysimgblt.o

  CC [M]  drivers/video/fbdev/core/fb_sys_fops.o

  CC [M]  drivers/gpu/drm/drm_dumb_buffers.o

  CC [M]  drivers/xen/privcmd.o

  CC [M]  drivers/gpu/drm/drm_mode_config.o

  CC [M]  drivers/gpu/drm/drm_vblank.o

  CC [M]  drivers/gpu/drm/drm_syncobj.o

  CC [M]  drivers/gpu/drm/drm_lease.o

  CC [M]  drivers/gpu/drm/drm_ioc32.o

  CC [M]  drivers/gpu/drm/ati_pcigart.o

  CC [M]  drivers/gpu/drm/drm_panel.o

  CC [M]  drivers/gpu/drm/drm_agpsupport.o

  LD [M]  drivers/xen/xen-privcmd.o

  CC [M]  drivers/gpu/drm/drm_debugfs.o

  CC [M]  drivers/gpu/drm/drm_debugfs_crc.o

  CC [M]  drivers/gpu/drm/drm_edid_load.o

  CC [M]  drivers/gpu/drm/ttm/ttm_memory.o

  CC [M]  drivers/gpu/drm/ttm/ttm_tt.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_drv.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.o

  CC [M]  drivers/gpu/drm/ttm/ttm_bo.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_gmr.o

  LD [M]  drivers/gpu/drm/drm_kms_helper.o

  CC [M]  drivers/gpu/drm/ttm/ttm_bo_util.o

  CC [M]  drivers/gpu/drm/ttm/ttm_bo_vm.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_kms.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_drm_bus.o

  LD [M]  drivers/gpu/drm/drm.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_gem.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_fb.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_display.o

  CC [M]  drivers/gpu/drm/ttm/ttm_module.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_vq.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_ttm.o

  CC [M]  drivers/gpu/drm/ttm/ttm_object.o

  CC [M]  drivers/gpu/drm/ttm/ttm_lock.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_kms.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_fence.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_drv.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_object.o

  CC [M]  drivers/gpu/drm/ttm/ttm_execbuf_util.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_debugfs.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_plane.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_ioctl.o

  CC [M]  drivers/gpu/drm/ttm/ttm_page_alloc.o

  CC [M]  drivers/gpu/drm/virtio/virtgpu_prime.o

  CC [M]  drivers/gpu/drm/ttm/ttm_bo_manager.o

  CC [M]  drivers/gpu/drm/ttm/ttm_page_alloc_dma.o

  CC [M]  drivers/gpu/drm/ttm/ttm_agp_backend.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_fb.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_resource.o

  LD [M]  drivers/gpu/drm/virtio/virtio-gpu.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_buffer.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_fifo.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_irq.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_ldu.o

  LD [M]  drivers/gpu/drm/ttm/ttm.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_ttm_glue.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_marker.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_overlay.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_gmrid_manager.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_fence.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_dmabuf.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_scrn.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_context.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_surface.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_prime.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_mob.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_shader.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_cmdbuf_res.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_cmdbuf.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_stdu.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_cotable.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_so.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_binding.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_msg.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_simple_resource.o

  CC [M]  drivers/gpu/drm/vmwgfx/vmwgfx_va.o

  LD [M]  drivers/gpu/drm/vmwgfx/vmwgfx.o

  Building modules, stage 2.

  MODPOST 41 modules

  CC      arch/x86/crypto/aes-x86_64.mod.o

  CC      arch/x86/crypto/aesni-intel.mod.o

  CC      arch/x86/crypto/crct10dif-pclmul.mod.o

  CC      arch/x86/crypto/crc32-pclmul.mod.o

  CC      arch/x86/crypto/glue_helper.mod.o

  CC      arch/x86/crypto/ghash-clmulni-intel.mod.o

  CC      arch/x86/events/intel/intel-rapl-perf.mod.o

  CC      crypto/cryptd.mod.o

  CC      crypto/crypto_simd.mod.o

  CC      crypto/pcbc.mod.o

  CC      drivers/acpi/video.mod.o

  CC      drivers/ata/ahci.mod.o

  CC      drivers/ata/acard-ahci.mod.o

  CC      drivers/ata/ahci_platform.mod.o

  CC      drivers/ata/libahci.mod.o

  CC      drivers/ata/libahci_platform.mod.o

  CC      drivers/ata/pata_acpi.mod.o

  CC      drivers/gpu/drm/drm.mod.o

  CC      drivers/gpu/drm/drm_kms_helper.mod.o

  CC      drivers/gpu/drm/ttm/ttm.mod.o

  CC      drivers/gpu/drm/virtio/virtio-gpu.mod.o

  CC      drivers/gpu/drm/vmwgfx/vmwgfx.mod.o

  CC      drivers/hid/hid-generic.mod.o

  CC      drivers/hid/hid.mod.o

  CC      drivers/hid/usbhid/usbhid.mod.o

  CC      drivers/i2c/algos/i2c-algo-bit.mod.o

  CC      drivers/i2c/busses/i2c-piix4.mod.o

  CC      drivers/input/input-leds.mod.o

  CC      drivers/input/joydev.mod.o

  CC      drivers/input/mouse/psmouse.mod.o

  CC      drivers/input/serio/serio_raw.mod.o

  CC      drivers/macintosh/mac_hid.mod.o

  CC      drivers/net/ethernet/intel/e1000/e1000.mod.o

  CC      drivers/video/fbdev/core/fb_sys_fops.mod.o

  CC      drivers/video/fbdev/core/syscopyarea.mod.o

  CC      drivers/video/fbdev/core/sysfillrect.mod.o

  CC      drivers/video/fbdev/core/sysimgblt.mod.o

  CC      drivers/xen/tmem.mod.o

  CC      drivers/xen/xen-privcmd.mod.o

  CC      fs/autofs4/autofs4.mod.o

  CC      kernel/configs.mod.o

  LD [M]  arch/x86/crypto/aes-x86_64.ko

  LD [M]  arch/x86/crypto/aesni-intel.ko

  LD [M]  arch/x86/crypto/crc32-pclmul.ko

  LD [M]  arch/x86/crypto/crct10dif-pclmul.ko

  LD [M]  arch/x86/crypto/ghash-clmulni-intel.ko

  LD [M]  arch/x86/crypto/glue_helper.ko

  LD [M]  arch/x86/events/intel/intel-rapl-perf.ko

  LD [M]  crypto/cryptd.ko

  LD [M]  crypto/crypto_simd.ko

  LD [M]  crypto/pcbc.ko

  LD [M]  drivers/acpi/video.ko

  LD [M]  drivers/ata/acard-ahci.ko

  LD [M]  drivers/ata/ahci.ko

  LD [M]  drivers/ata/ahci_platform.ko

  LD [M]  drivers/ata/libahci.ko

  LD [M]  drivers/ata/libahci_platform.ko

  LD [M]  drivers/ata/pata_acpi.ko

  LD [M]  drivers/gpu/drm/drm.ko

  LD [M]  drivers/gpu/drm/drm_kms_helper.ko

  LD [M]  drivers/gpu/drm/ttm/ttm.ko

  LD [M]  drivers/gpu/drm/virtio/virtio-gpu.ko

  LD [M]  drivers/gpu/drm/vmwgfx/vmwgfx.ko

  LD [M]  drivers/hid/hid-generic.ko

  LD [M]  drivers/hid/hid.ko

  LD [M]  drivers/hid/usbhid/usbhid.ko

  LD [M]  drivers/i2c/busses/i2c-piix4.ko

  LD [M]  drivers/i2c/algos/i2c-algo-bit.ko

  LD [M]  drivers/input/input-leds.ko

  LD [M]  drivers/input/mouse/psmouse.ko

  LD [M]  drivers/input/joydev.ko

  LD [M]  drivers/input/serio/serio_raw.ko

  LD [M]  drivers/macintosh/mac_hid.ko

  LD [M]  drivers/net/ethernet/intel/e1000/e1000.ko

  LD [M]  drivers/video/fbdev/core/syscopyarea.ko

  LD [M]  drivers/video/fbdev/core/fb_sys_fops.ko

  LD [M]  drivers/xen/tmem.ko

  LD [M]  drivers/video/fbdev/core/sysfillrect.ko

  LD [M]  drivers/xen/xen-privcmd.ko

  LD [M]  drivers/video/fbdev/core/sysimgblt.ko

  LD [M]  fs/autofs4/autofs4.ko

  LD [M]  kernel/configs.ko

make[1]: Leaving directory '/usr/src/linux-source-4.15.0'

COLUMNS=150 dpkg -l 'gcc*' perl dpkg 'libc6*' binutils make dpkg-dev |\

 awk '$1 ~ /[hi]i/ { printf("%s-%s\n", $2, $3) }'> debian/stamp/build/info

uname -a >> debian/stamp/build/info

echo using the compiler: >> debian/stamp/build/info

if [ -f include/generated/compile.h ]; then                      \

   grep LINUX_COMPILER include/generated/compile.h |             \

     sed -e 's/.*LINUX_COMPILER "//' -e 's/"$//' >>             \

               debian/stamp/build/info;                                  \

        elif [ -f include/linux/compile.h  ]; then                       \

    grep LINUX_COMPILER include/linux/compile.h |                \

      sed -e 's/.*LINUX_COMPILER "//' -e 's/"$//' >>            \

                debian/stamp/build/info;                                 \

         fi

echo done > debian/stamp/build/kernel

/usr/bin/make -f ./debian/rules 	debian/stamp/binary/pre-linux-image-4.15.18dandj2.15

make[1]: Entering directory '/usr/src/linux-source-4.15.0'

====== making target debian/stamp/install/linux-image-4.15.18dandj2.15 [new prereqs: ]======

This is kernel package version 13.018.

rm -f -r .//usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15 .//usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15.deb

install -p -d -o root -g root  -m  755 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/etc/kernel/postinst.d /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/etc/kernel/preinst.d \

                  /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/etc/kernel/postrm.d /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/etc/kernel/prerm.d

install -p -d -o root -g root  -m  755 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot

install -p -d -o root -g root  -m  755 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/examples

install -p    -o root -g root  -m  644 debian/changelog	/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/changelog.Debian

install -p    -o root -g root  -m  644 Documentation/Changes /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/

test ! -d ./debian/examples/ ||                                     \

          (cd ./debian; tar cf - examples | (cd /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15;  umask 000; tar xsf -));

install -p    -o root -g root  -m  644 ./debian/pkg/image/README    /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/debian.README

install -p    -o root -g root  -m  644 .config	 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot/config-4.15.18dandj2.15

test ! -f debian/stamp/conf/vars                || \

          install -p    -o root -g root  -m  644 debian/stamp/conf/vars  	/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/conf.vars

echo "This was produced by kernel-package version 13.018." > \

	   /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/Buildinfo

chmod 0644 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/Buildinfo

test ! -f       debian/stamp/build/info || \

 install -p    -o root -g root  -m  644 debian/stamp/build/info /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/buildinfo

if test -f README.Debian ; then \

   install -p    -o root -g root  -m  644 README.Debian /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/README.Debian.1st;\

fi

if test -f Debian.src.changelog; then		    \

  install -p    -o root -g root  -m  644 Debian.src.changelog	/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/; \

fi

gzip -9qfr			  /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15

install -p    -o root -g root  -m  644 ./debian/pkg/image/copyright /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/share/doc/linux-image-4.15.18dandj2.15/copyright

restore_upstream_debianization

test ! -f scripts/package/builddeb.kpkg-dist ||	mv -f scripts/package/builddeb.kpkg-dist scripts/package/builddeb

test ! -f scripts/package/Makefile.kpkg-dist ||	mv -f scripts/package/Makefile.kpkg-dist scripts/package/Makefile

/usr/bin/make EXTRAVERSION=dandj2.15 INSTALL_MOD_PATH=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15	              \

	INSTALL_FW_PATH=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/firmware/4.15.18dandj2.15     \

	 ARCH=x86_64 INSTALL_MOD_STRIP=1 modules_install

make[2]: Entering directory '/usr/src/linux-source-4.15.0'

scripts/kconfig/conf  --silentoldconfig Kconfig

security/Kconfig:393:warning: defaults for choice values not supported

security/Kconfig:397:warning: defaults for choice values not supported

security/Kconfig:401:warning: defaults for choice values not supported

security/Kconfig:405:warning: defaults for choice values not supported

security/Kconfig:409:warning: defaults for choice values not supported

  INSTALL arch/x86/crypto/aes-x86_64.ko

  INSTALL arch/x86/crypto/aesni-intel.ko

  INSTALL arch/x86/crypto/crc32-pclmul.ko

  INSTALL arch/x86/crypto/crct10dif-pclmul.ko

  INSTALL arch/x86/crypto/ghash-clmulni-intel.ko

  INSTALL arch/x86/crypto/glue_helper.ko

  INSTALL arch/x86/events/intel/intel-rapl-perf.ko

  INSTALL crypto/cryptd.ko

  INSTALL crypto/crypto_simd.ko

  INSTALL crypto/pcbc.ko

  INSTALL drivers/acpi/video.ko

  INSTALL drivers/ata/acard-ahci.ko

  INSTALL drivers/ata/ahci.ko

  INSTALL drivers/ata/ahci_platform.ko

  INSTALL drivers/ata/libahci.ko

  INSTALL drivers/ata/libahci_platform.ko

  INSTALL drivers/ata/pata_acpi.ko

  INSTALL drivers/gpu/drm/drm.ko

  INSTALL drivers/gpu/drm/drm_kms_helper.ko

  INSTALL drivers/gpu/drm/ttm/ttm.ko

  INSTALL drivers/gpu/drm/virtio/virtio-gpu.ko

  INSTALL drivers/gpu/drm/vmwgfx/vmwgfx.ko

  INSTALL drivers/hid/hid-generic.ko

  INSTALL drivers/hid/hid.ko

  INSTALL drivers/hid/usbhid/usbhid.ko

  INSTALL drivers/i2c/algos/i2c-algo-bit.ko

  INSTALL drivers/i2c/busses/i2c-piix4.ko

  INSTALL drivers/input/input-leds.ko

  INSTALL drivers/input/joydev.ko

  INSTALL drivers/input/mouse/psmouse.ko

  INSTALL drivers/input/serio/serio_raw.ko

  INSTALL drivers/macintosh/mac_hid.ko

  INSTALL drivers/net/ethernet/intel/e1000/e1000.ko

  INSTALL drivers/video/fbdev/core/fb_sys_fops.ko

  INSTALL drivers/video/fbdev/core/syscopyarea.ko

  INSTALL drivers/video/fbdev/core/sysfillrect.ko

  INSTALL drivers/video/fbdev/core/sysimgblt.ko

  INSTALL drivers/xen/tmem.ko

  INSTALL drivers/xen/xen-privcmd.ko

  INSTALL fs/autofs4/autofs4.ko

  INSTALL kernel/configs.ko

  DEPMOD  4.15.18dandj2.15

make[2]: Leaving directory '/usr/src/linux-source-4.15.0'

/usr/bin/make EXTRAVERSION=dandj2.15 INSTALL_MOD_PATH=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15	              \

	INSTALL_FW_PATH=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/firmware/4.15.18dandj2.15     \

	 ARCH=x86_64 INSTALL_MOD_STRIP=1 dtbs || echo "no dtb target"

make[2]: Entering directory '/usr/src/linux-source-4.15.0'

make[2]: *** No rule to make target 'dtbs'.  Stop.

make[2]: Leaving directory '/usr/src/linux-source-4.15.0'

no dtb target

/usr/bin/make EXTRAVERSION=dandj2.15 INSTALL_MOD_PATH=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15	              \

	INSTALL_FW_PATH=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/firmware/4.15.18dandj2.15     \

	 ARCH=x86_64 INSTALL_MOD_STRIP=1                  \

	INSTALL_DTBS_PATH=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/lib/linux-image-4.15.18dandj2.15      \

	dtbs_install || echo "no dtbs_install target"

make[2]: Entering directory '/usr/src/linux-source-4.15.0'

make[2]: *** No rule to make target 'dtbs_install'.  Stop.

make[2]: Leaving directory '/usr/src/linux-source-4.15.0'

no dtbs_install target

test ! -f /lguest ||			     \

    install -p    -o root -g root  -m  644 /lguest /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/lguest

test ! -f /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/lguest ||		   \

    chmod 755 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/lguest

test ! -e /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/source ||			  \

   mv /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/source ./debian/source-link

test ! -e /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/build ||			  \

   mv /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/build ./debian/build-link

test ! -e ./debian/source-link ||					       \

   mv ./debian/source-link /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/source

test ! -e  ./debian/build-link ||					       \

   mv  ./debian/build-link /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/lib/modules/4.15.18dandj2.15/build

/sbin/depmod -q -FSystem.map -b /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15 4.15.18dandj2.15;

depmod: WARNING: Ignored deprecated option -q

test ! -f System.map ||	 cp System.map			       \

		/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot/System.map-4.15.18dandj2.15;

test ! -f System.map ||	 chmod 644			       \

		/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot/System.map-4.15.18dandj2.15;

cp arch/x86/boot/bzImage /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot/vmlinuz-4.15.18dandj2.15

mkdir -p /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/usr/lib/linux-image-4.15.18dandj2.15

restore_upstream_debianization

test ! -f scripts/package/builddeb.kpkg-dist ||	mv -f scripts/package/builddeb.kpkg-dist scripts/package/builddeb

test ! -f scripts/package/Makefile.kpkg-dist ||	mv -f scripts/package/Makefile.kpkg-dist scripts/package/Makefile

chmod 644 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot/vmlinuz-4.15.18dandj2.15;

if test -d /usr/src/linux-source-4.15.0/debian/image.d ; then			  \

     TMPTOP=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15 version=4.15.18dandj2.15 IMAGE_TOP=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15	\

	   run-parts --verbose /usr/src/linux-source-4.15.0/debian/image.d ;	  \

 fi

if [ -x debian/post-install ]; then				  \

	TMPTOP=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15 STEM=linux version=4.15.18dandj2.15	\

	IMAGE_TOP=/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15 debian/post-install;		  \

fi

test ! -f Kerntypes ||	cp Kerntypes				       \

		/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot/Kerntypes-4.15.18dandj2.15

test ! -f Kerntypes ||	chmod 644				       \

		/usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15//boot/Kerntypes-4.15.18dandj2.15

====== making target debian/stamp/binary/pre-linux-image-4.15.18dandj2.15 [new prereqs: linux-image-4.15.18dandj2.15]======



This is kernel package version 13.018.

/usr/bin/make -f ./debian/rules debian/stamp/binary/linux-image-4.15.18dandj2.15

make[2]: Entering directory '/usr/src/linux-source-4.15.0'

====== making target debian/stamp/binary/linux-image-4.15.18dandj2.15 [new prereqs: ]======



This is kernel package version 13.018.

install -p -d -o root -g root  -m  755 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/DEBIAN

sed -e 's/=V/4.15.18dandj2.15/g'    -e 's/=IB//g' \

    -e 's/=ST/linux/g'  -e 's/=R//g' \

            -e 's/=KPV/13.018/g'                       \

    -e 's/=K/vmlinuz/g'   	     \

    -e 's/=I/YES/g'     -e 's,=D,/boot,g'	     \

    -e 's@=A@amd64@g'   \

    -e 's@=B@x86_64@g'     \

  ./debian/pkg/image/postinst > /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/DEBIAN/postinst

chmod 755 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/DEBIAN/postinst

sed -e 's/=V/4.15.18dandj2.15/g'	   -e 's/=IB//g' \

    -e 's/=ST/linux/g'  -e 's/=R//g' \

            -e 's/=KPV/13.018/g'                       \

    -e 's/=K/vmlinuz/g'   	     \

    -e 's/=I/YES/g'     -e 's,=D,/boot,g'	     \

    -e 's@=A@amd64@g'   \

    -e 's@=B@x86_64@g'    \

 ./debian/pkg/image/config > /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/DEBIAN/config

chmod 755 /usr/src/linux-source-4.15.0/debian/linux-image-4.15.18dandj2.15/DEBIAN/config

sed -e 's/=V/4.15.18dandj2.15/g'	   -e 's/=IB//g' \

    -e 's/=ST/linux/g'  -e 's/=R//g' \

            -e 's/=KPV/13.018/g'                       \

    -e 's/=K/vmlinuz/g'  	     \

    -e 's/=I/YES/g'     -e 's,=D,/boot,g'	     \

    -e 's/=MD//g'				     \

    -e 's@=MK@@g' -e 's@=A@amd64@g'   \

    -e 's@=M@@g'    -e 's/=OF//g'  Script started on Mon 29 Apr 2019 05:09:45 PM EDT
]0;root@mradmin-VirtualBox: /home/mradmin/Documentsroot@mradmin-VirtualBox:/home/mradmin/Documents# cd /usr/src

]0;root@mradmin-VirtualBox: /usr/srcroot@mradmin-VirtualBox:/usr/src# ls

[0m[01;34mlinux-headers-4.15.0-43[0m

[01;34mlinux-headers-4.15.0-43-generic[0m

[01;31mlinux-image-4.15.18dandj1.00_4.15.18dandj1.00-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj1.01_4.15.18dandj1.01-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj1.0_4.15.18dandj1.0-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.01_4.15.18dandj2.01-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.03_4.15.18dandj2.03-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.04_4.15.18dandj2.04-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.05_4.15.18dandj2.05-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.07_4.15.18dandj2.07-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.09_4.15.18dandj2.09-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.10_4.15.18dandj2.10-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.11_4.15.18dandj2.11-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.12_4.15.18dandj2.12-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.13_4.15.18dandj2.13-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.14_4.15.18dandj2.14-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj2.15_4.15.18dandj2.15-10.00.Custom_amd64.deb[0m

[01;31mlinux-image-4.15.18dandj_4.15.18dandj-10.00.Custom_amd64.deb[0m

[01;34mlinux-source-4.15.0[0m

]0;root@mradmin-VirtualBox: /usr/srcroot@mradmin-VirtualBox:/usr/src# dpkg -i linux-s[Kimage-4.15.18dandj2.1

linux-image-4.15.18dandj2.10_4.15.18dandj2.10-10.00.Custom_amd64.deb

linux-image-4.15.18dandj2.11_4.15.18dandj2.11-10.00.Custom_amd64.deb

linux-image-4.15.18dandj2.12_4.15.18dandj2.12-10.00.Custom_amd64.deb

linux-image-4.15.18dandj2.13_4.15.18dandj2.13-10.00.Custom_amd64.deb

linux-image-4.15.18dandj2.14_4.15.18dandj2.14-10.00.Custom_amd64.deb

linux-image-4.15.18dandj2.15_4.15.18dandj2.15-10.00.Custom_amd64.deb

]0;root@mradmin-VirtualBox: /usr/srcroot@mradmin-VirtualBox:/usr/src# dpkg -i linux-image-4.15.18dandj2.15_4.15.18dan
ndj2.15-10.00.Custom_amd64.deb 

Selecting previously unselected package linux-image-4.15.18dandj2.15.

(Reading database ... 
(Reading database ... 5%
(Reading database ... 10%
(Reading database ... 15%
(Reading database ... 20%
(Reading database ... 25%
(Reading database ... 30%
(Reading database ... 35%
(Reading database ... 40%
(Reading database ... 45%
(Reading database ... 50%
(Reading database ... 55%
(Reading database ... 60%
(Reading database ... 65%
(Reading database ... 70%
(Reading database ... 75%
(Reading database ... 80%
(Reading database ... 85%
(Reading database ... 90%
(Reading database ... 95%
(Reading database ... 100%
(Reading database ... 167922 files and directories currently installed.)

Preparing to unpack linux-image-4.15.18dandj2.15_4.15.18dandj2.15-10.00.Custom_amd64.deb ...

Examining /etc/kernel/preinst.d/

run-parts: executing /etc/kernel/preinst.d/intel-microcode 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

Done.

Unpacking linux-image-4.15.18dandj2.15 (4.15.18dandj2.15-10.00.Custom) ...

Setting up linux-image-4.15.18dandj2.15 (4.15.18dandj2.15-10.00.Custom) ...

Running depmod.

Examining /etc/kernel/postinst.d.

run-parts: executing /etc/kernel/postinst.d/apt-auto-removal 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/dkms 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/initramfs-tools 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

update-initramfs: Generating /boot/initrd.img-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/pm-utils 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/update-notifier 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/zz-update-grub 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

Generating grub configuration file ...

Found linux image: /boot/vmlinuz-4.15.18dandj2.15

Found initrd image: /boot/initrd.img-4.15.18dandj2.15

Found linux image: /boot/vmlinuz-4.15.18dandj2.14

Found initrd image: /boot/initrd.img-4.15.18dandj2.14

Found linux image: /boot/vmlinuz-4.15.18dandj2.13

Found initrd image: /boot/initrd.img-4.15.18dandj2.13

Found linux image: /boot/vmlinuz-4.15.18dandj2.12

Found initrd image: /boot/initrd.img-4.15.18dandj2.12

Found linux image: /boot/vmlinuz-4.15.18dandj2.11

Found initrd image: /boot/initrd.img-4.15.18dandj2.11

Found linux image: /boot/vmlinuz-4.15.18dandj2.10

Found initrd image: /boot/initrd.img-4.15.18dandj2.10

Found linux image: /boot/vmlinuz-4.15.18dandj2.09

Found initrd image: /boot/initrd.img-4.15.18dandj2.09

Found linux image: /boot/vmlinuz-4.15.18dandj2.07

Found initrd image: /boot/initrd.img-4.15.18dandj2.07

Found linux image: /boot/vmlinuz-4.15.18dandj2.05

Found initrd image: /boot/initrd.img-4.15.18dandj2.05

Found linux image: /boot/vmlinuz-4.15.18dandj2.04

Found initrd image: /boot/initrd.img-4.15.18dandj2.04

Found linux image: /boot/vmlinuz-4.15.18dandj2.03

Found initrd image: /boot/initrd.img-4.15.18dandj2.03

Found linux image: /boot/vmlinuz-4.15.18dandj2.01

Found initrd image: /boot/initrd.img-4.15.18dandj2.01

Found linux image: /boot/vmlinuz-4.15.18dandj1.01

Found initrd image: /boot/initrd.img-4.15.18dandj1.01

Found linux image: /boot/vmlinuz-4.15.18dandj1.0

Found initrd image: /boot/initrd.img-4.15.18dandj1.0

Found linux image: /boot/vmlinuz-4.15.18dandj1.00

Found initrd image: /boot/initrd.img-4.15.18dandj1.00

Found linux image: /boot/vmlinuz-4.15.18dandj

Found initrd image: /boot/initrd.img-4.15.18dandj

Found linux image: /boot/vmlinuz-4.15.0-43-generic

Found initrd image: /boot/initrd.img-4.15.0-43-generic

Found memtest86+ image: /memtest86+.elf

Found memtest86+ image: /memtest86+.bin

done

]0;root@mradmin-VirtualBox: /usr/srcroot@mradmin-VirtualBox:/usr/src# dpkg -i linux-image-4.15.18dandj2.15_4.15.18dan
ndj2.15-10.00.Custom_amd64.deb 

(Reading database ... 
(Reading database ... 5%
(Reading database ... 10%
(Reading database ... 15%
(Reading database ... 20%
(Reading database ... 25%
(Reading database ... 30%
(Reading database ... 35%
(Reading database ... 40%
(Reading database ... 45%
(Reading database ... 50%
(Reading database ... 55%
(Reading database ... 60%
(Reading database ... 65%
(Reading database ... 70%
(Reading database ... 75%
(Reading database ... 80%
(Reading database ... 85%
(Reading database ... 90%
(Reading database ... 95%
(Reading database ... 100%
(Reading database ... 168046 files and directories currently installed.)

Preparing to unpack linux-image-4.15.18dandj2.15_4.15.18dandj2.15-10.00.Custom_amd64.deb ...

[?1049h[1;24r[4l[?25l(B[m[37m[40m[1;24r[H[2J[1;1H[1m[37m[44m                                                                                [2;1H                                                                                [3;1H                                                                                [4;1H                                                                                [5;1H                                                                                [6;1H                                                                                [7;1H                                                                                [8;1H                                                                                [9;1H                                                                                [10;1H                                                                                [11;1H                                                                                [12;1H                                                                                [13;1H                                                                                [14;1H                                                                                [15;1H                                                                                [16;1H                                                                                [17;1H                                                                                [18;1H                                                                                [19;1H                                                                                [20;1H                                                                                [21;1H                                                                                [22;1H                                                                                [23;1H                                                                                [24;1H                                                                               [24;79H [4h [4l[1;1H(B[m[37m[44mPackage configuration[3;2H[30m[47m┌───────────────┤ [31mConfiguring linux-image-4.15.18dandj2.15[30m ├────────────────┐[4;2H│                                                                           │[1m[37m[40m [5;2H(B[m[30m[47m│ You are attempting to install a kernel image (version 4.15.18dandj2.15)    [1m[37m[40m [6;2H(B[m[30m[47m│ However, the directory /lib/modules/4.15.18dandj2.15/kernel still          [1m[37m[40m [7;2H(B[m[30m[47m│ exists.  If this directory belongs to a previous                           [1m[37m[40m [8;2H(B[m[30m[47m│ linux-image-4.15.18dandj2.15 package, and if you have deselected some      [1m[37m[40m [9;2H(B[m[30m[47m│ modules, or installed standalone modules packages, this could be bad.      [1m[37m[40m [10;2H(B[m[30m[47m│                                                                            [1m[37m[40m [11;2H(B[m[30m[47m│ If /lib/modules/4.15.18dandj2.15/kernel belongs to an old install of       [1m[37m[40m [12;2H(B[m[30m[47m│ linux-image-4.15.18dandj2.15, then this is your last chance to abort the   [1m[37m[40m [13;2H(B[m[30m[47m│ installation of this kernel image (nothing has been changed yet).          [1m[37m[40m [14;2H(B[m[30m[47m│                                                                            [1m[37m[40m [15;2H(B[m[30m[47m│ If you know what you are doing, and if you feel that this image should     [1m[37m[40m [16;2H(B[m[30m[47m│ be installed despite this anomaly, Please answer n to the question.        [1m[37m[40m [17;2H(B[m[30m[47m│                                                                            [1m[37m[40m [18;2H(B[m[30m[47m│ Otherwise, I suggest you move /lib/modules/4.15.18dandj2.15/kernel out     [1m[37m[40m [19;2H(B[m[30m[47m│                                                                            [1m[37m[40m [20;2H(B[m[30m[47m│                                  <Ok>                                      [1m[37m[40m [21;2H(B[m[30m[47m│                                                                           │[1m[37m[40m [22;2H(B[m[30m[47m└───────────────────────────────────────────────────────────────────────────┘[1m[37m[40m [23;3H                                                                             [5;4H[20;37H(B[m[37m[41m<Ok>[20;38H[?12l[?25h




[40m(B[m[39;49m
[K
[?1049l[?1049h[1;24r[4l[?25l(B[m[37m[40m[1;24r[H[2J[1;1H[1m[37m[44m                                                                                [2;1H                                                                                [3;1H                                                                                [4;1H                                                                                [5;1H                                                                                [6;1H                                                                                [7;1H                                                                                [8;1H                                                                                [9;1H                                                                                [10;1H                                                                                [11;1H                                                                                [12;1H                                                                                [13;1H                                                                                [14;1H                                                                                [15;1H                                                                                [16;1H                                                                                [17;1H                                                                                [18;1H                                                                                [19;1H                                                                                [20;1H                                                                                [21;1H                                                                                [22;1H                                                                                [23;1H                                                                                [24;1H                                                                               [24;79H [4h [4l[1;1H(B[m[37m[44mPackage configuration[9;9H[30m[47m┌────────┤ [31mConfiguring linux-image-4.15.18dandj2.15[30m ├─────────┐[10;9H│                                                             │[1m[37m[40m [11;9H(B[m[30m[47m│  Stop install since the kernel-image is already installed?  │[1m[37m[40m [12;9H(B[m[30m[47m│                                                             │[1m[37m[40m [13;9H(B[m[30m[47m│                [37m[41m<Yes>[30m[47m                   <No>                 │[1m[37m[40m [14;9H(B[m[30m[47m│                                                             │[1m[37m[40m [15;9H(B[m[30m[47m└─────────────────────────────────────────────────────────────┘[1m[37m[40m [16;10H                                                               [13;27H(B[m[30m[47m<Yes>[19C[37m[41m<No>[13;51H[?12l[?25h[24;1H[40m(B[m[39;49m
[K
[?1049lExamining /etc/kernel/preinst.d/

run-parts: executing /etc/kernel/preinst.d/intel-microcode 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

Done.

Unpacking linux-image-4.15.18dandj2.15 (4.15.18dandj2.15-10.00.Custom) over (4.15.18dandj2.15-10.00.Custom) ...

Examining /etc/kernel/postrm.d .

run-parts: executing /etc/kernel/postrm.d/initramfs-tools 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postrm.d/zz-update-grub 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

Setting up linux-image-4.15.18dandj2.15 (4.15.18dandj2.15-10.00.Custom) ...

Running depmod.

Examining /etc/kernel/postinst.d.

run-parts: executing /etc/kernel/postinst.d/apt-auto-removal 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/dkms 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/initramfs-tools 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

update-initramfs: Generating /boot/initrd.img-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/pm-utils 4.15.18dandj2.15 /boot/vmlinuz-4.15.18dandj2.15

run-parts: executing /etc/kernel/postinst.d/update-notifier 4.15.18dandj2.15 /boot/vmlinuz-4.15.18daScript started on Mon 29 Apr 2019 05:12:36 PM EDT
]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ cat dandjTester.c 

/* dandjTester.c tests the dandjprint, dandjfill, dandjfill2 system calls.

 * Drew Smits and Jason Pruim, for the Kernel Project,

 * CS 232 at Calvin College, April 2019.

 */



#include <stdio.h>

#include <dandjprint.h>

#include <dandjfill.h>

#include <dandjfill2.h>



int main(){

	printf("Invoking print system call...\n");

	long result = dandjprint();

	printf("Print system call returned %ld\n", result);

	printf("Invoking fill system call...\n");

	char myName[20];

	result = dandjfill(myName,20);

	char checkName[5] = "dandj";

	int i;

	int failed = 0;

	for(i=0;i<5;i++){

		if(checkName[i]!=myName[i]) failed = 1;

	}

	if(failed){

		printf("Failed to pass name back");

		return -1;

	}

	printf("Name passed back successfully\n");

	printf("Invoking fill2 system call...\n");



	char userName[32];

	result = dandjfill2(userName,32);

	for(i = 0; i < 32;i++){printf("%c",userName[i]);}

	printf("\nPrint system call returned %ld\n", result);

	return 0;

}]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ gcc -ansi-[K -pedantic -Wall -std=c99 dandjT
Tester.c 

]0;mradmin@mradmin-VirtualBox: ~/Documentsmradmin@mradmin-VirtualBox:~/Documents$ ./a.out 

Invoking print system call...

Print system call returned 0

Invoking fill system call...

Name passed back successfully

Invoking fill2 system call...

mradmin
